

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Nov 22 16:52:50 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	mediumconst
    24  0079FE                     __pmediumconst:
    25                           	opt stack 0
    26  0079FE  00                 	db	0
    27  0079FF                     _Sinewave:
    28                           	opt stack 0
    29  0079FF  0000               	dw	0
    30  007A01  00C9               	dw	201
    31  007A03  0192               	dw	402
    32  007A05  025B               	dw	603
    33  007A07  0324               	dw	804
    34  007A09  03ED               	dw	1005
    35  007A0B  04B6               	dw	1206
    36  007A0D  057E               	dw	1406
    37  007A0F  0647               	dw	1607
    38  007A11  0710               	dw	1808
    39  007A13  07D9               	dw	2009
    40  007A15  08A1               	dw	2209
    41  007A17  096A               	dw	2410
    42  007A19  0A32               	dw	2610
    43  007A1B  0AFB               	dw	2811
    44  007A1D  0BC3               	dw	3011
    45  007A1F  0C8B               	dw	3211
    46  007A21  0D53               	dw	3411
    47  007A23  0E1B               	dw	3611
    48  007A25  0EE3               	dw	3811
    49  007A27  0FAB               	dw	4011
    50  007A29  1072               	dw	4210
    51  007A2B  1139               	dw	4409
    52  007A2D  1200               	dw	4608
    53  007A2F  12C7               	dw	4807
    54  007A31  138E               	dw	5006
    55  007A33  1455               	dw	5205
    56  007A35  151B               	dw	5403
    57  007A37  15E1               	dw	5601
    58  007A39  16A7               	dw	5799
    59  007A3B  176D               	dw	5997
    60  007A3D  1833               	dw	6195
    61  007A3F  18F8               	dw	6392
    62  007A41  19BD               	dw	6589
    63  007A43  1A82               	dw	6786
    64  007A45  1B46               	dw	6982
    65  007A47  1C0B               	dw	7179
    66  007A49  1CCF               	dw	7375
    67  007A4B  1D93               	dw	7571
    68  007A4D  1E56               	dw	7766
    69  007A4F  1F19               	dw	7961
    70  007A51  1FDC               	dw	8156
    71  007A53  209F               	dw	8351
    72  007A55  2161               	dw	8545
    73  007A57  2223               	dw	8739
    74  007A59  22E4               	dw	8932
    75  007A5B  23A6               	dw	9126
    76  007A5D  2467               	dw	9319
    77  007A5F  2527               	dw	9511
    78  007A61  25E7               	dw	9703
    79  007A63  26A7               	dw	9895
    80  007A65  2767               	dw	10087
    81  007A67  2826               	dw	10278
    82  007A69  28E5               	dw	10469
    83  007A6B  29A3               	dw	10659
    84  007A6D  2A61               	dw	10849
    85  007A6F  2B1E               	dw	11038
    86  007A71  2BDB               	dw	11227
    87  007A73  2C98               	dw	11416
    88  007A75  2D54               	dw	11604
    89  007A77  2E10               	dw	11792
    90  007A79  2ECC               	dw	11980
    91  007A7B  2F86               	dw	12166
    92  007A7D  3041               	dw	12353
    93  007A7F  30FB               	dw	12539
    94  007A81  31B4               	dw	12724
    95  007A83  326D               	dw	12909
    96  007A85  3326               	dw	13094
    97  007A87  33DE               	dw	13278
    98  007A89  3496               	dw	13462
    99  007A8B  354D               	dw	13645
   100  007A8D  3603               	dw	13827
   101  007A8F  36B9               	dw	14009
   102  007A91  376F               	dw	14191
   103  007A93  3824               	dw	14372
   104  007A95  38D8               	dw	14552
   105  007A97  398C               	dw	14732
   106  007A99  3A3F               	dw	14911
   107  007A9B  3AF2               	dw	15090
   108  007A9D  3BA4               	dw	15268
   109  007A9F  3C56               	dw	15446
   110  007AA1  3D07               	dw	15623
   111  007AA3  3DB7               	dw	15799
   112  007AA5  3E67               	dw	15975
   113  007AA7  3F16               	dw	16150
   114  007AA9  3FC5               	dw	16325
   115  007AAB  4073               	dw	16499
   116  007AAD  4120               	dw	16672
   117  007AAF  41CD               	dw	16845
   118  007AB1  4279               	dw	17017
   119  007AB3  4325               	dw	17189
   120  007AB5  43D0               	dw	17360
   121  007AB7  447A               	dw	17530
   122  007AB9  4523               	dw	17699
   123  007ABB  45CC               	dw	17868
   124  007ABD  4674               	dw	18036
   125  007ABF  471C               	dw	18204
   126  007AC1  47C3               	dw	18371
   127  007AC3  4869               	dw	18537
   128  007AC5  490E               	dw	18702
   129  007AC7  49B3               	dw	18867
   130  007AC9  4A57               	dw	19031
   131  007ACB  4AFA               	dw	19194
   132  007ACD  4B9D               	dw	19357
   133  007ACF  4C3F               	dw	19519
   134  007AD1  4CE0               	dw	19680
   135  007AD3  4D80               	dw	19840
   136  007AD5  4E20               	dw	20000
   137  007AD7  4EBF               	dw	20159
   138  007AD9  4F5D               	dw	20317
   139  007ADB  4FFA               	dw	20474
   140  007ADD  5097               	dw	20631
   141  007ADF  5133               	dw	20787
   142  007AE1  51CE               	dw	20942
   143  007AE3  5268               	dw	21096
   144  007AE5  5301               	dw	21249
   145  007AE7  539A               	dw	21402
   146  007AE9  5432               	dw	21554
   147  007AEB  54C9               	dw	21705
   148  007AED  555F               	dw	21855
   149  007AEF  55F4               	dw	22004
   150  007AF1  5689               	dw	22153
   151  007AF3  571D               	dw	22301
   152  007AF5  57B0               	dw	22448
   153  007AF7  5842               	dw	22594
   154  007AF9  58D3               	dw	22739
   155  007AFB  5963               	dw	22883
   156  007AFD  59F3               	dw	23027
   157  007AFF  5A81               	dw	23169
   158  007B01  5B0F               	dw	23311
   159  007B03  5B9C               	dw	23452
   160  007B05  5C28               	dw	23592
   161  007B07  5CB3               	dw	23731
   162  007B09  5D3D               	dw	23869
   163  007B0B  5DC6               	dw	24006
   164  007B0D  5E4F               	dw	24143
   165  007B0F  5ED6               	dw	24278
   166  007B11  5F5D               	dw	24413
   167  007B13  5FE2               	dw	24546
   168  007B15  6067               	dw	24679
   169  007B17  60EB               	dw	24811
   170  007B19  616E               	dw	24942
   171  007B1B  61F0               	dw	25072
   172  007B1D  6271               	dw	25201
   173  007B1F  62F1               	dw	25329
   174  007B21  6370               	dw	25456
   175  007B23  63EE               	dw	25582
   176  007B25  646B               	dw	25707
   177  007B27  64E7               	dw	25831
   178  007B29  6562               	dw	25954
   179  007B2B  65DD               	dw	26077
   180  007B2D  6656               	dw	26198
   181  007B2F  66CE               	dw	26318
   182  007B31  6745               	dw	26437
   183  007B33  67BC               	dw	26556
   184  007B35  6831               	dw	26673
   185  007B37  68A5               	dw	26789
   186  007B39  6919               	dw	26905
   187  007B3B  698B               	dw	27019
   188  007B3D  69FC               	dw	27132
   189  007B3F  6A6C               	dw	27244
   190  007B41  6ADB               	dw	27355
   191  007B43  6B4A               	dw	27466
   192  007B45  6BB7               	dw	27575
   193  007B47  6C23               	dw	27683
   194  007B49  6C8E               	dw	27790
   195  007B4B  6CF8               	dw	27896
   196  007B4D  6D61               	dw	28001
   197  007B4F  6DC9               	dw	28105
   198  007B51  6E30               	dw	28208
   199  007B53  6E95               	dw	28309
   200  007B55  6EFA               	dw	28410
   201  007B57  6F5E               	dw	28510
   202  007B59  6FC0               	dw	28608
   203  007B5B  7022               	dw	28706
   204  007B5D  7082               	dw	28802
   205  007B5F  70E1               	dw	28897
   206  007B61  7140               	dw	28992
   207  007B63  719D               	dw	29085
   208  007B65  71F9               	dw	29177
   209  007B67  7254               	dw	29268
   210  007B69  72AE               	dw	29358
   211  007B6B  7306               	dw	29446
   212  007B6D  735E               	dw	29534
   213  007B6F  73B5               	dw	29621
   214  007B71  740A               	dw	29706
   215  007B73  745E               	dw	29790
   216  007B75  74B1               	dw	29873
   217  007B77  7503               	dw	29955
   218  007B79  7554               	dw	30036
   219  007B7B  75A4               	dw	30116
   220  007B7D  75F3               	dw	30195
   221  007B7F  7640               	dw	30272
   222  007B81  768D               	dw	30349
   223  007B83  76D8               	dw	30424
   224  007B85  7722               	dw	30498
   225  007B87  776B               	dw	30571
   226  007B89  77B3               	dw	30643
   227  007B8B  77F9               	dw	30713
   228  007B8D  783F               	dw	30783
   229  007B8F  7883               	dw	30851
   230  007B91  78C6               	dw	30918
   231  007B93  7908               	dw	30984
   232  007B95  7949               	dw	31049
   233  007B97  7989               	dw	31113
   234  007B99  79C7               	dw	31175
   235  007B9B  7A04               	dw	31236
   236  007B9D  7A41               	dw	31297
   237  007B9F  7A7C               	dw	31356
   238  007BA1  7AB5               	dw	31413
   239  007BA3  7AEE               	dw	31470
   240  007BA5  7B25               	dw	31525
   241  007BA7  7B5C               	dw	31580
   242  007BA9  7B91               	dw	31633
   243  007BAB  7BC4               	dw	31684
   244  007BAD  7BF7               	dw	31735
   245  007BAF  7C29               	dw	31785
   246  007BB1  7C59               	dw	31833
   247  007BB3  7C88               	dw	31880
   248  007BB5  7CB6               	dw	31926
   249  007BB7  7CE2               	dw	31970
   250  007BB9  7D0E               	dw	32014
   251  007BBB  7D38               	dw	32056
   252  007BBD  7D61               	dw	32097
   253  007BBF  7D89               	dw	32137
   254  007BC1  7DB0               	dw	32176
   255  007BC3  7DD5               	dw	32213
   256  007BC5  7DF9               	dw	32249
   257  007BC7  7E1C               	dw	32284
   258  007BC9  7E3E               	dw	32318
   259  007BCB  7E5E               	dw	32350
   260  007BCD  7E7E               	dw	32382
   261  007BCF  7E9C               	dw	32412
   262  007BD1  7EB9               	dw	32441
   263  007BD3  7ED4               	dw	32468
   264  007BD5  7EEF               	dw	32495
   265  007BD7  7F08               	dw	32520
   266  007BD9  7F20               	dw	32544
   267  007BDB  7F37               	dw	32567
   268  007BDD  7F4C               	dw	32588
   269  007BDF  7F61               	dw	32609
   270  007BE1  7F74               	dw	32628
   271  007BE3  7F86               	dw	32646
   272  007BE5  7F96               	dw	32662
   273  007BE7  7FA6               	dw	32678
   274  007BE9  7FB4               	dw	32692
   275  007BEB  7FC1               	dw	32705
   276  007BED  7FCD               	dw	32717
   277  007BEF  7FD7               	dw	32727
   278  007BF1  7FE0               	dw	32736
   279  007BF3  7FE8               	dw	32744
   280  007BF5  7FEF               	dw	32751
   281  007BF7  7FF5               	dw	32757
   282  007BF9  7FF9               	dw	32761
   283  007BFB  7FFC               	dw	32764
   284  007BFD  7FFE               	dw	32766
   285  007BFF  7FFF               	dw	32767
   286  007C01  7FFE               	dw	32766
   287  007C03  7FFC               	dw	32764
   288  007C05  7FF9               	dw	32761
   289  007C07  7FF5               	dw	32757
   290  007C09  7FEF               	dw	32751
   291  007C0B  7FE8               	dw	32744
   292  007C0D  7FE0               	dw	32736
   293  007C0F  7FD7               	dw	32727
   294  007C11  7FCD               	dw	32717
   295  007C13  7FC1               	dw	32705
   296  007C15  7FB4               	dw	32692
   297  007C17  7FA6               	dw	32678
   298  007C19  7F96               	dw	32662
   299  007C1B  7F86               	dw	32646
   300  007C1D  7F74               	dw	32628
   301  007C1F  7F61               	dw	32609
   302  007C21  7F4C               	dw	32588
   303  007C23  7F37               	dw	32567
   304  007C25  7F20               	dw	32544
   305  007C27  7F08               	dw	32520
   306  007C29  7EEF               	dw	32495
   307  007C2B  7ED4               	dw	32468
   308  007C2D  7EB9               	dw	32441
   309  007C2F  7E9C               	dw	32412
   310  007C31  7E7E               	dw	32382
   311  007C33  7E5E               	dw	32350
   312  007C35  7E3E               	dw	32318
   313  007C37  7E1C               	dw	32284
   314  007C39  7DF9               	dw	32249
   315  007C3B  7DD5               	dw	32213
   316  007C3D  7DB0               	dw	32176
   317  007C3F  7D89               	dw	32137
   318  007C41  7D61               	dw	32097
   319  007C43  7D38               	dw	32056
   320  007C45  7D0E               	dw	32014
   321  007C47  7CE2               	dw	31970
   322  007C49  7CB6               	dw	31926
   323  007C4B  7C88               	dw	31880
   324  007C4D  7C59               	dw	31833
   325  007C4F  7C29               	dw	31785
   326  007C51  7BF7               	dw	31735
   327  007C53  7BC4               	dw	31684
   328  007C55  7B91               	dw	31633
   329  007C57  7B5C               	dw	31580
   330  007C59  7B25               	dw	31525
   331  007C5B  7AEE               	dw	31470
   332  007C5D  7AB5               	dw	31413
   333  007C5F  7A7C               	dw	31356
   334  007C61  7A41               	dw	31297
   335  007C63  7A04               	dw	31236
   336  007C65  79C7               	dw	31175
   337  007C67  7989               	dw	31113
   338  007C69  7949               	dw	31049
   339  007C6B  7908               	dw	30984
   340  007C6D  78C6               	dw	30918
   341  007C6F  7883               	dw	30851
   342  007C71  783F               	dw	30783
   343  007C73  77F9               	dw	30713
   344  007C75  77B3               	dw	30643
   345  007C77  776B               	dw	30571
   346  007C79  7722               	dw	30498
   347  007C7B  76D8               	dw	30424
   348  007C7D  768D               	dw	30349
   349  007C7F  7640               	dw	30272
   350  007C81  75F3               	dw	30195
   351  007C83  75A4               	dw	30116
   352  007C85  7554               	dw	30036
   353  007C87  7503               	dw	29955
   354  007C89  74B1               	dw	29873
   355  007C8B  745E               	dw	29790
   356  007C8D  740A               	dw	29706
   357  007C8F  73B5               	dw	29621
   358  007C91  735E               	dw	29534
   359  007C93  7306               	dw	29446
   360  007C95  72AE               	dw	29358
   361  007C97  7254               	dw	29268
   362  007C99  71F9               	dw	29177
   363  007C9B  719D               	dw	29085
   364  007C9D  7140               	dw	28992
   365  007C9F  70E1               	dw	28897
   366  007CA1  7082               	dw	28802
   367  007CA3  7022               	dw	28706
   368  007CA5  6FC0               	dw	28608
   369  007CA7  6F5E               	dw	28510
   370  007CA9  6EFA               	dw	28410
   371  007CAB  6E95               	dw	28309
   372  007CAD  6E30               	dw	28208
   373  007CAF  6DC9               	dw	28105
   374  007CB1  6D61               	dw	28001
   375  007CB3  6CF8               	dw	27896
   376  007CB5  6C8E               	dw	27790
   377  007CB7  6C23               	dw	27683
   378  007CB9  6BB7               	dw	27575
   379  007CBB  6B4A               	dw	27466
   380  007CBD  6ADB               	dw	27355
   381  007CBF  6A6C               	dw	27244
   382  007CC1  69FC               	dw	27132
   383  007CC3  698B               	dw	27019
   384  007CC5  6919               	dw	26905
   385  007CC7  68A5               	dw	26789
   386  007CC9  6831               	dw	26673
   387  007CCB  67BC               	dw	26556
   388  007CCD  6745               	dw	26437
   389  007CCF  66CE               	dw	26318
   390  007CD1  6656               	dw	26198
   391  007CD3  65DD               	dw	26077
   392  007CD5  6562               	dw	25954
   393  007CD7  64E7               	dw	25831
   394  007CD9  646B               	dw	25707
   395  007CDB  63EE               	dw	25582
   396  007CDD  6370               	dw	25456
   397  007CDF  62F1               	dw	25329
   398  007CE1  6271               	dw	25201
   399  007CE3  61F0               	dw	25072
   400  007CE5  616E               	dw	24942
   401  007CE7  60EB               	dw	24811
   402  007CE9  6067               	dw	24679
   403  007CEB  5FE2               	dw	24546
   404  007CED  5F5D               	dw	24413
   405  007CEF  5ED6               	dw	24278
   406  007CF1  5E4F               	dw	24143
   407  007CF3  5DC6               	dw	24006
   408  007CF5  5D3D               	dw	23869
   409  007CF7  5CB3               	dw	23731
   410  007CF9  5C28               	dw	23592
   411  007CFB  5B9C               	dw	23452
   412  007CFD  5B0F               	dw	23311
   413  007CFF  5A81               	dw	23169
   414  007D01  59F3               	dw	23027
   415  007D03  5963               	dw	22883
   416  007D05  58D3               	dw	22739
   417  007D07  5842               	dw	22594
   418  007D09  57B0               	dw	22448
   419  007D0B  571D               	dw	22301
   420  007D0D  5689               	dw	22153
   421  007D0F  55F4               	dw	22004
   422  007D11  555F               	dw	21855
   423  007D13  54C9               	dw	21705
   424  007D15  5432               	dw	21554
   425  007D17  539A               	dw	21402
   426  007D19  5301               	dw	21249
   427  007D1B  5268               	dw	21096
   428  007D1D  51CE               	dw	20942
   429  007D1F  5133               	dw	20787
   430  007D21  5097               	dw	20631
   431  007D23  4FFA               	dw	20474
   432  007D25  4F5D               	dw	20317
   433  007D27  4EBF               	dw	20159
   434  007D29  4E20               	dw	20000
   435  007D2B  4D80               	dw	19840
   436  007D2D  4CE0               	dw	19680
   437  007D2F  4C3F               	dw	19519
   438  007D31  4B9D               	dw	19357
   439  007D33  4AFA               	dw	19194
   440  007D35  4A57               	dw	19031
   441  007D37  49B3               	dw	18867
   442  007D39  490E               	dw	18702
   443  007D3B  4869               	dw	18537
   444  007D3D  47C3               	dw	18371
   445  007D3F  471C               	dw	18204
   446  007D41  4674               	dw	18036
   447  007D43  45CC               	dw	17868
   448  007D45  4523               	dw	17699
   449  007D47  447A               	dw	17530
   450  007D49  43D0               	dw	17360
   451  007D4B  4325               	dw	17189
   452  007D4D  4279               	dw	17017
   453  007D4F  41CD               	dw	16845
   454  007D51  4120               	dw	16672
   455  007D53  4073               	dw	16499
   456  007D55  3FC5               	dw	16325
   457  007D57  3F16               	dw	16150
   458  007D59  3E67               	dw	15975
   459  007D5B  3DB7               	dw	15799
   460  007D5D  3D07               	dw	15623
   461  007D5F  3C56               	dw	15446
   462  007D61  3BA4               	dw	15268
   463  007D63  3AF2               	dw	15090
   464  007D65  3A3F               	dw	14911
   465  007D67  398C               	dw	14732
   466  007D69  38D8               	dw	14552
   467  007D6B  3824               	dw	14372
   468  007D6D  376F               	dw	14191
   469  007D6F  36B9               	dw	14009
   470  007D71  3603               	dw	13827
   471  007D73  354D               	dw	13645
   472  007D75  3496               	dw	13462
   473  007D77  33DE               	dw	13278
   474  007D79  3326               	dw	13094
   475  007D7B  326D               	dw	12909
   476  007D7D  31B4               	dw	12724
   477  007D7F  30FB               	dw	12539
   478  007D81  3041               	dw	12353
   479  007D83  2F86               	dw	12166
   480  007D85  2ECC               	dw	11980
   481  007D87  2E10               	dw	11792
   482  007D89  2D54               	dw	11604
   483  007D8B  2C98               	dw	11416
   484  007D8D  2BDB               	dw	11227
   485  007D8F  2B1E               	dw	11038
   486  007D91  2A61               	dw	10849
   487  007D93  29A3               	dw	10659
   488  007D95  28E5               	dw	10469
   489  007D97  2826               	dw	10278
   490  007D99  2767               	dw	10087
   491  007D9B  26A7               	dw	9895
   492  007D9D  25E7               	dw	9703
   493  007D9F  2527               	dw	9511
   494  007DA1  2467               	dw	9319
   495  007DA3  23A6               	dw	9126
   496  007DA5  22E4               	dw	8932
   497  007DA7  2223               	dw	8739
   498  007DA9  2161               	dw	8545
   499  007DAB  209F               	dw	8351
   500  007DAD  1FDC               	dw	8156
   501  007DAF  1F19               	dw	7961
   502  007DB1  1E56               	dw	7766
   503  007DB3  1D93               	dw	7571
   504  007DB5  1CCF               	dw	7375
   505  007DB7  1C0B               	dw	7179
   506  007DB9  1B46               	dw	6982
   507  007DBB  1A82               	dw	6786
   508  007DBD  19BD               	dw	6589
   509  007DBF  18F8               	dw	6392
   510  007DC1  1833               	dw	6195
   511  007DC3  176D               	dw	5997
   512  007DC5  16A7               	dw	5799
   513  007DC7  15E1               	dw	5601
   514  007DC9  151B               	dw	5403
   515  007DCB  1455               	dw	5205
   516  007DCD  138E               	dw	5006
   517  007DCF  12C7               	dw	4807
   518  007DD1  1200               	dw	4608
   519  007DD3  1139               	dw	4409
   520  007DD5  1072               	dw	4210
   521  007DD7  0FAB               	dw	4011
   522  007DD9  0EE3               	dw	3811
   523  007DDB  0E1B               	dw	3611
   524  007DDD  0D53               	dw	3411
   525  007DDF  0C8B               	dw	3211
   526  007DE1  0BC3               	dw	3011
   527  007DE3  0AFB               	dw	2811
   528  007DE5  0A32               	dw	2610
   529  007DE7  096A               	dw	2410
   530  007DE9  08A1               	dw	2209
   531  007DEB  07D9               	dw	2009
   532  007DED  0710               	dw	1808
   533  007DEF  0647               	dw	1607
   534  007DF1  057E               	dw	1406
   535  007DF3  04B6               	dw	1206
   536  007DF5  03ED               	dw	1005
   537  007DF7  0324               	dw	804
   538  007DF9  025B               	dw	603
   539  007DFB  0192               	dw	402
   540  007DFD  00C9               	dw	201
   541  007DFF  0000               	dw	0
   542  007E01  FF37               	dw	65335
   543  007E03  FE6E               	dw	65134
   544  007E05  FDA5               	dw	64933
   545  007E07  FCDC               	dw	64732
   546  007E09  FC13               	dw	64531
   547  007E0B  FB4A               	dw	64330
   548  007E0D  FA82               	dw	64130
   549  007E0F  F9B9               	dw	63929
   550  007E11  F8F0               	dw	63728
   551  007E13  F827               	dw	63527
   552  007E15  F75F               	dw	63327
   553  007E17  F696               	dw	63126
   554  007E19  F5CE               	dw	62926
   555  007E1B  F505               	dw	62725
   556  007E1D  F43D               	dw	62525
   557  007E1F  F375               	dw	62325
   558  007E21  F2AD               	dw	62125
   559  007E23  F1E5               	dw	61925
   560  007E25  F11D               	dw	61725
   561  007E27  F055               	dw	61525
   562  007E29  EF8E               	dw	61326
   563  007E2B  EEC7               	dw	61127
   564  007E2D  EE00               	dw	60928
   565  007E2F  ED39               	dw	60729
   566  007E31  EC72               	dw	60530
   567  007E33  EBAB               	dw	60331
   568  007E35  EAE5               	dw	60133
   569  007E37  EA1F               	dw	59935
   570  007E39  E959               	dw	59737
   571  007E3B  E893               	dw	59539
   572  007E3D  E7CD               	dw	59341
   573  007E3F  E708               	dw	59144
   574  007E41  E643               	dw	58947
   575  007E43  E57E               	dw	58750
   576  007E45  E4BA               	dw	58554
   577  007E47  E3F5               	dw	58357
   578  007E49  E331               	dw	58161
   579  007E4B  E26D               	dw	57965
   580  007E4D  E1AA               	dw	57770
   581  007E4F  E0E7               	dw	57575
   582  007E51  E024               	dw	57380
   583  007E53  DF61               	dw	57185
   584  007E55  DE9F               	dw	56991
   585  007E57  DDDD               	dw	56797
   586  007E59  DD1C               	dw	56604
   587  007E5B  DC5A               	dw	56410
   588  007E5D  DB99               	dw	56217
   589  007E5F  DAD9               	dw	56025
   590  007E61  DA19               	dw	55833
   591  007E63  D959               	dw	55641
   592  007E65  D899               	dw	55449
   593  007E67  D7DA               	dw	55258
   594  007E69  D71B               	dw	55067
   595  007E6B  D65D               	dw	54877
   596  007E6D  D59F               	dw	54687
   597  007E6F  D4E2               	dw	54498
   598  007E71  D425               	dw	54309
   599  007E73  D368               	dw	54120
   600  007E75  D2AC               	dw	53932
   601  007E77  D1F0               	dw	53744
   602  007E79  D134               	dw	53556
   603  007E7B  D07A               	dw	53370
   604  007E7D  CFBF               	dw	53183
   605  007E7F  CF05               	dw	52997
   606  007E81  CE4C               	dw	52812
   607  007E83  CD93               	dw	52627
   608  007E85  CCDA               	dw	52442
   609  007E87  CC22               	dw	52258
   610  007E89  CB6A               	dw	52074
   611  007E8B  CAB3               	dw	51891
   612  007E8D  C9FD               	dw	51709
   613  007E8F  C947               	dw	51527
   614  007E91  C891               	dw	51345
   615  007E93  C7DC               	dw	51164
   616  007E95  C728               	dw	50984
   617  007E97  C674               	dw	50804
   618  007E99  C5C1               	dw	50625
   619  007E9B  C50E               	dw	50446
   620  007E9D  C45C               	dw	50268
   621  007E9F  C3AA               	dw	50090
   622  007EA1  C2F9               	dw	49913
   623  007EA3  C249               	dw	49737
   624  007EA5  C199               	dw	49561
   625  007EA7  C0EA               	dw	49386
   626  007EA9  C03B               	dw	49211
   627  007EAB  BF8D               	dw	49037
   628  007EAD  BEE0               	dw	48864
   629  007EAF  BE33               	dw	48691
   630  007EB1  BD87               	dw	48519
   631  007EB3  BCDB               	dw	48347
   632  007EB5  BC30               	dw	48176
   633  007EB7  BB86               	dw	48006
   634  007EB9  BADD               	dw	47837
   635  007EBB  BA34               	dw	47668
   636  007EBD  B98C               	dw	47500
   637  007EBF  B8E4               	dw	47332
   638  007EC1  B83D               	dw	47165
   639  007EC3  B797               	dw	46999
   640  007EC5  B6F2               	dw	46834
   641  007EC7  B64D               	dw	46669
   642  007EC9  B5A9               	dw	46505
   643  007ECB  B506               	dw	46342
   644  007ECD  B463               	dw	46179
   645  007ECF  B3C1               	dw	46017
   646  007ED1  B320               	dw	45856
   647  007ED3  B280               	dw	45696
   648  007ED5  B1E0               	dw	45536
   649  007ED7  B141               	dw	45377
   650  007ED9  B0A3               	dw	45219
   651  007EDB  B006               	dw	45062
   652  007EDD  AF69               	dw	44905
   653  007EDF  AECD               	dw	44749
   654  007EE1  AE32               	dw	44594
   655  007EE3  AD98               	dw	44440
   656  007EE5  ACFF               	dw	44287
   657  007EE7  AC66               	dw	44134
   658  007EE9  ABCE               	dw	43982
   659  007EEB  AB37               	dw	43831
   660  007EED  AAA1               	dw	43681
   661  007EEF  AA0C               	dw	43532
   662  007EF1  A977               	dw	43383
   663  007EF3  A8E3               	dw	43235
   664  007EF5  A850               	dw	43088
   665  007EF7  A7BE               	dw	42942
   666  007EF9  A72D               	dw	42797
   667  007EFB  A69D               	dw	42653
   668  007EFD  A60D               	dw	42509
   669  007EFF  A57F               	dw	42367
   670  007F01  A4F1               	dw	42225
   671  007F03  A464               	dw	42084
   672  007F05  A3D8               	dw	41944
   673  007F07  A34D               	dw	41805
   674  007F09  A2C3               	dw	41667
   675  007F0B  A23A               	dw	41530
   676  007F0D  A1B1               	dw	41393
   677  007F0F  A12A               	dw	41258
   678  007F11  A0A3               	dw	41123
   679  007F13  A01E               	dw	40990
   680  007F15  9F99               	dw	40857
   681  007F17  9F15               	dw	40725
   682  007F19  9E92               	dw	40594
   683  007F1B  9E10               	dw	40464
   684  007F1D  9D8F               	dw	40335
   685  007F1F  9D0F               	dw	40207
   686  007F21  9C90               	dw	40080
   687  007F23  9C12               	dw	39954
   688  007F25  9B95               	dw	39829
   689  007F27  9B19               	dw	39705
   690  007F29  9A9E               	dw	39582
   691  007F2B  9A23               	dw	39459
   692  007F2D  99AA               	dw	39338
   693  007F2F  9932               	dw	39218
   694  007F31  98BB               	dw	39099
   695  007F33  9844               	dw	38980
   696  007F35  97CF               	dw	38863
   697  007F37  975B               	dw	38747
   698  007F39  96E7               	dw	38631
   699  007F3B  9675               	dw	38517
   700  007F3D  9604               	dw	38404
   701  007F3F  9594               	dw	38292
   702  007F41  9525               	dw	38181
   703  007F43  94B6               	dw	38070
   704  007F45  9449               	dw	37961
   705  007F47  93DD               	dw	37853
   706  007F49  9372               	dw	37746
   707  007F4B  9308               	dw	37640
   708  007F4D  929F               	dw	37535
   709  007F4F  9237               	dw	37431
   710  007F51  91D0               	dw	37328
   711  007F53  916B               	dw	37227
   712  007F55  9106               	dw	37126
   713  007F57  90A2               	dw	37026
   714  007F59  9040               	dw	36928
   715  007F5B  8FDE               	dw	36830
   716  007F5D  8F7E               	dw	36734
   717  007F5F  8F1F               	dw	36639
   718  007F61  8EC0               	dw	36544
   719  007F63  8E63               	dw	36451
   720  007F65  8E07               	dw	36359
   721  007F67  8DAC               	dw	36268
   722  007F69  8D52               	dw	36178
   723  007F6B  8CFA               	dw	36090
   724  007F6D  8CA2               	dw	36002
   725  007F6F  8C4B               	dw	35915
   726  007F71  8BF6               	dw	35830
   727  007F73  8BA2               	dw	35746
   728  007F75  8B4F               	dw	35663
   729  007F77  8AFD               	dw	35581
   730  007F79  8AAC               	dw	35500
   731  007F7B  8A5C               	dw	35420
   732  007F7D  8A0D               	dw	35341
   733  007F7F  89C0               	dw	35264
   734  007F81  8973               	dw	35187
   735  007F83  8928               	dw	35112
   736  007F85  88DE               	dw	35038
   737  007F87  8895               	dw	34965
   738  007F89  884D               	dw	34893
   739  007F8B  8807               	dw	34823
   740  007F8D  87C1               	dw	34753
   741  007F8F  877D               	dw	34685
   742  007F91  873A               	dw	34618
   743  007F93  86F8               	dw	34552
   744  007F95  86B7               	dw	34487
   745  007F97  8677               	dw	34423
   746  007F99  8639               	dw	34361
   747  007F9B  85FC               	dw	34300
   748  007F9D  85BF               	dw	34239
   749  007F9F  8584               	dw	34180
   750  007FA1  854B               	dw	34123
   751  007FA3  8512               	dw	34066
   752  007FA5  84DB               	dw	34011
   753  007FA7  84A4               	dw	33956
   754  007FA9  846F               	dw	33903
   755  007FAB  843C               	dw	33852
   756  007FAD  8409               	dw	33801
   757  007FAF  83D7               	dw	33751
   758  007FB1  83A7               	dw	33703
   759  007FB3  8378               	dw	33656
   760  007FB5  834A               	dw	33610
   761  007FB7  831E               	dw	33566
   762  007FB9  82F2               	dw	33522
   763  007FBB  82C8               	dw	33480
   764  007FBD  829F               	dw	33439
   765  007FBF  8277               	dw	33399
   766  007FC1  8250               	dw	33360
   767  007FC3  822B               	dw	33323
   768  007FC5  8207               	dw	33287
   769  007FC7  81E4               	dw	33252
   770  007FC9  81C2               	dw	33218
   771  007FCB  81A2               	dw	33186
   772  007FCD  8182               	dw	33154
   773  007FCF  8164               	dw	33124
   774  007FD1  8147               	dw	33095
   775  007FD3  812C               	dw	33068
   776  007FD5  8111               	dw	33041
   777  007FD7  80F8               	dw	33016
   778  007FD9  80E0               	dw	32992
   779  007FDB  80C9               	dw	32969
   780  007FDD  80B4               	dw	32948
   781  007FDF  809F               	dw	32927
   782  007FE1  808C               	dw	32908
   783  007FE3  807A               	dw	32890
   784  007FE5  806A               	dw	32874
   785  007FE7  805A               	dw	32858
   786  007FE9  804C               	dw	32844
   787  007FEB  803F               	dw	32831
   788  007FED  8033               	dw	32819
   789  007FEF  8029               	dw	32809
   790  007FF1  8020               	dw	32800
   791  007FF3  8018               	dw	32792
   792  007FF5  8011               	dw	32785
   793  007FF7  800B               	dw	32779
   794  007FF9  8007               	dw	32775
   795  007FFB  8004               	dw	32772
   796  007FFD  8002               	dw	32770
   797  007FFF                     __end_of_Sinewave:
   798                           	opt stack 0
   799  0000                     _ADCON0	set	4034
   800  0000                     _ADCON0bits	set	4034
   801  0000                     _ADCON1	set	4033
   802  0000                     _ADCON2	set	4032
   803  0000                     _ADRESH	set	4036
   804  0000                     _ADRESL	set	4035
   805  0000                     _INTCONbits	set	4082
   806  0000                     _LATC	set	3979
   807  0000                     _OSCCONbits	set	4051
   808  0000                     _OSCTUNEbits	set	3995
   809  0000                     _PIE1bits	set	3997
   810  0000                     _PIR1bits	set	3998
   811  0000                     _TRISC	set	3988
   812                           
   813                           ; #config settings
   814  007FFF  00                 	db	0	; dummy byte at the end
   815  0000                     
   816                           	psect	cinit
   817  006CC4                     __pcinit:
   818                           	opt stack 0
   819  006CC4                     start_initialization:
   820                           	opt stack 0
   821  006CC4                     __initialization:
   822                           	opt stack 0
   823                           
   824                           ; Clear objects allocated to BANK1 (128 bytes)
   825  006CC4  EE01  F000         	lfsr	0,__pbssBANK1
   826  006CC8  0E80               	movlw	128
   827  006CCA                     clear_0:
   828  006CCA  6AEE               	clrf	postinc0,c
   829  006CCC  06E8               	decf	wreg,f,c
   830  006CCE  E1FD               	bnz	clear_0
   831                           
   832                           ; Clear objects allocated to BANK0 (128 bytes)
   833  006CD0  EE00  F060         	lfsr	0,__pbssBANK0
   834  006CD4  0E80               	movlw	128
   835  006CD6                     clear_1:
   836  006CD6  6AEE               	clrf	postinc0,c
   837  006CD8  06E8               	decf	wreg,f,c
   838  006CDA  E1FD               	bnz	clear_1
   839  006CDC                     end_of_initialization:
   840                           	opt stack 0
   841  006CDC                     __end_of__initialization:
   842                           	opt stack 0
   843  006CDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   844  006CDE  6EF8               	movwf	tblptru,c
   845  006CE0  0100               	movlb	0
   846  006CE2  EFD8  F036         	goto	_main	;jump to C main() function
   847                           tblptru	equ	0xFF8
   848                           postinc0	equ	0xFEE
   849                           wreg	equ	0xFE8
   850                           
   851                           	psect	bssBANK0
   852  000060                     __pbssBANK0:
   853                           	opt stack 0
   854  000060                     _realNumbers:
   855                           	opt stack 0
   856  000060                     	ds	128
   857                           tblptru	equ	0xFF8
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           
   861                           	psect	bssBANK1
   862  000100                     __pbssBANK1:
   863                           	opt stack 0
   864  000100                     _imaginaryNumbers:
   865                           	opt stack 0
   866  000100                     	ds	128
   867                           tblptru	equ	0xFF8
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           
   871                           	psect	cstackBANK0
   872  0000E0                     __pcstackBANK0:
   873                           	opt stack 0
   874  0000E0                     main@root:
   875                           	opt stack 0
   876                           
   877                           ; 4 bytes @ 0x0
   878  0000E0                     	ds	4
   879  0000E4                     main@place:
   880                           	opt stack 0
   881                           
   882                           ; 4 bytes @ 0x4
   883  0000E4                     	ds	4
   884  0000E8                     main@i:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x8
   888  0000E8                     	ds	2
   889  0000EA                     main@k:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0xA
   893  0000EA                     	ds	2
   894                           tblptru	equ	0xFF8
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           
   898                           	psect	cstackCOMRAM
   899  000001                     __pcstackCOMRAM:
   900                           	opt stack 0
   901  000001                     ?_ReadADC:
   902                           	opt stack 0
   903  000001                     ?___wmul:
   904                           	opt stack 0
   905  000001                     ?___lmul:
   906                           	opt stack 0
   907  000001                     OpenADC@config2:
   908                           	opt stack 0
   909  000001                     Delay10TCYx@unit:
   910                           	opt stack 0
   911  000001                     ___wmul@multiplier:
   912                           	opt stack 0
   913  000001                     ___lmul@multiplier:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x0
   917  000001                     	ds	1
   918  000002                     OpenADC@config3:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x1
   922  000002                     	ds	1
   923  000003                     ??_OpenADC:
   924  000003                     ___wmul@multiplicand:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x2
   928  000003                     	ds	2
   929  000005                     OpenADC@config:
   930                           	opt stack 0
   931  000005                     ___wmul@product:
   932                           	opt stack 0
   933  000005                     ___lmul@multiplicand:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x4
   937  000005                     	ds	4
   938  000009                     ___lmul@product:
   939                           	opt stack 0
   940                           
   941                           ; 4 bytes @ 0x8
   942  000009                     	ds	4
   943  00000D                     fix_fft@fr:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0xC
   947  00000D                     	ds	2
   948  00000F                     fix_fft@fi:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0xE
   952  00000F                     	ds	2
   953  000011                     fix_fft@m:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x10
   957  000011                     	ds	2
   958  000013                     ??_fix_fft:
   959                           
   960                           ; 0 bytes @ 0x12
   961  000013                     	ds	8
   962  00001B                     fix_fft@k:
   963                           	opt stack 0
   964                           
   965                           ; 4 bytes @ 0x1A
   966  00001B                     	ds	4
   967  00001F                     fix_fft@nn:
   968                           	opt stack 0
   969                           
   970                           ; 4 bytes @ 0x1E
   971  00001F                     	ds	4
   972  000023                     fix_fft@istep:
   973                           	opt stack 0
   974                           
   975                           ; 4 bytes @ 0x22
   976  000023                     	ds	4
   977  000027                     fix_fft@qr:
   978                           	opt stack 0
   979                           
   980                           ; 2 bytes @ 0x26
   981  000027                     	ds	2
   982  000029                     fix_fft@qi:
   983                           	opt stack 0
   984                           
   985                           ; 2 bytes @ 0x28
   986  000029                     	ds	2
   987  00002B                     fix_fft@wr:
   988                           	opt stack 0
   989                           
   990                           ; 2 bytes @ 0x2A
   991  00002B                     	ds	2
   992  00002D                     fix_fft@wi:
   993                           	opt stack 0
   994                           
   995                           ; 2 bytes @ 0x2C
   996  00002D                     	ds	2
   997  00002F                     fix_fft@n:
   998                           	opt stack 0
   999                           
  1000                           ; 4 bytes @ 0x2E
  1001  00002F                     	ds	4
  1002  000033                     fix_fft@tr:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x32
  1006  000033                     	ds	2
  1007  000035                     fix_fft@ti:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x34
  1011  000035                     	ds	2
  1012  000037                     fix_fft@b:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0x36
  1016  000037                     	ds	2
  1017  000039                     fix_fft@i:
  1018                           	opt stack 0
  1019                           
  1020                           ; 4 bytes @ 0x38
  1021  000039                     	ds	4
  1022  00003D                     fix_fft@mr:
  1023                           	opt stack 0
  1024                           
  1025                           ; 4 bytes @ 0x3C
  1026  00003D                     	ds	4
  1027  000041                     fix_fft@l:
  1028                           	opt stack 0
  1029                           
  1030                           ; 4 bytes @ 0x40
  1031  000041                     	ds	4
  1032  000045                     fix_fft@j:
  1033                           	opt stack 0
  1034                           
  1035                           ; 4 bytes @ 0x44
  1036  000045                     	ds	4
  1037  000049                     fix_fft@c:
  1038                           	opt stack 0
  1039                           
  1040                           ; 4 bytes @ 0x48
  1041  000049                     	ds	4
  1042  00004D                     ??_main:
  1043                           
  1044                           ; 0 bytes @ 0x4C
  1045  00004D                     	ds	13
  1046                           tblptru	equ	0xFF8
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           
  1050 ;;
  1051 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
  1052 ;;
  1053 ;; *************** function _main *****************
  1054 ;; Defined at:
  1055 ;;		line 24 in file "ADC main 25k22.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  k               2   10[BANK0 ] int 
  1060 ;;  place           4    4[BANK0 ] long 
  1061 ;;  root            4    0[BANK0 ] long 
  1062 ;;  i               2    8[BANK0 ] short 
  1063 ;;  adc_value       2    0        unsigned int 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;		None               void
  1066 ;; Registers used:
  1067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1073 ;;      Params:         0       0       0       0       0       0       0
  1074 ;;      Locals:         0      12       0       0       0       0       0
  1075 ;;      Temps:         13       0       0       0       0       0       0
  1076 ;;      Totals:        13      12       0       0       0       0       0
  1077 ;;Total ram usage:       25 bytes
  1078 ;; Hardware stack levels required when called:    2
  1079 ;; This function calls:
  1080 ;;		_BusyADC
  1081 ;;		_ConvertADC
  1082 ;;		_Delay10TCYx
  1083 ;;		_OpenADC
  1084 ;;		_ReadADC
  1085 ;;		___wmul
  1086 ;;		_fix_fft
  1087 ;; This function is called by:
  1088 ;;		Startup code after reset
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text0
  1093  006DB0                     __ptext0:
  1094                           	opt stack 0
  1095  006DB0                     _main:
  1096                           	opt stack 29
  1097                           
  1098                           ;ADC main 25k22.c: 25: unsigned int adc_value;
  1099                           ;ADC main 25k22.c: 26: TRISC = 0x00;
  1100                           
  1101                           ;incstack = 0
  1102  006DB0  0E00               	movlw	0
  1103  006DB2  6E94               	movwf	3988,c	;volatile
  1104                           
  1105                           ;ADC main 25k22.c: 27: LATC = 0x00;
  1106  006DB4  0E00               	movlw	0
  1107  006DB6  6E8B               	movwf	3979,c	;volatile
  1108                           
  1109                           ;ADC main 25k22.c: 28: OSCCONbits.IRCF = 0b111;
  1110  006DB8  88D3               	bsf	4051,4,c	;volatile
  1111  006DBA  8AD3               	bsf	4051,5,c	;volatile
  1112  006DBC  8CD3               	bsf	4051,6,c	;volatile
  1113                           
  1114                           ;ADC main 25k22.c: 29: OSCCONbits.SCS = 0b11;
  1115  006DBE  0E03               	movlw	3
  1116  006DC0  12D3               	iorwf	4051,f,c	;volatile
  1117                           
  1118                           ;ADC main 25k22.c: 30: OSCTUNEbits.TUN = 0b01111;
  1119  006DC2  809B               	bsf	3995,0,c	;volatile
  1120  006DC4  829B               	bsf	3995,1,c	;volatile
  1121  006DC6  849B               	bsf	3995,2,c	;volatile
  1122  006DC8  869B               	bsf	3995,3,c	;volatile
  1123  006DCA  989B               	bcf	3995,4,c	;volatile
  1124  006DCC  9A9B               	bcf	3995,5,c	;volatile
  1125                           
  1126                           ;ADC main 25k22.c: 31: OpenADC(0b11111111 &
  1127                           ;ADC main 25k22.c: 32: 0b11111111 &
  1128                           ;ADC main 25k22.c: 33: 0b11110001,
  1129                           ;ADC main 25k22.c: 34: 0b10000011 &
  1130                           ;ADC main 25k22.c: 35: 0b01111111 &
  1131                           ;ADC main 25k22.c: 36: 0b11110111 &
  1132                           ;ADC main 25k22.c: 37: 0b11111100,
  1133                           ;ADC main 25k22.c: 38: 0b1110);
  1134  006DCE  0E00               	movlw	0
  1135  006DD0  6E01               	movwf	OpenADC@config2,c
  1136  006DD2  0E0E               	movlw	14
  1137  006DD4  6E02               	movwf	OpenADC@config3,c
  1138  006DD6  0EF1               	movlw	241
  1139  006DD8  EC86  F036         	call	_OpenADC
  1140  006DDC                     l1062:
  1141                           
  1142                           ;ADC main 25k22.c: 42: short i = 0;
  1143  006DDC  0E00               	movlw	0
  1144  006DDE  0100               	movlb	0	; () banked
  1145  006DE0  6FE9               	movwf	(main@i+1)& (0+255),b
  1146  006DE2  0E00               	movlw	0
  1147  006DE4  0100               	movlb	0	; () banked
  1148  006DE6  6FE8               	movwf	main@i& (0+255),b
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;ADC main 25k22.c: 43: for (i = 0; i < 64; i++) {
  1152  006DE8  0E00               	movlw	0
  1153  006DEA  0100               	movlb	0	; () banked
  1154  006DEC  6FE9               	movwf	(main@i+1)& (0+255),b
  1155  006DEE  0E00               	movlw	0
  1156  006DF0  0100               	movlb	0	; () banked
  1157  006DF2  6FE8               	movwf	main@i& (0+255),b
  1158  006DF4                     
  1159                           ; BSR set to: 0
  1160  006DF4  0100               	movlb	0	; () banked
  1161  006DF6  51E9               	movf	(main@i+1)& (0+255),w,b
  1162  006DF8  0A80               	xorlw	128
  1163  006DFA  0F80               	addlw	-128
  1164  006DFC  0E40               	movlw	64
  1165  006DFE  B4D8               	btfsc	status,2,c
  1166  006E00  5DE8               	subwf	main@i& (0+255),w,b
  1167  006E02  B0D8               	btfsc	status,0,c
  1168  006E04  D037               	goto	l1084
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;ADC main 25k22.c: 45: ConvertADC();
  1172                           
  1173                           ; BSR set to: 0
  1174                           
  1175                           ; BSR set to: 0
  1176  006E06  EC4D  F036         	call	_ConvertADC	;wreg free
  1177  006E0A                     l1072:
  1178  006E0A  EC54  F036         	call	_BusyADC	;wreg free
  1179  006E0E  0900               	iorlw	0
  1180  006E10  A4D8               	btfss	status,2,c
  1181  006E12  D7FB               	goto	l1072
  1182                           
  1183                           ;ADC main 25k22.c: 57: realNumbers[i] = ReadADC();
  1184  006E14  EC4F  F036         	call	_ReadADC	;wreg free
  1185  006E18  0E60               	movlw	low _realNumbers
  1186  006E1A  6E4D               	movwf	??_main& (0+255),c
  1187  006E1C  0E00               	movlw	high _realNumbers
  1188  006E1E  6E4E               	movwf	(??_main+1)& (0+255),c
  1189  006E20  90D8               	bcf	status,0,c
  1190  006E22  0100               	movlb	0	; () banked
  1191  006E24  35E8               	rlcf	main@i& (0+255),w,b
  1192  006E26  6ED9               	movwf	fsr2l,c
  1193  006E28  0100               	movlb	0	; () banked
  1194  006E2A  35E9               	rlcf	(main@i+1)& (0+255),w,b
  1195  006E2C  6EDA               	movwf	fsr2h,c
  1196  006E2E  504D               	movf	??_main,w,c
  1197  006E30  26D9               	addwf	fsr2l,f,c
  1198  006E32  504E               	movf	??_main+1,w,c
  1199  006E34  22DA               	addwfc	fsr2h,f,c
  1200  006E36  C001  FFDE         	movff	?_ReadADC,postinc2
  1201  006E3A  C002  FFDD         	movff	?_ReadADC+1,postdec2
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;ADC main 25k22.c: 59: imaginaryNumbers[i] = 0;
  1205  006E3E  0E00               	movlw	low _imaginaryNumbers
  1206  006E40  6E4D               	movwf	??_main& (0+255),c
  1207  006E42  0E01               	movlw	high _imaginaryNumbers
  1208  006E44  6E4E               	movwf	(??_main+1)& (0+255),c
  1209  006E46  90D8               	bcf	status,0,c
  1210  006E48  0100               	movlb	0	; () banked
  1211  006E4A  35E8               	rlcf	main@i& (0+255),w,b
  1212  006E4C  6ED9               	movwf	fsr2l,c
  1213  006E4E  0100               	movlb	0	; () banked
  1214  006E50  35E9               	rlcf	(main@i+1)& (0+255),w,b
  1215  006E52  6EDA               	movwf	fsr2h,c
  1216  006E54  504D               	movf	??_main,w,c
  1217  006E56  26D9               	addwf	fsr2l,f,c
  1218  006E58  504E               	movf	??_main+1,w,c
  1219  006E5A  22DA               	addwfc	fsr2h,f,c
  1220  006E5C  0E00               	movlw	0
  1221  006E5E  6EDE               	movwf	postinc2,c
  1222  006E60  0E00               	movlw	0
  1223  006E62  6EDD               	movwf	postdec2,c
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;ADC main 25k22.c: 61: _delay((unsigned long)((7)*(20000000/4000000.0)));
  1227  006E64  0E0B               	movlw	11
  1228  006E66                     u597:
  1229  006E66  2EE8               	decfsz	wreg,f,c
  1230  006E68  D7FE               	goto	u597
  1231  006E6A  D000               	nop2		;nop
  1232  006E6C  0100               	movlb	0	; () banked
  1233  006E6E  4BE8               	infsnz	main@i& (0+255),f,b
  1234  006E70  2BE9               	incf	(main@i+1)& (0+255),f,b
  1235  006E72  D7C0               	goto	L1
  1236  006E74                     l1084:
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;ADC main 25k22.c: 63: }
  1240                           ;ADC main 25k22.c: 65: fix_fft(realNumbers, imaginaryNumbers, 6);
  1241  006E74  0100               	movlb	0	; () banked
  1242  006E76  0E00               	movlw	high _realNumbers
  1243  006E78  6E0E               	movwf	fix_fft@fr+1,c
  1244  006E7A  0100               	movlb	0	; () banked
  1245  006E7C  0E60               	movlw	low _realNumbers
  1246  006E7E  6E0D               	movwf	fix_fft@fr,c
  1247  006E80  0101               	movlb	1	; () banked
  1248  006E82  0E01               	movlw	high _imaginaryNumbers
  1249  006E84  6E10               	movwf	fix_fft@fi+1,c
  1250  006E86  0101               	movlb	1	; () banked
  1251  006E88  0E00               	movlw	low _imaginaryNumbers
  1252  006E8A  6E0F               	movwf	fix_fft@fi,c
  1253  006E8C  0E00               	movlw	0
  1254  006E8E  6E12               	movwf	fix_fft@m+1,c
  1255  006E90  0E06               	movlw	6
  1256  006E92  6E11               	movwf	fix_fft@m,c
  1257  006E94  EC39  F039         	call	_fix_fft	;wreg free
  1258                           
  1259                           ;ADC main 25k22.c: 68: long place, root;
  1260                           ;ADC main 25k22.c: 69: for (int k=0; k < 32; k++) {
  1261  006E98  0E00               	movlw	0
  1262  006E9A  0100               	movlb	0	; () banked
  1263  006E9C  6FEB               	movwf	(main@k+1)& (0+255),b
  1264  006E9E  0E00               	movlw	0
  1265  006EA0  0100               	movlb	0	; () banked
  1266  006EA2  6FEA               	movwf	main@k& (0+255),b
  1267  006EA4                     
  1268                           ; BSR set to: 0
  1269  006EA4  0100               	movlb	0	; () banked
  1270  006EA6  51EB               	movf	(main@k+1)& (0+255),w,b
  1271  006EA8  0A80               	xorlw	128
  1272  006EAA  0F80               	addlw	-128
  1273  006EAC  0E20               	movlw	32
  1274  006EAE  B4D8               	btfsc	status,2,c
  1275  006EB0  5DEA               	subwf	main@k& (0+255),w,b
  1276  006EB2  B0D8               	btfsc	status,0,c
  1277  006EB4  D1B7               	goto	l1124
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;ADC main 25k22.c: 70: realNumbers[k] = (realNumbers[k] * realNumbers[k] +
  1281                           ;ADC main 25k22.c: 71: imaginaryNumbers[k] * imaginaryNumbers[k]);
  1282                           
  1283                           ; BSR set to: 0
  1284                           
  1285                           ; BSR set to: 0
  1286  006EB6  0E60               	movlw	low _realNumbers
  1287  006EB8  6E4D               	movwf	??_main& (0+255),c
  1288  006EBA  0E00               	movlw	high _realNumbers
  1289  006EBC  6E4E               	movwf	(??_main+1)& (0+255),c
  1290  006EBE  90D8               	bcf	status,0,c
  1291  006EC0  0100               	movlb	0	; () banked
  1292  006EC2  35EA               	rlcf	main@k& (0+255),w,b
  1293  006EC4  6ED9               	movwf	fsr2l,c
  1294  006EC6  0100               	movlb	0	; () banked
  1295  006EC8  35EB               	rlcf	(main@k+1)& (0+255),w,b
  1296  006ECA  6EDA               	movwf	fsr2h,c
  1297  006ECC  504D               	movf	??_main,w,c
  1298  006ECE  26D9               	addwf	fsr2l,f,c
  1299  006ED0  504E               	movf	??_main+1,w,c
  1300  006ED2  22DA               	addwfc	fsr2h,f,c
  1301  006ED4  CFDE F001          	movff	postinc2,___wmul@multiplier
  1302  006ED8  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1303  006EDC  0E60               	movlw	low _realNumbers
  1304  006EDE  6E4F               	movwf	(??_main+2)& (0+255),c
  1305  006EE0  0E00               	movlw	high _realNumbers
  1306  006EE2  6E50               	movwf	(??_main+3)& (0+255),c
  1307  006EE4  90D8               	bcf	status,0,c
  1308  006EE6  0100               	movlb	0	; () banked
  1309  006EE8  35EA               	rlcf	main@k& (0+255),w,b
  1310  006EEA  6ED9               	movwf	fsr2l,c
  1311  006EEC  0100               	movlb	0	; () banked
  1312  006EEE  35EB               	rlcf	(main@k+1)& (0+255),w,b
  1313  006EF0  6EDA               	movwf	fsr2h,c
  1314  006EF2  504F               	movf	??_main+2,w,c
  1315  006EF4  26D9               	addwf	fsr2l,f,c
  1316  006EF6  5050               	movf	??_main+3,w,c
  1317  006EF8  22DA               	addwfc	fsr2h,f,c
  1318  006EFA  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1319  006EFE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1320  006F02  EC73  F036         	call	___wmul	;wreg free
  1321  006F06  C001  F051         	movff	?___wmul,??_main+4
  1322  006F0A  C002  F052         	movff	?___wmul+1,??_main+5
  1323  006F0E  0E00               	movlw	low _imaginaryNumbers
  1324  006F10  6E53               	movwf	(??_main+6)& (0+255),c
  1325  006F12  0E01               	movlw	high _imaginaryNumbers
  1326  006F14  6E54               	movwf	(??_main+7)& (0+255),c
  1327  006F16  90D8               	bcf	status,0,c
  1328  006F18  0100               	movlb	0	; () banked
  1329  006F1A  35EA               	rlcf	main@k& (0+255),w,b
  1330  006F1C  6ED9               	movwf	fsr2l,c
  1331  006F1E  0100               	movlb	0	; () banked
  1332  006F20  35EB               	rlcf	(main@k+1)& (0+255),w,b
  1333  006F22  6EDA               	movwf	fsr2h,c
  1334  006F24  5053               	movf	??_main+6,w,c
  1335  006F26  26D9               	addwf	fsr2l,f,c
  1336  006F28  5054               	movf	??_main+7,w,c
  1337  006F2A  22DA               	addwfc	fsr2h,f,c
  1338  006F2C  CFDE F001          	movff	postinc2,___wmul@multiplier
  1339  006F30  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1340  006F34  0E00               	movlw	low _imaginaryNumbers
  1341  006F36  6E55               	movwf	(??_main+8)& (0+255),c
  1342  006F38  0E01               	movlw	high _imaginaryNumbers
  1343  006F3A  6E56               	movwf	(??_main+9)& (0+255),c
  1344  006F3C  90D8               	bcf	status,0,c
  1345  006F3E  0100               	movlb	0	; () banked
  1346  006F40  35EA               	rlcf	main@k& (0+255),w,b
  1347  006F42  6ED9               	movwf	fsr2l,c
  1348  006F44  0100               	movlb	0	; () banked
  1349  006F46  35EB               	rlcf	(main@k+1)& (0+255),w,b
  1350  006F48  6EDA               	movwf	fsr2h,c
  1351  006F4A  5055               	movf	??_main+8,w,c
  1352  006F4C  26D9               	addwf	fsr2l,f,c
  1353  006F4E  5056               	movf	??_main+9,w,c
  1354  006F50  22DA               	addwfc	fsr2h,f,c
  1355  006F52  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1356  006F56  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1357  006F5A  EC73  F036         	call	___wmul	;wreg free
  1358  006F5E  5001               	movf	?___wmul,w,c
  1359  006F60  2651               	addwf	??_main+4,f,c
  1360  006F62  5002               	movf	?___wmul+1,w,c
  1361  006F64  2252               	addwfc	??_main+5,f,c
  1362  006F66  0E60               	movlw	low _realNumbers
  1363  006F68  6E57               	movwf	(??_main+10)& (0+255),c
  1364  006F6A  0E00               	movlw	high _realNumbers
  1365  006F6C  6E58               	movwf	(??_main+11)& (0+255),c
  1366  006F6E  90D8               	bcf	status,0,c
  1367  006F70  0100               	movlb	0	; () banked
  1368  006F72  35EA               	rlcf	main@k& (0+255),w,b
  1369  006F74  6ED9               	movwf	fsr2l,c
  1370  006F76  0100               	movlb	0	; () banked
  1371  006F78  35EB               	rlcf	(main@k+1)& (0+255),w,b
  1372  006F7A  6EDA               	movwf	fsr2h,c
  1373  006F7C  5057               	movf	??_main+10,w,c
  1374  006F7E  26D9               	addwf	fsr2l,f,c
  1375  006F80  5058               	movf	??_main+11,w,c
  1376  006F82  22DA               	addwfc	fsr2h,f,c
  1377  006F84  C051  FFDE         	movff	??_main+4,postinc2
  1378  006F88  C052  FFDD         	movff	??_main+5,postdec2
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;ADC main 25k22.c: 73: place = 0x40000000;
  1382  006F8C  0E00               	movlw	0
  1383  006F8E  0100               	movlb	0	; () banked
  1384  006F90  6FE4               	movwf	main@place& (0+255),b
  1385  006F92  0E00               	movlw	0
  1386  006F94  0100               	movlb	0	; () banked
  1387  006F96  6FE5               	movwf	(main@place+1)& (0+255),b
  1388  006F98  0E00               	movlw	0
  1389  006F9A  0100               	movlb	0	; () banked
  1390  006F9C  6FE6               	movwf	(main@place+2)& (0+255),b
  1391  006F9E  0E40               	movlw	64
  1392  006FA0  0100               	movlb	0	; () banked
  1393  006FA2  6FE7               	movwf	(main@place+3)& (0+255),b
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;ADC main 25k22.c: 74: root = 0;
  1397  006FA4  0E00               	movlw	0
  1398  006FA6  0100               	movlb	0	; () banked
  1399  006FA8  6FE0               	movwf	main@root& (0+255),b
  1400  006FAA  0E00               	movlw	0
  1401  006FAC  0100               	movlb	0	; () banked
  1402  006FAE  6FE1               	movwf	(main@root+1)& (0+255),b
  1403  006FB0  0E00               	movlw	0
  1404  006FB2  0100               	movlb	0	; () banked
  1405  006FB4  6FE2               	movwf	(main@root+2)& (0+255),b
  1406  006FB6  0E00               	movlw	0
  1407  006FB8  0100               	movlb	0	; () banked
  1408  006FBA  6FE3               	movwf	(main@root+3)& (0+255),b
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;ADC main 25k22.c: 76: if (realNumbers[k] >= 0) {
  1412  006FBC  0E60               	movlw	low _realNumbers
  1413  006FBE  6E4D               	movwf	??_main& (0+255),c
  1414  006FC0  0E00               	movlw	high _realNumbers
  1415  006FC2  6E4E               	movwf	(??_main+1)& (0+255),c
  1416  006FC4  90D8               	bcf	status,0,c
  1417  006FC6  0100               	movlb	0	; () banked
  1418  006FC8  35EA               	rlcf	main@k& (0+255),w,b
  1419  006FCA  6ED9               	movwf	fsr2l,c
  1420  006FCC  0100               	movlb	0	; () banked
  1421  006FCE  35EB               	rlcf	(main@k+1)& (0+255),w,b
  1422  006FD0  6EDA               	movwf	fsr2h,c
  1423  006FD2  504D               	movf	??_main,w,c
  1424  006FD4  26D9               	addwf	fsr2l,f,c
  1425  006FD6  504E               	movf	??_main+1,w,c
  1426  006FD8  22DA               	addwfc	fsr2h,f,c
  1427  006FDA  CFDE F04F          	movff	postinc2,??_main+2
  1428  006FDE  CFDD F050          	movff	postdec2,??_main+3
  1429  006FE2  AE50               	btfss	??_main+3,7,c
  1430  006FE4  D021               	goto	l1104
  1431  006FE6  D105               	goto	l1118
  1432  006FE8                     l1102:
  1433                           
  1434                           ; BSR set to: 0
  1435  006FE8  0E02               	movlw	2
  1436  006FEA  6E4D               	movwf	??_main& (0+255),c
  1437  006FEC  0100               	movlb	0	; () banked
  1438  006FEE  C0E4  F04E         	movff	main@place,??_main+1
  1439  006FF2  0100               	movlb	0	; () banked
  1440  006FF4  C0E5  F04F         	movff	main@place+1,??_main+2
  1441  006FF8  0100               	movlb	0	; () banked
  1442  006FFA  C0E6  F050         	movff	main@place+2,??_main+3
  1443  006FFE  0100               	movlb	0	; () banked
  1444  007000  C0E7  F051         	movff	main@place+3,??_main+4
  1445  007004                     u515:
  1446  007004  664D               	tstfsz	??_main,c
  1447  007006  D001               	goto	u516
  1448  007008  D007               	goto	u517
  1449  00700A                     u516:
  1450  00700A  3451               	rlcf	??_main+4,w,c
  1451  00700C  3251               	rrcf	??_main+4,f,c
  1452  00700E  3250               	rrcf	??_main+3,f,c
  1453  007010  324F               	rrcf	??_main+2,f,c
  1454  007012  324E               	rrcf	??_main+1,f,c
  1455  007014  2E4D               	decfsz	??_main,f,c
  1456  007016  D7F6               	goto	u515
  1457  007018                     u517:
  1458  007018  C04E  F0E4         	movff	??_main+1,main@place
  1459  00701C  C04F  F0E5         	movff	??_main+2,main@place+1
  1460  007020  C050  F0E6         	movff	??_main+3,main@place+2
  1461  007024  C051  F0E7         	movff	??_main+4,main@place+3
  1462  007028                     l1104:
  1463                           
  1464                           ; BSR set to: 0
  1465  007028  0E60               	movlw	low _realNumbers
  1466  00702A  6E4D               	movwf	??_main& (0+255),c
  1467  00702C  0E00               	movlw	high _realNumbers
  1468  00702E  6E4E               	movwf	(??_main+1)& (0+255),c
  1469  007030  90D8               	bcf	status,0,c
  1470  007032  0100               	movlb	0	; () banked
  1471  007034  35EA               	rlcf	main@k& (0+255),w,b
  1472  007036  6ED9               	movwf	fsr2l,c
  1473  007038  0100               	movlb	0	; () banked
  1474  00703A  35EB               	rlcf	(main@k+1)& (0+255),w,b
  1475  00703C  6EDA               	movwf	fsr2h,c
  1476  00703E  504D               	movf	??_main,w,c
  1477  007040  26D9               	addwf	fsr2l,f,c
  1478  007042  504E               	movf	??_main+1,w,c
  1479  007044  22DA               	addwfc	fsr2h,f,c
  1480  007046  CFDE F04F          	movff	postinc2,??_main+2
  1481  00704A  CFDD F050          	movff	postdec2,??_main+3
  1482  00704E  C04F  F051         	movff	??_main+2,??_main+4
  1483  007052  C050  F052         	movff	??_main+3,??_main+5
  1484  007056  0E00               	movlw	0
  1485  007058  BE52               	btfsc	(??_main+5)& (0+255),7,c
  1486  00705A  0EFF               	movlw	255
  1487  00705C  6E53               	movwf	(??_main+6)& (0+255),c
  1488  00705E  6E54               	movwf	(??_main+7)& (0+255),c
  1489  007060  5054               	movf	??_main+7,w,c
  1490  007062  0A80               	xorlw	128
  1491  007064  6E55               	movwf	(??_main+8)& (0+255),c
  1492  007066  0100               	movlb	0	; () banked
  1493  007068  51E4               	movf	main@place& (0+255),w,b
  1494  00706A  5C51               	subwf	??_main+4,w,c
  1495  00706C  0100               	movlb	0	; () banked
  1496  00706E  51E5               	movf	(main@place+1)& (0+255),w,b
  1497  007070  5852               	subwfb	??_main+5,w,c
  1498  007072  0100               	movlb	0	; () banked
  1499  007074  51E6               	movf	(main@place+2)& (0+255),w,b
  1500  007076  5853               	subwfb	??_main+6,w,c
  1501  007078  0100               	movlb	0	; () banked
  1502  00707A  51E7               	movf	(main@place+3)& (0+255),w,b
  1503  00707C  0A80               	xorlw	128
  1504  00707E  5855               	subwfb	(??_main+8)& (0+255),w,c
  1505  007080  B0D8               	btfsc	status,0,c
  1506  007082  D0B0               	goto	l1116
  1507  007084  D7B1               	goto	l1102
  1508  007086                     l1106:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;ADC main 25k22.c: 81: if (realNumbers[k] >= root + place) {
  1512  007086  0100               	movlb	0	; () banked
  1513  007088  51E4               	movf	main@place& (0+255),w,b
  1514  00708A  0100               	movlb	0	; () banked
  1515  00708C  25E0               	addwf	main@root& (0+255),w,b
  1516  00708E  6E4D               	movwf	??_main& (0+255),c
  1517  007090  0100               	movlb	0	; () banked
  1518  007092  51E5               	movf	(main@place+1)& (0+255),w,b
  1519  007094  0100               	movlb	0	; () banked
  1520  007096  21E1               	addwfc	(main@root+1)& (0+255),w,b
  1521  007098  6E4E               	movwf	(??_main+1)& (0+255),c
  1522  00709A  0100               	movlb	0	; () banked
  1523  00709C  51E6               	movf	(main@place+2)& (0+255),w,b
  1524  00709E  0100               	movlb	0	; () banked
  1525  0070A0  21E2               	addwfc	(main@root+2)& (0+255),w,b
  1526  0070A2  6E4F               	movwf	(??_main+2)& (0+255),c
  1527  0070A4  0100               	movlb	0	; () banked
  1528  0070A6  51E7               	movf	(main@place+3)& (0+255),w,b
  1529  0070A8  0100               	movlb	0	; () banked
  1530  0070AA  21E3               	addwfc	(main@root+3)& (0+255),w,b
  1531  0070AC  6E50               	movwf	(??_main+3)& (0+255),c
  1532  0070AE  0E60               	movlw	low _realNumbers
  1533  0070B0  6E51               	movwf	(??_main+4)& (0+255),c
  1534  0070B2  0E00               	movlw	high _realNumbers
  1535  0070B4  6E52               	movwf	(??_main+5)& (0+255),c
  1536  0070B6  90D8               	bcf	status,0,c
  1537  0070B8  0100               	movlb	0	; () banked
  1538  0070BA  35EA               	rlcf	main@k& (0+255),w,b
  1539  0070BC  6ED9               	movwf	fsr2l,c
  1540  0070BE  0100               	movlb	0	; () banked
  1541  0070C0  35EB               	rlcf	(main@k+1)& (0+255),w,b
  1542  0070C2  6EDA               	movwf	fsr2h,c
  1543  0070C4  5051               	movf	??_main+4,w,c
  1544  0070C6  26D9               	addwf	fsr2l,f,c
  1545  0070C8  5052               	movf	??_main+5,w,c
  1546  0070CA  22DA               	addwfc	fsr2h,f,c
  1547  0070CC  CFDE F053          	movff	postinc2,??_main+6
  1548  0070D0  CFDD F054          	movff	postdec2,??_main+7
  1549  0070D4  C053  F055         	movff	??_main+6,??_main+8
  1550  0070D8  C054  F056         	movff	??_main+7,??_main+9
  1551  0070DC  0E00               	movlw	0
  1552  0070DE  BE56               	btfsc	(??_main+9)& (0+255),7,c
  1553  0070E0  0EFF               	movlw	255
  1554  0070E2  6E57               	movwf	(??_main+10)& (0+255),c
  1555  0070E4  6E58               	movwf	(??_main+11)& (0+255),c
  1556  0070E6  5058               	movf	??_main+11,w,c
  1557  0070E8  0A80               	xorlw	128
  1558  0070EA  6E59               	movwf	(??_main+12)& (0+255),c
  1559  0070EC  504D               	movf	??_main,w,c
  1560  0070EE  5C55               	subwf	??_main+8,w,c
  1561  0070F0  504E               	movf	??_main+1,w,c
  1562  0070F2  5856               	subwfb	??_main+9,w,c
  1563  0070F4  504F               	movf	??_main+2,w,c
  1564  0070F6  5857               	subwfb	??_main+10,w,c
  1565  0070F8  5050               	movf	??_main+3,w,c
  1566  0070FA  0A80               	xorlw	128
  1567  0070FC  5859               	subwfb	(??_main+12)& (0+255),w,c
  1568  0070FE  A0D8               	btfss	status,0,c
  1569  007100  D038               	goto	l1112
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;ADC main 25k22.c: 82: realNumbers[k] -= root + place;
  1573  007102  0100               	movlb	0	; () banked
  1574  007104  C0E0  F04D         	movff	main@root,??_main
  1575  007108  0100               	movlb	0	; () banked
  1576  00710A  C0E1  F04E         	movff	main@root+1,??_main+1
  1577  00710E  0100               	movlb	0	; () banked
  1578  007110  51E4               	movf	main@place& (0+255),w,b
  1579  007112  264D               	addwf	??_main,f,c
  1580  007114  0100               	movlb	0	; () banked
  1581  007116  51E5               	movf	(main@place+1)& (0+255),w,b
  1582  007118  224E               	addwfc	??_main+1,f,c
  1583  00711A  0E60               	movlw	low _realNumbers
  1584  00711C  6E4F               	movwf	(??_main+2)& (0+255),c
  1585  00711E  0E00               	movlw	high _realNumbers
  1586  007120  6E50               	movwf	(??_main+3)& (0+255),c
  1587  007122  90D8               	bcf	status,0,c
  1588  007124  0100               	movlb	0	; () banked
  1589  007126  35EA               	rlcf	main@k& (0+255),w,b
  1590  007128  6ED9               	movwf	fsr2l,c
  1591  00712A  0100               	movlb	0	; () banked
  1592  00712C  35EB               	rlcf	(main@k+1)& (0+255),w,b
  1593  00712E  6EDA               	movwf	fsr2h,c
  1594  007130  504F               	movf	??_main+2,w,c
  1595  007132  26D9               	addwf	fsr2l,f,c
  1596  007134  5050               	movf	??_main+3,w,c
  1597  007136  22DA               	addwfc	fsr2h,f,c
  1598  007138  504D               	movf	??_main,w,c
  1599  00713A  5EDE               	subwf	postinc2,f,c
  1600  00713C  504E               	movf	??_main+1,w,c
  1601  00713E  5ADD               	subwfb	postdec2,f,c
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;ADC main 25k22.c: 83: root += place * 2;
  1605  007140  90D8               	bcf	status,0,c
  1606  007142  0100               	movlb	0	; () banked
  1607  007144  35E4               	rlcf	main@place& (0+255),w,b
  1608  007146  6E4D               	movwf	??_main& (0+255),c
  1609  007148  0100               	movlb	0	; () banked
  1610  00714A  35E5               	rlcf	(main@place+1)& (0+255),w,b
  1611  00714C  6E4E               	movwf	(??_main+1)& (0+255),c
  1612  00714E  0100               	movlb	0	; () banked
  1613  007150  35E6               	rlcf	(main@place+2)& (0+255),w,b
  1614  007152  6E4F               	movwf	(??_main+2)& (0+255),c
  1615  007154  0100               	movlb	0	; () banked
  1616  007156  35E7               	rlcf	(main@place+3)& (0+255),w,b
  1617  007158  6E50               	movwf	(??_main+3)& (0+255),c
  1618  00715A  504D               	movf	??_main,w,c
  1619  00715C  0100               	movlb	0	; () banked
  1620  00715E  27E0               	addwf	main@root& (0+255),f,b
  1621  007160  504E               	movf	??_main+1,w,c
  1622  007162  0100               	movlb	0	; () banked
  1623  007164  23E1               	addwfc	(main@root+1)& (0+255),f,b
  1624  007166  504F               	movf	??_main+2,w,c
  1625  007168  0100               	movlb	0	; () banked
  1626  00716A  23E2               	addwfc	(main@root+2)& (0+255),f,b
  1627  00716C  5050               	movf	??_main+3,w,c
  1628  00716E  0100               	movlb	0	; () banked
  1629  007170  23E3               	addwfc	(main@root+3)& (0+255),f,b
  1630  007172                     l1112:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;ADC main 25k22.c: 84: }
  1634                           ;ADC main 25k22.c: 86: root = root >> 1;
  1635  007172  0100               	movlb	0	; () banked
  1636  007174  C0E0  F04D         	movff	main@root,??_main
  1637  007178  0100               	movlb	0	; () banked
  1638  00717A  C0E1  F04E         	movff	main@root+1,??_main+1
  1639  00717E  0100               	movlb	0	; () banked
  1640  007180  C0E2  F04F         	movff	main@root+2,??_main+2
  1641  007184  0100               	movlb	0	; () banked
  1642  007186  C0E3  F050         	movff	main@root+3,??_main+3
  1643  00718A  3450               	rlcf	??_main+3,w,c
  1644  00718C  3250               	rrcf	??_main+3,f,c
  1645  00718E  324F               	rrcf	??_main+2,f,c
  1646  007190  324E               	rrcf	??_main+1,f,c
  1647  007192  324D               	rrcf	??_main,f,c
  1648  007194  C04D  F0E0         	movff	??_main,main@root
  1649  007198  C04E  F0E1         	movff	??_main+1,main@root+1
  1650  00719C  C04F  F0E2         	movff	??_main+2,main@root+2
  1651  0071A0  C050  F0E3         	movff	??_main+3,main@root+3
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;ADC main 25k22.c: 87: place = place >> 2;
  1655  0071A4  0E02               	movlw	2
  1656  0071A6  6E4D               	movwf	??_main& (0+255),c
  1657  0071A8  0100               	movlb	0	; () banked
  1658  0071AA  C0E4  F04E         	movff	main@place,??_main+1
  1659  0071AE  0100               	movlb	0	; () banked
  1660  0071B0  C0E5  F04F         	movff	main@place+1,??_main+2
  1661  0071B4  0100               	movlb	0	; () banked
  1662  0071B6  C0E6  F050         	movff	main@place+2,??_main+3
  1663  0071BA  0100               	movlb	0	; () banked
  1664  0071BC  C0E7  F051         	movff	main@place+3,??_main+4
  1665  0071C0                     u545:
  1666  0071C0  664D               	tstfsz	??_main,c
  1667  0071C2  D001               	goto	u546
  1668  0071C4  D007               	goto	u547
  1669  0071C6                     u546:
  1670  0071C6  3451               	rlcf	??_main+4,w,c
  1671  0071C8  3251               	rrcf	??_main+4,f,c
  1672  0071CA  3250               	rrcf	??_main+3,f,c
  1673  0071CC  324F               	rrcf	??_main+2,f,c
  1674  0071CE  324E               	rrcf	??_main+1,f,c
  1675  0071D0  2E4D               	decfsz	??_main,f,c
  1676  0071D2  D7F6               	goto	u545
  1677  0071D4                     u547:
  1678  0071D4  C04E  F0E4         	movff	??_main+1,main@place
  1679  0071D8  C04F  F0E5         	movff	??_main+2,main@place+1
  1680  0071DC  C050  F0E6         	movff	??_main+3,main@place+2
  1681  0071E0  C051  F0E7         	movff	??_main+4,main@place+3
  1682  0071E4                     l1116:
  1683                           
  1684                           ; BSR set to: 0
  1685  0071E4  0100               	movlb	0	; () banked
  1686  0071E6  51E7               	movf	(main@place+3)& (0+255),w,b
  1687  0071E8  11E4               	iorwf	main@place& (0+255),w,b
  1688  0071EA  11E5               	iorwf	(main@place+1)& (0+255),w,b
  1689  0071EC  11E6               	iorwf	(main@place+2)& (0+255),w,b
  1690  0071EE  A4D8               	btfss	status,2,c
  1691  0071F0  D74A               	goto	l1106
  1692  0071F2                     l1118:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;ADC main 25k22.c: 88: }
  1696                           ;ADC main 25k22.c: 89: }
  1697                           ;ADC main 25k22.c: 91: realNumbers[k] = root;
  1698  0071F2  0E60               	movlw	low _realNumbers
  1699  0071F4  6E4D               	movwf	??_main& (0+255),c
  1700  0071F6  0E00               	movlw	high _realNumbers
  1701  0071F8  6E4E               	movwf	(??_main+1)& (0+255),c
  1702  0071FA  90D8               	bcf	status,0,c
  1703  0071FC  0100               	movlb	0	; () banked
  1704  0071FE  35EA               	rlcf	main@k& (0+255),w,b
  1705  007200  6ED9               	movwf	fsr2l,c
  1706  007202  0100               	movlb	0	; () banked
  1707  007204  35EB               	rlcf	(main@k+1)& (0+255),w,b
  1708  007206  6EDA               	movwf	fsr2h,c
  1709  007208  504D               	movf	??_main,w,c
  1710  00720A  26D9               	addwf	fsr2l,f,c
  1711  00720C  504E               	movf	??_main+1,w,c
  1712  00720E  22DA               	addwfc	fsr2h,f,c
  1713  007210  0100               	movlb	0	; () banked
  1714  007212  C0E0  FFDE         	movff	main@root,postinc2
  1715  007216  0100               	movlb	0	; () banked
  1716  007218  C0E1  FFDD         	movff	main@root+1,postdec2
  1717                           
  1718                           ; BSR set to: 0
  1719  00721C  0100               	movlb	0	; () banked
  1720  00721E  4BEA               	infsnz	main@k& (0+255),f,b
  1721  007220  2BEB               	incf	(main@k+1)& (0+255),f,b
  1722  007222  D640               	goto	L2
  1723  007224                     l1124:
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;ADC main 25k22.c: 92: }
  1727                           ;ADC main 25k22.c: 94: for(i = 0; i < 64; i++) {
  1728  007224  0E00               	movlw	0
  1729  007226  0100               	movlb	0	; () banked
  1730  007228  6FE9               	movwf	(main@i+1)& (0+255),b
  1731  00722A  0E00               	movlw	0
  1732  00722C  0100               	movlb	0	; () banked
  1733  00722E  6FE8               	movwf	main@i& (0+255),b
  1734  007230                     
  1735                           ; BSR set to: 0
  1736  007230  0100               	movlb	0	; () banked
  1737  007232  51E9               	movf	(main@i+1)& (0+255),w,b
  1738  007234  0A80               	xorlw	128
  1739  007236  0F80               	addlw	-128
  1740  007238  0E40               	movlw	64
  1741  00723A  B4D8               	btfsc	status,2,c
  1742  00723C  5DE8               	subwf	main@i& (0+255),w,b
  1743  00723E  B0D8               	btfsc	status,0,c
  1744  007240  D5CD               	goto	l1062
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;ADC main 25k22.c: 95: LATC = realNumbers[i];
  1748                           
  1749                           ; BSR set to: 0
  1750                           
  1751                           ; BSR set to: 0
  1752  007242  0E60               	movlw	low _realNumbers
  1753  007244  6E4D               	movwf	??_main& (0+255),c
  1754  007246  0E00               	movlw	high _realNumbers
  1755  007248  6E4E               	movwf	(??_main+1)& (0+255),c
  1756  00724A  90D8               	bcf	status,0,c
  1757  00724C  0100               	movlb	0	; () banked
  1758  00724E  35E8               	rlcf	main@i& (0+255),w,b
  1759  007250  6ED9               	movwf	fsr2l,c
  1760  007252  0100               	movlb	0	; () banked
  1761  007254  35E9               	rlcf	(main@i+1)& (0+255),w,b
  1762  007256  6EDA               	movwf	fsr2h,c
  1763  007258  504D               	movf	??_main,w,c
  1764  00725A  26D9               	addwf	fsr2l,f,c
  1765  00725C  504E               	movf	??_main+1,w,c
  1766  00725E  22DA               	addwfc	fsr2h,f,c
  1767  007260  50DF               	movf	indf2,w,c
  1768  007262  6E8B               	movwf	3979,c	;volatile
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;ADC main 25k22.c: 96: Delay10TCYx(5);
  1772  007264  0E05               	movlw	5
  1773  007266  EC5A  F036         	call	_Delay10TCYx
  1774  00726A  0100               	movlb	0	; () banked
  1775  00726C  4BE8               	infsnz	main@i& (0+255),f,b
  1776  00726E  2BE9               	incf	(main@i+1)& (0+255),f,b
  1777  007270  D7DF               	goto	L3
  1778  007272                     __end_of_main:
  1779                           	opt stack 0
  1780                           tblptru	equ	0xFF8
  1781                           postinc0	equ	0xFEE
  1782                           wreg	equ	0xFE8
  1783                           indf2	equ	0xFDF
  1784                           postinc2	equ	0xFDE
  1785                           postdec2	equ	0xFDD
  1786                           fsr2h	equ	0xFDA
  1787                           fsr2l	equ	0xFD9
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _fix_fft *****************
  1791 ;; Defined at:
  1792 ;;		line 52 in file "fft.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  fr              2   12[COMRAM] PTR short 
  1795 ;;		 -> realNumbers(128), 
  1796 ;;  fi              2   14[COMRAM] PTR short 
  1797 ;;		 -> imaginaryNumbers(128), 
  1798 ;;  m               2   16[COMRAM] short 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  c               4   72[COMRAM] long 
  1801 ;;  b               2   54[COMRAM] short 
  1802 ;;  j               4   68[COMRAM] long 
  1803 ;;  l               4   64[COMRAM] long 
  1804 ;;  mr              4   60[COMRAM] long 
  1805 ;;  i               4   56[COMRAM] long 
  1806 ;;  n               4   46[COMRAM] long 
  1807 ;;  istep           4   34[COMRAM] long 
  1808 ;;  nn              4   30[COMRAM] long 
  1809 ;;  k               4   26[COMRAM] long 
  1810 ;;  shift           4    0        long 
  1811 ;;  ti              2   52[COMRAM] short 
  1812 ;;  tr              2   50[COMRAM] short 
  1813 ;;  wi              2   44[COMRAM] short 
  1814 ;;  wr              2   42[COMRAM] short 
  1815 ;;  qi              2   40[COMRAM] short 
  1816 ;;  qr              2   38[COMRAM] short 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;		None               void
  1819 ;; Registers used:
  1820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1826 ;;      Params:         6       0       0       0       0       0       0
  1827 ;;      Locals:        50       0       0       0       0       0       0
  1828 ;;      Temps:          8       0       0       0       0       0       0
  1829 ;;      Totals:        64       0       0       0       0       0       0
  1830 ;;Total ram usage:       64 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    1
  1833 ;; This function calls:
  1834 ;;		___lmul
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text1
  1841  007272                     __ptext1:
  1842                           	opt stack 0
  1843  007272                     _fix_fft:
  1844                           	opt stack 29
  1845                           
  1846                           ;fft.c: 54: long int mr = 0, nn, i, j, l, k, istep, n, shift;
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;incstack = 0
  1850  007272  0E00               	movlw	0
  1851  007274  6E3D               	movwf	fix_fft@mr,c
  1852  007276  0E00               	movlw	0
  1853  007278  6E3E               	movwf	fix_fft@mr+1,c
  1854  00727A  0E00               	movlw	0
  1855  00727C  6E3F               	movwf	fix_fft@mr+2,c
  1856  00727E  0E00               	movlw	0
  1857  007280  6E40               	movwf	fix_fft@mr+3,c
  1858                           
  1859                           ;fft.c: 55: short qr, qi, tr, ti, wr, wi;
  1860                           ;fft.c: 57: n = 1 << m;
  1861  007282  C011  F013         	movff	fix_fft@m,??_fix_fft
  1862  007286  0E01               	movlw	1
  1863  007288  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  1864  00728A  6A15               	clrf	(??_fix_fft+2)& (0+255),c
  1865  00728C  2A13               	incf	??_fix_fft,f,c
  1866  00728E  D003               	goto	u344
  1867  007290                     u345:
  1868  007290  90D8               	bcf	status,0,c
  1869  007292  3614               	rlcf	??_fix_fft+1,f,c
  1870  007294  3615               	rlcf	??_fix_fft+2,f,c
  1871  007296                     u344:
  1872  007296  2E13               	decfsz	??_fix_fft,f,c
  1873  007298  D7FB               	goto	u345
  1874  00729A  C014  F02F         	movff	??_fix_fft+1,fix_fft@n
  1875  00729E  C015  F030         	movff	??_fix_fft+2,fix_fft@n+1
  1876  0072A2  0E00               	movlw	0
  1877  0072A4  BE30               	btfsc	fix_fft@n+1,7,c
  1878  0072A6  0EFF               	movlw	-1
  1879  0072A8  6E31               	movwf	fix_fft@n+2,c
  1880  0072AA  6E32               	movwf	fix_fft@n+3,c
  1881                           
  1882                           ;fft.c: 58: nn = n - 1;
  1883  0072AC  0EFF               	movlw	255
  1884  0072AE  242F               	addwf	fix_fft@n,w,c
  1885  0072B0  6E1F               	movwf	fix_fft@nn,c
  1886  0072B2  0EFF               	movlw	255
  1887  0072B4  2030               	addwfc	fix_fft@n+1,w,c
  1888  0072B6  6E20               	movwf	fix_fft@nn+1,c
  1889  0072B8  0EFF               	movlw	255
  1890  0072BA  2031               	addwfc	fix_fft@n+2,w,c
  1891  0072BC  6E21               	movwf	fix_fft@nn+2,c
  1892  0072BE  0EFF               	movlw	255
  1893  0072C0  2032               	addwfc	fix_fft@n+3,w,c
  1894  0072C2  6E22               	movwf	fix_fft@nn+3,c
  1895                           
  1896                           ;fft.c: 64: for (m=1; m<=nn; ++m)
  1897  0072C4  0E00               	movlw	0
  1898  0072C6  6E12               	movwf	fix_fft@m+1,c
  1899  0072C8  0E01               	movlw	1
  1900  0072CA  6E11               	movwf	fix_fft@m,c
  1901  0072CC  D0C4               	goto	l974
  1902  0072CE                     l57:
  1903                           
  1904                           ;fft.c: 65: {
  1905                           ;fft.c: 66: l = n;
  1906  0072CE  C02F  F041         	movff	fix_fft@n,fix_fft@l
  1907  0072D2  C030  F042         	movff	fix_fft@n+1,fix_fft@l+1
  1908  0072D6  C031  F043         	movff	fix_fft@n+2,fix_fft@l+2
  1909  0072DA  C032  F044         	movff	fix_fft@n+3,fix_fft@l+3
  1910  0072DE                     l956:
  1911                           
  1912                           ;fft.c: 68: {
  1913                           ;fft.c: 69: l >>= 1;
  1914  0072DE  3444               	rlcf	fix_fft@l+3,w,c
  1915  0072E0  3244               	rrcf	fix_fft@l+3,f,c
  1916  0072E2  3243               	rrcf	fix_fft@l+2,f,c
  1917  0072E4  3242               	rrcf	fix_fft@l+1,f,c
  1918  0072E6  3241               	rrcf	fix_fft@l,f,c
  1919                           
  1920                           ;fft.c: 70: } while (mr+l > nn);
  1921  0072E8  5041               	movf	fix_fft@l,w,c
  1922  0072EA  243D               	addwf	fix_fft@mr,w,c
  1923  0072EC  6E13               	movwf	??_fix_fft& (0+255),c
  1924  0072EE  5042               	movf	fix_fft@l+1,w,c
  1925  0072F0  203E               	addwfc	fix_fft@mr+1,w,c
  1926  0072F2  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  1927  0072F4  5043               	movf	fix_fft@l+2,w,c
  1928  0072F6  203F               	addwfc	fix_fft@mr+2,w,c
  1929  0072F8  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  1930  0072FA  5044               	movf	fix_fft@l+3,w,c
  1931  0072FC  2040               	addwfc	fix_fft@mr+3,w,c
  1932  0072FE  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  1933  007300  5022               	movf	fix_fft@nn+3,w,c
  1934  007302  0A80               	xorlw	128
  1935  007304  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  1936  007306  5013               	movf	??_fix_fft,w,c
  1937  007308  5C1F               	subwf	fix_fft@nn,w,c
  1938  00730A  5014               	movf	??_fix_fft+1,w,c
  1939  00730C  5820               	subwfb	fix_fft@nn+1,w,c
  1940  00730E  5015               	movf	??_fix_fft+2,w,c
  1941  007310  5821               	subwfb	fix_fft@nn+2,w,c
  1942  007312  5016               	movf	??_fix_fft+3,w,c
  1943  007314  0A80               	xorlw	128
  1944  007316  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  1945  007318  A0D8               	btfss	status,0,c
  1946  00731A  D7E1               	goto	l956
  1947                           
  1948                           ;fft.c: 72: mr = (mr & (l-1)) + l;
  1949  00731C  0EFF               	movlw	255
  1950  00731E  2441               	addwf	fix_fft@l,w,c
  1951  007320  6E13               	movwf	??_fix_fft& (0+255),c
  1952  007322  0EFF               	movlw	255
  1953  007324  2042               	addwfc	fix_fft@l+1,w,c
  1954  007326  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  1955  007328  0EFF               	movlw	255
  1956  00732A  2043               	addwfc	fix_fft@l+2,w,c
  1957  00732C  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  1958  00732E  0EFF               	movlw	255
  1959  007330  2044               	addwfc	fix_fft@l+3,w,c
  1960  007332  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  1961  007334  503D               	movf	fix_fft@mr,w,c
  1962  007336  1413               	andwf	??_fix_fft,w,c
  1963  007338  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  1964  00733A  503E               	movf	fix_fft@mr+1,w,c
  1965  00733C  1414               	andwf	??_fix_fft+1,w,c
  1966  00733E  6E18               	movwf	(??_fix_fft+5)& (0+255),c
  1967  007340  503F               	movf	fix_fft@mr+2,w,c
  1968  007342  1415               	andwf	??_fix_fft+2,w,c
  1969  007344  6E19               	movwf	(??_fix_fft+6)& (0+255),c
  1970  007346  5040               	movf	fix_fft@mr+3,w,c
  1971  007348  1416               	andwf	??_fix_fft+3,w,c
  1972  00734A  6E1A               	movwf	(??_fix_fft+7)& (0+255),c
  1973  00734C  5041               	movf	fix_fft@l,w,c
  1974  00734E  2417               	addwf	??_fix_fft+4,w,c
  1975  007350  6E3D               	movwf	fix_fft@mr,c
  1976  007352  5042               	movf	fix_fft@l+1,w,c
  1977  007354  2018               	addwfc	??_fix_fft+5,w,c
  1978  007356  6E3E               	movwf	fix_fft@mr+1,c
  1979  007358  5043               	movf	fix_fft@l+2,w,c
  1980  00735A  2019               	addwfc	??_fix_fft+6,w,c
  1981  00735C  6E3F               	movwf	fix_fft@mr+2,c
  1982  00735E  5044               	movf	fix_fft@l+3,w,c
  1983  007360  201A               	addwfc	??_fix_fft+7,w,c
  1984  007362  6E40               	movwf	fix_fft@mr+3,c
  1985                           
  1986                           ;fft.c: 73: if (mr <= m) continue;
  1987  007364  C011  F013         	movff	fix_fft@m,??_fix_fft
  1988  007368  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  1989  00736C  0E00               	movlw	0
  1990  00736E  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  1991  007370  0EFF               	movlw	255
  1992  007372  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  1993  007374  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  1994  007376  5016               	movf	??_fix_fft+3,w,c
  1995  007378  0A80               	xorlw	128
  1996  00737A  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  1997  00737C  503D               	movf	fix_fft@mr,w,c
  1998  00737E  5C13               	subwf	??_fix_fft,w,c
  1999  007380  503E               	movf	fix_fft@mr+1,w,c
  2000  007382  5814               	subwfb	??_fix_fft+1,w,c
  2001  007384  503F               	movf	fix_fft@mr+2,w,c
  2002  007386  5815               	subwfb	??_fix_fft+2,w,c
  2003  007388  5040               	movf	fix_fft@mr+3,w,c
  2004  00738A  0A80               	xorlw	128
  2005  00738C  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2006  00738E  B0D8               	btfsc	status,0,c
  2007  007390  D060               	goto	l972
  2008                           
  2009                           ;fft.c: 75: tr = fr[m];
  2010  007392  90D8               	bcf	status,0,c
  2011  007394  3411               	rlcf	fix_fft@m,w,c
  2012  007396  6ED9               	movwf	fsr2l,c
  2013  007398  3412               	rlcf	fix_fft@m+1,w,c
  2014  00739A  6EDA               	movwf	fsr2h,c
  2015  00739C  500D               	movf	fix_fft@fr,w,c
  2016  00739E  26D9               	addwf	fsr2l,f,c
  2017  0073A0  500E               	movf	fix_fft@fr+1,w,c
  2018  0073A2  22DA               	addwfc	fsr2h,f,c
  2019  0073A4  CFDE F033          	movff	postinc2,fix_fft@tr
  2020  0073A8  CFDD F034          	movff	postdec2,fix_fft@tr+1
  2021                           
  2022                           ;fft.c: 76: fr[m] = fr[mr];
  2023  0073AC  90D8               	bcf	status,0,c
  2024  0073AE  343D               	rlcf	fix_fft@mr,w,c
  2025  0073B0  6ED9               	movwf	fsr2l,c
  2026  0073B2  343E               	rlcf	fix_fft@mr+1,w,c
  2027  0073B4  6EDA               	movwf	fsr2h,c
  2028  0073B6  500D               	movf	fix_fft@fr,w,c
  2029  0073B8  26D9               	addwf	fsr2l,f,c
  2030  0073BA  500E               	movf	fix_fft@fr+1,w,c
  2031  0073BC  22DA               	addwfc	fsr2h,f,c
  2032  0073BE  90D8               	bcf	status,0,c
  2033  0073C0  3411               	rlcf	fix_fft@m,w,c
  2034  0073C2  6EE1               	movwf	fsr1l,c
  2035  0073C4  3412               	rlcf	fix_fft@m+1,w,c
  2036  0073C6  6EE2               	movwf	fsr1h,c
  2037  0073C8  500D               	movf	fix_fft@fr,w,c
  2038  0073CA  26E1               	addwf	fsr1l,f,c
  2039  0073CC  500E               	movf	fix_fft@fr+1,w,c
  2040  0073CE  22E2               	addwfc	fsr1h,f,c
  2041  0073D0  CFDE FFE6          	movff	postinc2,postinc1
  2042  0073D4  CFDD FFE5          	movff	postdec2,postdec1
  2043                           
  2044                           ;fft.c: 77: fr[mr] = tr;
  2045  0073D8  90D8               	bcf	status,0,c
  2046  0073DA  343D               	rlcf	fix_fft@mr,w,c
  2047  0073DC  6ED9               	movwf	fsr2l,c
  2048  0073DE  343E               	rlcf	fix_fft@mr+1,w,c
  2049  0073E0  6EDA               	movwf	fsr2h,c
  2050  0073E2  500D               	movf	fix_fft@fr,w,c
  2051  0073E4  26D9               	addwf	fsr2l,f,c
  2052  0073E6  500E               	movf	fix_fft@fr+1,w,c
  2053  0073E8  22DA               	addwfc	fsr2h,f,c
  2054  0073EA  C033  FFDE         	movff	fix_fft@tr,postinc2
  2055  0073EE  C034  FFDD         	movff	fix_fft@tr+1,postdec2
  2056                           
  2057                           ;fft.c: 78: ti = fi[m];
  2058  0073F2  90D8               	bcf	status,0,c
  2059  0073F4  3411               	rlcf	fix_fft@m,w,c
  2060  0073F6  6ED9               	movwf	fsr2l,c
  2061  0073F8  3412               	rlcf	fix_fft@m+1,w,c
  2062  0073FA  6EDA               	movwf	fsr2h,c
  2063  0073FC  500F               	movf	fix_fft@fi,w,c
  2064  0073FE  26D9               	addwf	fsr2l,f,c
  2065  007400  5010               	movf	fix_fft@fi+1,w,c
  2066  007402  22DA               	addwfc	fsr2h,f,c
  2067  007404  CFDE F035          	movff	postinc2,fix_fft@ti
  2068  007408  CFDD F036          	movff	postdec2,fix_fft@ti+1
  2069                           
  2070                           ;fft.c: 79: fi[m] = fi[mr];
  2071  00740C  90D8               	bcf	status,0,c
  2072  00740E  343D               	rlcf	fix_fft@mr,w,c
  2073  007410  6ED9               	movwf	fsr2l,c
  2074  007412  343E               	rlcf	fix_fft@mr+1,w,c
  2075  007414  6EDA               	movwf	fsr2h,c
  2076  007416  500F               	movf	fix_fft@fi,w,c
  2077  007418  26D9               	addwf	fsr2l,f,c
  2078  00741A  5010               	movf	fix_fft@fi+1,w,c
  2079  00741C  22DA               	addwfc	fsr2h,f,c
  2080  00741E  90D8               	bcf	status,0,c
  2081  007420  3411               	rlcf	fix_fft@m,w,c
  2082  007422  6EE1               	movwf	fsr1l,c
  2083  007424  3412               	rlcf	fix_fft@m+1,w,c
  2084  007426  6EE2               	movwf	fsr1h,c
  2085  007428  500F               	movf	fix_fft@fi,w,c
  2086  00742A  26E1               	addwf	fsr1l,f,c
  2087  00742C  5010               	movf	fix_fft@fi+1,w,c
  2088  00742E  22E2               	addwfc	fsr1h,f,c
  2089  007430  CFDE FFE6          	movff	postinc2,postinc1
  2090  007434  CFDD FFE5          	movff	postdec2,postdec1
  2091                           
  2092                           ;fft.c: 80: fi[mr] = ti;
  2093  007438  90D8               	bcf	status,0,c
  2094  00743A  343D               	rlcf	fix_fft@mr,w,c
  2095  00743C  6ED9               	movwf	fsr2l,c
  2096  00743E  343E               	rlcf	fix_fft@mr+1,w,c
  2097  007440  6EDA               	movwf	fsr2h,c
  2098  007442  500F               	movf	fix_fft@fi,w,c
  2099  007444  26D9               	addwf	fsr2l,f,c
  2100  007446  5010               	movf	fix_fft@fi+1,w,c
  2101  007448  22DA               	addwfc	fsr2h,f,c
  2102  00744A  C035  FFDE         	movff	fix_fft@ti,postinc2
  2103  00744E  C036  FFDD         	movff	fix_fft@ti+1,postdec2
  2104  007452                     l972:
  2105  007452  4A11               	infsnz	fix_fft@m,f,c
  2106  007454  2A12               	incf	fix_fft@m+1,f,c
  2107  007456                     l974:
  2108  007456  C011  F013         	movff	fix_fft@m,??_fix_fft
  2109  00745A  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2110  00745E  0E00               	movlw	0
  2111  007460  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2112  007462  0EFF               	movlw	255
  2113  007464  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2114  007466  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2115  007468  5022               	movf	fix_fft@nn+3,w,c
  2116  00746A  0A80               	xorlw	128
  2117  00746C  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2118  00746E  5013               	movf	??_fix_fft,w,c
  2119  007470  5C1F               	subwf	fix_fft@nn,w,c
  2120  007472  5014               	movf	??_fix_fft+1,w,c
  2121  007474  5820               	subwfb	fix_fft@nn+1,w,c
  2122  007476  5015               	movf	??_fix_fft+2,w,c
  2123  007478  5821               	subwfb	fix_fft@nn+2,w,c
  2124  00747A  5016               	movf	??_fix_fft+3,w,c
  2125  00747C  0A80               	xorlw	128
  2126  00747E  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2127  007480  B0D8               	btfsc	status,0,c
  2128  007482  D725               	goto	l57
  2129                           
  2130                           ;fft.c: 81: }
  2131                           ;fft.c: 83: l = 1;
  2132  007484  0E01               	movlw	1
  2133  007486  6E41               	movwf	fix_fft@l,c
  2134  007488  0E00               	movlw	0
  2135  00748A  6E42               	movwf	fix_fft@l+1,c
  2136  00748C  0E00               	movlw	0
  2137  00748E  6E43               	movwf	fix_fft@l+2,c
  2138  007490  0E00               	movlw	0
  2139  007492  6E44               	movwf	fix_fft@l+3,c
  2140                           
  2141                           ;fft.c: 84: k = 10-1;
  2142  007494  0E09               	movlw	9
  2143  007496  6E1B               	movwf	fix_fft@k,c
  2144  007498  0E00               	movlw	0
  2145  00749A  6E1C               	movwf	fix_fft@k+1,c
  2146  00749C  0E00               	movlw	0
  2147  00749E  6E1D               	movwf	fix_fft@k+2,c
  2148  0074A0  0E00               	movlw	0
  2149  0074A2  6E1E               	movwf	fix_fft@k+3,c
  2150                           
  2151                           ;fft.c: 86: while (l < n)
  2152  0074A4  D29D               	goto	l63
  2153  0074A6                     l978:
  2154                           
  2155                           ;fft.c: 87: {
  2156                           ;fft.c: 100: long int c;
  2157                           ;fft.c: 101: short b;
  2158                           ;fft.c: 103: istep = l << 1;
  2159  0074A6  90D8               	bcf	status,0,c
  2160  0074A8  3441               	rlcf	fix_fft@l,w,c
  2161  0074AA  6E23               	movwf	fix_fft@istep,c
  2162  0074AC  3442               	rlcf	fix_fft@l+1,w,c
  2163  0074AE  6E24               	movwf	fix_fft@istep+1,c
  2164  0074B0  3443               	rlcf	fix_fft@l+2,w,c
  2165  0074B2  6E25               	movwf	fix_fft@istep+2,c
  2166  0074B4  3444               	rlcf	fix_fft@l+3,w,c
  2167  0074B6  6E26               	movwf	fix_fft@istep+3,c
  2168                           
  2169                           ;fft.c: 104: for (m=0; m<l; ++m)
  2170  0074B8  0E00               	movlw	0
  2171  0074BA  6E12               	movwf	fix_fft@m+1,c
  2172  0074BC  0E00               	movlw	0
  2173  0074BE  6E11               	movwf	fix_fft@m,c
  2174  0074C0  D268               	goto	l1038
  2175  0074C2                     l982:
  2176                           
  2177                           ;fft.c: 105: {
  2178                           ;fft.c: 106: j = m << k;
  2179  0074C2  C01B  F013         	movff	fix_fft@k,??_fix_fft
  2180  0074C6  C011  F014         	movff	fix_fft@m,??_fix_fft+1
  2181  0074CA  C012  F015         	movff	fix_fft@m+1,??_fix_fft+2
  2182  0074CE  2A13               	incf	??_fix_fft,f,c
  2183  0074D0  D003               	goto	u384
  2184  0074D2                     u385:
  2185  0074D2  90D8               	bcf	status,0,c
  2186  0074D4  3614               	rlcf	??_fix_fft+1,f,c
  2187  0074D6  3615               	rlcf	??_fix_fft+2,f,c
  2188  0074D8                     u384:
  2189  0074D8  2E13               	decfsz	??_fix_fft,f,c
  2190  0074DA  D7FB               	goto	u385
  2191  0074DC  C014  F045         	movff	??_fix_fft+1,fix_fft@j
  2192  0074E0  C015  F046         	movff	??_fix_fft+2,fix_fft@j+1
  2193  0074E4  0E00               	movlw	0
  2194  0074E6  BE46               	btfsc	fix_fft@j+1,7,c
  2195  0074E8  0EFF               	movlw	-1
  2196  0074EA  6E47               	movwf	fix_fft@j+2,c
  2197  0074EC  6E48               	movwf	fix_fft@j+3,c
  2198                           
  2199                           ;fft.c: 108: wr = Sinewave[j+1024/4];
  2200  0074EE  0E00               	movlw	0
  2201  0074F0  6E13               	movwf	??_fix_fft& (0+255),c
  2202  0074F2  0E02               	movlw	2
  2203  0074F4  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2204  0074F6  C045  F015         	movff	fix_fft@j,??_fix_fft+2
  2205  0074FA  C046  F016         	movff	fix_fft@j+1,??_fix_fft+3
  2206  0074FE  90D8               	bcf	status,0,c
  2207  007500  3615               	rlcf	??_fix_fft+2,f,c
  2208  007502  3616               	rlcf	??_fix_fft+3,f,c
  2209  007504  5013               	movf	??_fix_fft,w,c
  2210  007506  2615               	addwf	??_fix_fft+2,f,c
  2211  007508  5014               	movf	??_fix_fft+1,w,c
  2212  00750A  2216               	addwfc	??_fix_fft+3,f,c
  2213  00750C  0EFF               	movlw	low _Sinewave
  2214  00750E  2415               	addwf	??_fix_fft+2,w,c
  2215  007510  6EF6               	movwf	tblptrl,c
  2216  007512  0E79               	movlw	high _Sinewave
  2217  007514  2016               	addwfc	??_fix_fft+3,w,c
  2218  007516  6EF7               	movwf	tblptrh,c
  2219  007518                     	if	0	;There are less than 3 active tblptr bytes
  2220  007518                     	endif
  2221  007518  0009               	tblrd		*+
  2222  00751A  CFF5 F02B          	movff	tablat,fix_fft@wr
  2223  00751E  000A               	tblrd		*-
  2224  007520  CFF5 F02C          	movff	tablat,fix_fft@wr+1
  2225                           
  2226                           ;fft.c: 109: wi = -Sinewave[j];
  2227  007524  C045  F013         	movff	fix_fft@j,??_fix_fft
  2228  007528  C046  F014         	movff	fix_fft@j+1,??_fix_fft+1
  2229  00752C  90D8               	bcf	status,0,c
  2230  00752E  3613               	rlcf	??_fix_fft,f,c
  2231  007530  3614               	rlcf	??_fix_fft+1,f,c
  2232  007532  0EFF               	movlw	low _Sinewave
  2233  007534  2413               	addwf	??_fix_fft,w,c
  2234  007536  6EF6               	movwf	tblptrl,c
  2235  007538  0E79               	movlw	high _Sinewave
  2236  00753A  2014               	addwfc	??_fix_fft+1,w,c
  2237  00753C  6EF7               	movwf	tblptrh,c
  2238  00753E                     	if	0	;There are less than 3 active tblptr bytes
  2239  00753E                     	endif
  2240  00753E  0009               	tblrd		*+
  2241  007540  CFF5 F015          	movff	tablat,??_fix_fft+2
  2242  007544  0009               	tblrd		*+
  2243  007546  CFF5 F016          	movff	tablat,??_fix_fft+3
  2244  00754A  1E15               	comf	??_fix_fft+2,f,c
  2245  00754C  1E16               	comf	??_fix_fft+3,f,c
  2246  00754E  4A15               	infsnz	??_fix_fft+2,f,c
  2247  007550  2A16               	incf	??_fix_fft+3,f,c
  2248  007552  C015  F02D         	movff	??_fix_fft+2,fix_fft@wi
  2249  007556  C016  F02E         	movff	??_fix_fft+3,fix_fft@wi+1
  2250                           
  2251                           ;fft.c: 111: wr >>= 1;
  2252  00755A  342C               	rlcf	fix_fft@wr+1,w,c
  2253  00755C  322C               	rrcf	fix_fft@wr+1,f,c
  2254  00755E  322B               	rrcf	fix_fft@wr,f,c
  2255                           
  2256                           ;fft.c: 112: wi >>= 1;
  2257  007560  342E               	rlcf	fix_fft@wi+1,w,c
  2258  007562  322E               	rrcf	fix_fft@wi+1,f,c
  2259  007564  322D               	rrcf	fix_fft@wi,f,c
  2260                           
  2261                           ;fft.c: 114: for (i=m; i<n; i+=istep)
  2262  007566  C011  F039         	movff	fix_fft@m,fix_fft@i
  2263  00756A  C012  F03A         	movff	fix_fft@m+1,fix_fft@i+1
  2264  00756E  0E00               	movlw	0
  2265  007570  BE3A               	btfsc	fix_fft@i+1,7,c
  2266  007572  0EFF               	movlw	-1
  2267  007574  6E3B               	movwf	fix_fft@i+2,c
  2268  007576  6E3C               	movwf	fix_fft@i+3,c
  2269  007578  D1FC               	goto	l1034
  2270  00757A                     l990:
  2271                           
  2272                           ;fft.c: 115: {
  2273                           ;fft.c: 116: j = i + l;
  2274  00757A  5041               	movf	fix_fft@l,w,c
  2275  00757C  2439               	addwf	fix_fft@i,w,c
  2276  00757E  6E45               	movwf	fix_fft@j,c
  2277  007580  5042               	movf	fix_fft@l+1,w,c
  2278  007582  203A               	addwfc	fix_fft@i+1,w,c
  2279  007584  6E46               	movwf	fix_fft@j+1,c
  2280  007586  5043               	movf	fix_fft@l+2,w,c
  2281  007588  203B               	addwfc	fix_fft@i+2,w,c
  2282  00758A  6E47               	movwf	fix_fft@j+2,c
  2283  00758C  5044               	movf	fix_fft@l+3,w,c
  2284  00758E  203C               	addwfc	fix_fft@i+3,w,c
  2285  007590  6E48               	movwf	fix_fft@j+3,c
  2286                           
  2287                           ;fft.c: 124: c = ((long int)wr * (long int)fr[j]);
  2288  007592  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2289  007596  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2290  00759A  0E00               	movlw	0
  2291  00759C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2292  00759E  0EFF               	movlw	-1
  2293  0075A0  6E03               	movwf	___lmul@multiplier+2,c
  2294  0075A2  6E04               	movwf	___lmul@multiplier+3,c
  2295  0075A4  90D8               	bcf	status,0,c
  2296  0075A6  3445               	rlcf	fix_fft@j,w,c
  2297  0075A8  6ED9               	movwf	fsr2l,c
  2298  0075AA  3446               	rlcf	fix_fft@j+1,w,c
  2299  0075AC  6EDA               	movwf	fsr2h,c
  2300  0075AE  500D               	movf	fix_fft@fr,w,c
  2301  0075B0  26D9               	addwf	fsr2l,f,c
  2302  0075B2  500E               	movf	fix_fft@fr+1,w,c
  2303  0075B4  22DA               	addwfc	fsr2h,f,c
  2304  0075B6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2305  0075BA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2306  0075BE  0E00               	movlw	0
  2307  0075C0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2308  0075C2  0EFF               	movlw	-1
  2309  0075C4  6E07               	movwf	___lmul@multiplicand+2,c
  2310  0075C6  6E08               	movwf	___lmul@multiplicand+3,c
  2311  0075C8  ECAD  F036         	call	___lmul	;wreg free
  2312  0075CC  C001  F049         	movff	?___lmul,fix_fft@c
  2313  0075D0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2314  0075D4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2315  0075D8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2316                           
  2317                           ;fft.c: 125: c = c >> 14;
  2318  0075DC  0E0E               	movlw	14
  2319  0075DE  6E13               	movwf	??_fix_fft& (0+255),c
  2320  0075E0  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2321  0075E4  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2322  0075E8  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2323  0075EC  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2324  0075F0                     u395:
  2325  0075F0  6613               	tstfsz	??_fix_fft,c
  2326  0075F2  D001               	goto	u396
  2327  0075F4  D007               	goto	u397
  2328  0075F6                     u396:
  2329  0075F6  3417               	rlcf	??_fix_fft+4,w,c
  2330  0075F8  3217               	rrcf	??_fix_fft+4,f,c
  2331  0075FA  3216               	rrcf	??_fix_fft+3,f,c
  2332  0075FC  3215               	rrcf	??_fix_fft+2,f,c
  2333  0075FE  3214               	rrcf	??_fix_fft+1,f,c
  2334  007600  2E13               	decfsz	??_fix_fft,f,c
  2335  007602  D7F6               	goto	u395
  2336  007604                     u397:
  2337  007604  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2338  007608  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2339  00760C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2340  007610  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2341                           
  2342                           ;fft.c: 126: b = c & 0x01;
  2343  007614  0E01               	movlw	1
  2344  007616  1449               	andwf	fix_fft@c,w,c
  2345  007618  6E37               	movwf	fix_fft@b,c
  2346  00761A  6A38               	clrf	fix_fft@b+1,c
  2347                           
  2348                           ;fft.c: 127: tr = (c >> 1) + b;
  2349  00761C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2350  007620  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2351  007624  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2352  007628  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2353  00762C  3416               	rlcf	??_fix_fft+3,w,c
  2354  00762E  3216               	rrcf	??_fix_fft+3,f,c
  2355  007630  3215               	rrcf	??_fix_fft+2,f,c
  2356  007632  3214               	rrcf	??_fix_fft+1,f,c
  2357  007634  3213               	rrcf	??_fix_fft,f,c
  2358  007636  5037               	movf	fix_fft@b,w,c
  2359  007638  2413               	addwf	??_fix_fft,w,c
  2360  00763A  6E33               	movwf	fix_fft@tr,c
  2361  00763C  5038               	movf	fix_fft@b+1,w,c
  2362  00763E  2014               	addwfc	??_fix_fft+1,w,c
  2363  007640  6E34               	movwf	fix_fft@tr+1,c
  2364                           
  2365                           ;fft.c: 129: c = ((long int)wi * (long int)fi[j]);
  2366  007642  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2367  007646  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2368  00764A  0E00               	movlw	0
  2369  00764C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2370  00764E  0EFF               	movlw	-1
  2371  007650  6E03               	movwf	___lmul@multiplier+2,c
  2372  007652  6E04               	movwf	___lmul@multiplier+3,c
  2373  007654  90D8               	bcf	status,0,c
  2374  007656  3445               	rlcf	fix_fft@j,w,c
  2375  007658  6ED9               	movwf	fsr2l,c
  2376  00765A  3446               	rlcf	fix_fft@j+1,w,c
  2377  00765C  6EDA               	movwf	fsr2h,c
  2378  00765E  500F               	movf	fix_fft@fi,w,c
  2379  007660  26D9               	addwf	fsr2l,f,c
  2380  007662  5010               	movf	fix_fft@fi+1,w,c
  2381  007664  22DA               	addwfc	fsr2h,f,c
  2382  007666  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2383  00766A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2384  00766E  0E00               	movlw	0
  2385  007670  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2386  007672  0EFF               	movlw	-1
  2387  007674  6E07               	movwf	___lmul@multiplicand+2,c
  2388  007676  6E08               	movwf	___lmul@multiplicand+3,c
  2389  007678  ECAD  F036         	call	___lmul	;wreg free
  2390  00767C  C001  F049         	movff	?___lmul,fix_fft@c
  2391  007680  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2392  007684  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2393  007688  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2394                           
  2395                           ;fft.c: 130: c = c >> 14;
  2396  00768C  0E0E               	movlw	14
  2397  00768E  6E13               	movwf	??_fix_fft& (0+255),c
  2398  007690  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2399  007694  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2400  007698  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2401  00769C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2402  0076A0                     u405:
  2403  0076A0  6613               	tstfsz	??_fix_fft,c
  2404  0076A2  D001               	goto	u406
  2405  0076A4  D007               	goto	u407
  2406  0076A6                     u406:
  2407  0076A6  3417               	rlcf	??_fix_fft+4,w,c
  2408  0076A8  3217               	rrcf	??_fix_fft+4,f,c
  2409  0076AA  3216               	rrcf	??_fix_fft+3,f,c
  2410  0076AC  3215               	rrcf	??_fix_fft+2,f,c
  2411  0076AE  3214               	rrcf	??_fix_fft+1,f,c
  2412  0076B0  2E13               	decfsz	??_fix_fft,f,c
  2413  0076B2  D7F6               	goto	u405
  2414  0076B4                     u407:
  2415  0076B4  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2416  0076B8  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2417  0076BC  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2418  0076C0  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2419                           
  2420                           ;fft.c: 131: b = c & 0x01;
  2421  0076C4  0E01               	movlw	1
  2422  0076C6  1449               	andwf	fix_fft@c,w,c
  2423  0076C8  6E37               	movwf	fix_fft@b,c
  2424  0076CA  6A38               	clrf	fix_fft@b+1,c
  2425                           
  2426                           ;fft.c: 132: tr = tr - ((c >> 1) + b);
  2427  0076CC  C049  F013         	movff	fix_fft@c,??_fix_fft
  2428  0076D0  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2429  0076D4  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2430  0076D8  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2431  0076DC  3416               	rlcf	??_fix_fft+3,w,c
  2432  0076DE  3216               	rrcf	??_fix_fft+3,f,c
  2433  0076E0  3215               	rrcf	??_fix_fft+2,f,c
  2434  0076E2  3214               	rrcf	??_fix_fft+1,f,c
  2435  0076E4  3213               	rrcf	??_fix_fft,f,c
  2436  0076E6  5037               	movf	fix_fft@b,w,c
  2437  0076E8  2613               	addwf	??_fix_fft,f,c
  2438  0076EA  5038               	movf	fix_fft@b+1,w,c
  2439  0076EC  2214               	addwfc	??_fix_fft+1,f,c
  2440  0076EE  1E13               	comf	??_fix_fft,f,c
  2441  0076F0  1E14               	comf	??_fix_fft+1,f,c
  2442  0076F2  4A13               	infsnz	??_fix_fft,f,c
  2443  0076F4  2A14               	incf	??_fix_fft+1,f,c
  2444  0076F6  5033               	movf	fix_fft@tr,w,c
  2445  0076F8  2413               	addwf	??_fix_fft,w,c
  2446  0076FA  6E33               	movwf	fix_fft@tr,c
  2447  0076FC  5034               	movf	fix_fft@tr+1,w,c
  2448  0076FE  2014               	addwfc	??_fix_fft+1,w,c
  2449  007700  6E34               	movwf	fix_fft@tr+1,c
  2450                           
  2451                           ;fft.c: 135: c = ((long int)wr * (long int)fi[j]);
  2452  007702  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  2453  007706  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  2454  00770A  0E00               	movlw	0
  2455  00770C  BE02               	btfsc	___lmul@multiplier+1,7,c
  2456  00770E  0EFF               	movlw	-1
  2457  007710  6E03               	movwf	___lmul@multiplier+2,c
  2458  007712  6E04               	movwf	___lmul@multiplier+3,c
  2459  007714  90D8               	bcf	status,0,c
  2460  007716  3445               	rlcf	fix_fft@j,w,c
  2461  007718  6ED9               	movwf	fsr2l,c
  2462  00771A  3446               	rlcf	fix_fft@j+1,w,c
  2463  00771C  6EDA               	movwf	fsr2h,c
  2464  00771E  500F               	movf	fix_fft@fi,w,c
  2465  007720  26D9               	addwf	fsr2l,f,c
  2466  007722  5010               	movf	fix_fft@fi+1,w,c
  2467  007724  22DA               	addwfc	fsr2h,f,c
  2468  007726  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2469  00772A  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2470  00772E  0E00               	movlw	0
  2471  007730  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2472  007732  0EFF               	movlw	-1
  2473  007734  6E07               	movwf	___lmul@multiplicand+2,c
  2474  007736  6E08               	movwf	___lmul@multiplicand+3,c
  2475  007738  ECAD  F036         	call	___lmul	;wreg free
  2476  00773C  C001  F049         	movff	?___lmul,fix_fft@c
  2477  007740  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2478  007744  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2479  007748  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2480                           
  2481                           ;fft.c: 136: c = c >> 14;
  2482  00774C  0E0E               	movlw	14
  2483  00774E  6E13               	movwf	??_fix_fft& (0+255),c
  2484  007750  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2485  007754  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2486  007758  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2487  00775C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2488  007760                     u415:
  2489  007760  6613               	tstfsz	??_fix_fft,c
  2490  007762  D001               	goto	u416
  2491  007764  D007               	goto	u417
  2492  007766                     u416:
  2493  007766  3417               	rlcf	??_fix_fft+4,w,c
  2494  007768  3217               	rrcf	??_fix_fft+4,f,c
  2495  00776A  3216               	rrcf	??_fix_fft+3,f,c
  2496  00776C  3215               	rrcf	??_fix_fft+2,f,c
  2497  00776E  3214               	rrcf	??_fix_fft+1,f,c
  2498  007770  2E13               	decfsz	??_fix_fft,f,c
  2499  007772  D7F6               	goto	u415
  2500  007774                     u417:
  2501  007774  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2502  007778  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2503  00777C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2504  007780  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2505                           
  2506                           ;fft.c: 137: b = c & 0x01;
  2507  007784  0E01               	movlw	1
  2508  007786  1449               	andwf	fix_fft@c,w,c
  2509  007788  6E37               	movwf	fix_fft@b,c
  2510  00778A  6A38               	clrf	fix_fft@b+1,c
  2511                           
  2512                           ;fft.c: 138: ti = (c >> 1) + b;
  2513  00778C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2514  007790  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2515  007794  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2516  007798  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2517  00779C  3416               	rlcf	??_fix_fft+3,w,c
  2518  00779E  3216               	rrcf	??_fix_fft+3,f,c
  2519  0077A0  3215               	rrcf	??_fix_fft+2,f,c
  2520  0077A2  3214               	rrcf	??_fix_fft+1,f,c
  2521  0077A4  3213               	rrcf	??_fix_fft,f,c
  2522  0077A6  5037               	movf	fix_fft@b,w,c
  2523  0077A8  2413               	addwf	??_fix_fft,w,c
  2524  0077AA  6E35               	movwf	fix_fft@ti,c
  2525  0077AC  5038               	movf	fix_fft@b+1,w,c
  2526  0077AE  2014               	addwfc	??_fix_fft+1,w,c
  2527  0077B0  6E36               	movwf	fix_fft@ti+1,c
  2528                           
  2529                           ;fft.c: 140: c = ((long int)wi * (long int)fr[j]);
  2530  0077B2  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  2531  0077B6  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  2532  0077BA  0E00               	movlw	0
  2533  0077BC  BE02               	btfsc	___lmul@multiplier+1,7,c
  2534  0077BE  0EFF               	movlw	-1
  2535  0077C0  6E03               	movwf	___lmul@multiplier+2,c
  2536  0077C2  6E04               	movwf	___lmul@multiplier+3,c
  2537  0077C4  90D8               	bcf	status,0,c
  2538  0077C6  3445               	rlcf	fix_fft@j,w,c
  2539  0077C8  6ED9               	movwf	fsr2l,c
  2540  0077CA  3446               	rlcf	fix_fft@j+1,w,c
  2541  0077CC  6EDA               	movwf	fsr2h,c
  2542  0077CE  500D               	movf	fix_fft@fr,w,c
  2543  0077D0  26D9               	addwf	fsr2l,f,c
  2544  0077D2  500E               	movf	fix_fft@fr+1,w,c
  2545  0077D4  22DA               	addwfc	fsr2h,f,c
  2546  0077D6  CFDE F005          	movff	postinc2,___lmul@multiplicand
  2547  0077DA  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  2548  0077DE  0E00               	movlw	0
  2549  0077E0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  2550  0077E2  0EFF               	movlw	-1
  2551  0077E4  6E07               	movwf	___lmul@multiplicand+2,c
  2552  0077E6  6E08               	movwf	___lmul@multiplicand+3,c
  2553  0077E8  ECAD  F036         	call	___lmul	;wreg free
  2554  0077EC  C001  F049         	movff	?___lmul,fix_fft@c
  2555  0077F0  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  2556  0077F4  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  2557  0077F8  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  2558                           
  2559                           ;fft.c: 141: c = c >> 14;
  2560  0077FC  0E0E               	movlw	14
  2561  0077FE  6E13               	movwf	??_fix_fft& (0+255),c
  2562  007800  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  2563  007804  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  2564  007808  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  2565  00780C  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  2566  007810                     u425:
  2567  007810  6613               	tstfsz	??_fix_fft,c
  2568  007812  D001               	goto	u426
  2569  007814  D007               	goto	u427
  2570  007816                     u426:
  2571  007816  3417               	rlcf	??_fix_fft+4,w,c
  2572  007818  3217               	rrcf	??_fix_fft+4,f,c
  2573  00781A  3216               	rrcf	??_fix_fft+3,f,c
  2574  00781C  3215               	rrcf	??_fix_fft+2,f,c
  2575  00781E  3214               	rrcf	??_fix_fft+1,f,c
  2576  007820  2E13               	decfsz	??_fix_fft,f,c
  2577  007822  D7F6               	goto	u425
  2578  007824                     u427:
  2579  007824  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  2580  007828  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  2581  00782C  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  2582  007830  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  2583                           
  2584                           ;fft.c: 142: b = c & 0x01;
  2585  007834  0E01               	movlw	1
  2586  007836  1449               	andwf	fix_fft@c,w,c
  2587  007838  6E37               	movwf	fix_fft@b,c
  2588  00783A  6A38               	clrf	fix_fft@b+1,c
  2589                           
  2590                           ;fft.c: 143: ti = ti + ((c >> 1) + b);
  2591  00783C  C049  F013         	movff	fix_fft@c,??_fix_fft
  2592  007840  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  2593  007844  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  2594  007848  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  2595  00784C  3416               	rlcf	??_fix_fft+3,w,c
  2596  00784E  3216               	rrcf	??_fix_fft+3,f,c
  2597  007850  3215               	rrcf	??_fix_fft+2,f,c
  2598  007852  3214               	rrcf	??_fix_fft+1,f,c
  2599  007854  3213               	rrcf	??_fix_fft,f,c
  2600  007856  5037               	movf	fix_fft@b,w,c
  2601  007858  2613               	addwf	??_fix_fft,f,c
  2602  00785A  5038               	movf	fix_fft@b+1,w,c
  2603  00785C  2214               	addwfc	??_fix_fft+1,f,c
  2604  00785E  5035               	movf	fix_fft@ti,w,c
  2605  007860  2413               	addwf	??_fix_fft,w,c
  2606  007862  6E35               	movwf	fix_fft@ti,c
  2607  007864  5036               	movf	fix_fft@ti+1,w,c
  2608  007866  2014               	addwfc	??_fix_fft+1,w,c
  2609  007868  6E36               	movwf	fix_fft@ti+1,c
  2610                           
  2611                           ;fft.c: 145: qr = fr[i];
  2612  00786A  90D8               	bcf	status,0,c
  2613  00786C  3439               	rlcf	fix_fft@i,w,c
  2614  00786E  6ED9               	movwf	fsr2l,c
  2615  007870  343A               	rlcf	fix_fft@i+1,w,c
  2616  007872  6EDA               	movwf	fsr2h,c
  2617  007874  500D               	movf	fix_fft@fr,w,c
  2618  007876  26D9               	addwf	fsr2l,f,c
  2619  007878  500E               	movf	fix_fft@fr+1,w,c
  2620  00787A  22DA               	addwfc	fsr2h,f,c
  2621  00787C  CFDE F027          	movff	postinc2,fix_fft@qr
  2622  007880  CFDD F028          	movff	postdec2,fix_fft@qr+1
  2623                           
  2624                           ;fft.c: 146: qi = fi[i];
  2625  007884  90D8               	bcf	status,0,c
  2626  007886  3439               	rlcf	fix_fft@i,w,c
  2627  007888  6ED9               	movwf	fsr2l,c
  2628  00788A  343A               	rlcf	fix_fft@i+1,w,c
  2629  00788C  6EDA               	movwf	fsr2h,c
  2630  00788E  500F               	movf	fix_fft@fi,w,c
  2631  007890  26D9               	addwf	fsr2l,f,c
  2632  007892  5010               	movf	fix_fft@fi+1,w,c
  2633  007894  22DA               	addwfc	fsr2h,f,c
  2634  007896  CFDE F029          	movff	postinc2,fix_fft@qi
  2635  00789A  CFDD F02A          	movff	postdec2,fix_fft@qi+1
  2636                           
  2637                           ;fft.c: 147: qr >>= 1;
  2638  00789E  3428               	rlcf	fix_fft@qr+1,w,c
  2639  0078A0  3228               	rrcf	fix_fft@qr+1,f,c
  2640  0078A2  3227               	rrcf	fix_fft@qr,f,c
  2641                           
  2642                           ;fft.c: 148: qi >>= 1;
  2643  0078A4  342A               	rlcf	fix_fft@qi+1,w,c
  2644  0078A6  322A               	rrcf	fix_fft@qi+1,f,c
  2645  0078A8  3229               	rrcf	fix_fft@qi,f,c
  2646                           
  2647                           ;fft.c: 150: fr[j] = qr - tr;
  2648  0078AA  C033  F013         	movff	fix_fft@tr,??_fix_fft
  2649  0078AE  C034  F014         	movff	fix_fft@tr+1,??_fix_fft+1
  2650  0078B2  1E13               	comf	??_fix_fft,f,c
  2651  0078B4  1E14               	comf	??_fix_fft+1,f,c
  2652  0078B6  4A13               	infsnz	??_fix_fft,f,c
  2653  0078B8  2A14               	incf	??_fix_fft+1,f,c
  2654  0078BA  5027               	movf	fix_fft@qr,w,c
  2655  0078BC  2613               	addwf	??_fix_fft,f,c
  2656  0078BE  5028               	movf	fix_fft@qr+1,w,c
  2657  0078C0  2214               	addwfc	??_fix_fft+1,f,c
  2658  0078C2  90D8               	bcf	status,0,c
  2659  0078C4  3445               	rlcf	fix_fft@j,w,c
  2660  0078C6  6ED9               	movwf	fsr2l,c
  2661  0078C8  3446               	rlcf	fix_fft@j+1,w,c
  2662  0078CA  6EDA               	movwf	fsr2h,c
  2663  0078CC  500D               	movf	fix_fft@fr,w,c
  2664  0078CE  26D9               	addwf	fsr2l,f,c
  2665  0078D0  500E               	movf	fix_fft@fr+1,w,c
  2666  0078D2  22DA               	addwfc	fsr2h,f,c
  2667  0078D4  C013  FFDE         	movff	??_fix_fft,postinc2
  2668  0078D8  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2669                           
  2670                           ;fft.c: 151: fi[j] = qi - ti;
  2671  0078DC  C035  F013         	movff	fix_fft@ti,??_fix_fft
  2672  0078E0  C036  F014         	movff	fix_fft@ti+1,??_fix_fft+1
  2673  0078E4  1E13               	comf	??_fix_fft,f,c
  2674  0078E6  1E14               	comf	??_fix_fft+1,f,c
  2675  0078E8  4A13               	infsnz	??_fix_fft,f,c
  2676  0078EA  2A14               	incf	??_fix_fft+1,f,c
  2677  0078EC  5029               	movf	fix_fft@qi,w,c
  2678  0078EE  2613               	addwf	??_fix_fft,f,c
  2679  0078F0  502A               	movf	fix_fft@qi+1,w,c
  2680  0078F2  2214               	addwfc	??_fix_fft+1,f,c
  2681  0078F4  90D8               	bcf	status,0,c
  2682  0078F6  3445               	rlcf	fix_fft@j,w,c
  2683  0078F8  6ED9               	movwf	fsr2l,c
  2684  0078FA  3446               	rlcf	fix_fft@j+1,w,c
  2685  0078FC  6EDA               	movwf	fsr2h,c
  2686  0078FE  500F               	movf	fix_fft@fi,w,c
  2687  007900  26D9               	addwf	fsr2l,f,c
  2688  007902  5010               	movf	fix_fft@fi+1,w,c
  2689  007904  22DA               	addwfc	fsr2h,f,c
  2690  007906  C013  FFDE         	movff	??_fix_fft,postinc2
  2691  00790A  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2692                           
  2693                           ;fft.c: 152: fr[i] = qr + tr;
  2694  00790E  C027  F013         	movff	fix_fft@qr,??_fix_fft
  2695  007912  C028  F014         	movff	fix_fft@qr+1,??_fix_fft+1
  2696  007916  5033               	movf	fix_fft@tr,w,c
  2697  007918  2613               	addwf	??_fix_fft,f,c
  2698  00791A  5034               	movf	fix_fft@tr+1,w,c
  2699  00791C  2214               	addwfc	??_fix_fft+1,f,c
  2700  00791E  90D8               	bcf	status,0,c
  2701  007920  3439               	rlcf	fix_fft@i,w,c
  2702  007922  6ED9               	movwf	fsr2l,c
  2703  007924  343A               	rlcf	fix_fft@i+1,w,c
  2704  007926  6EDA               	movwf	fsr2h,c
  2705  007928  500D               	movf	fix_fft@fr,w,c
  2706  00792A  26D9               	addwf	fsr2l,f,c
  2707  00792C  500E               	movf	fix_fft@fr+1,w,c
  2708  00792E  22DA               	addwfc	fsr2h,f,c
  2709  007930  C013  FFDE         	movff	??_fix_fft,postinc2
  2710  007934  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2711                           
  2712                           ;fft.c: 153: fi[i] = qi + ti;
  2713  007938  C029  F013         	movff	fix_fft@qi,??_fix_fft
  2714  00793C  C02A  F014         	movff	fix_fft@qi+1,??_fix_fft+1
  2715  007940  5035               	movf	fix_fft@ti,w,c
  2716  007942  2613               	addwf	??_fix_fft,f,c
  2717  007944  5036               	movf	fix_fft@ti+1,w,c
  2718  007946  2214               	addwfc	??_fix_fft+1,f,c
  2719  007948  90D8               	bcf	status,0,c
  2720  00794A  3439               	rlcf	fix_fft@i,w,c
  2721  00794C  6ED9               	movwf	fsr2l,c
  2722  00794E  343A               	rlcf	fix_fft@i+1,w,c
  2723  007950  6EDA               	movwf	fsr2h,c
  2724  007952  500F               	movf	fix_fft@fi,w,c
  2725  007954  26D9               	addwf	fsr2l,f,c
  2726  007956  5010               	movf	fix_fft@fi+1,w,c
  2727  007958  22DA               	addwfc	fsr2h,f,c
  2728  00795A  C013  FFDE         	movff	??_fix_fft,postinc2
  2729  00795E  C014  FFDD         	movff	??_fix_fft+1,postdec2
  2730  007962  5023               	movf	fix_fft@istep,w,c
  2731  007964  2639               	addwf	fix_fft@i,f,c
  2732  007966  5024               	movf	fix_fft@istep+1,w,c
  2733  007968  223A               	addwfc	fix_fft@i+1,f,c
  2734  00796A  5025               	movf	fix_fft@istep+2,w,c
  2735  00796C  223B               	addwfc	fix_fft@i+2,f,c
  2736  00796E  5026               	movf	fix_fft@istep+3,w,c
  2737  007970  223C               	addwfc	fix_fft@i+3,f,c
  2738  007972                     l1034:
  2739  007972  503C               	movf	fix_fft@i+3,w,c
  2740  007974  0A80               	xorlw	128
  2741  007976  6E13               	movwf	??_fix_fft& (0+255),c
  2742  007978  502F               	movf	fix_fft@n,w,c
  2743  00797A  5C39               	subwf	fix_fft@i,w,c
  2744  00797C  5030               	movf	fix_fft@n+1,w,c
  2745  00797E  583A               	subwfb	fix_fft@i+1,w,c
  2746  007980  5031               	movf	fix_fft@n+2,w,c
  2747  007982  583B               	subwfb	fix_fft@i+2,w,c
  2748  007984  5032               	movf	fix_fft@n+3,w,c
  2749  007986  0A80               	xorlw	128
  2750  007988  5813               	subwfb	??_fix_fft& (0+255),w,c
  2751  00798A  A0D8               	btfss	status,0,c
  2752  00798C  D5F6               	goto	l990
  2753  00798E  4A11               	infsnz	fix_fft@m,f,c
  2754  007990  2A12               	incf	fix_fft@m+1,f,c
  2755  007992                     l1038:
  2756  007992  C011  F013         	movff	fix_fft@m,??_fix_fft
  2757  007996  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  2758  00799A  0E00               	movlw	0
  2759  00799C  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  2760  00799E  0EFF               	movlw	255
  2761  0079A0  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2762  0079A2  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2763  0079A4  5016               	movf	??_fix_fft+3,w,c
  2764  0079A6  0A80               	xorlw	128
  2765  0079A8  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2766  0079AA  5041               	movf	fix_fft@l,w,c
  2767  0079AC  5C13               	subwf	??_fix_fft,w,c
  2768  0079AE  5042               	movf	fix_fft@l+1,w,c
  2769  0079B0  5814               	subwfb	??_fix_fft+1,w,c
  2770  0079B2  5043               	movf	fix_fft@l+2,w,c
  2771  0079B4  5815               	subwfb	??_fix_fft+2,w,c
  2772  0079B6  5044               	movf	fix_fft@l+3,w,c
  2773  0079B8  0A80               	xorlw	128
  2774  0079BA  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2775  0079BC  A0D8               	btfss	status,0,c
  2776  0079BE  D581               	goto	l982
  2777                           
  2778                           ;fft.c: 154: }
  2779                           ;fft.c: 155: }
  2780                           ;fft.c: 157: --k;
  2781  0079C0  0EFF               	movlw	255
  2782  0079C2  261B               	addwf	fix_fft@k,f,c
  2783  0079C4  0EFF               	movlw	255
  2784  0079C6  221C               	addwfc	fix_fft@k+1,f,c
  2785  0079C8  0EFF               	movlw	255
  2786  0079CA  221D               	addwfc	fix_fft@k+2,f,c
  2787  0079CC  0EFF               	movlw	255
  2788  0079CE  221E               	addwfc	fix_fft@k+3,f,c
  2789                           
  2790                           ;fft.c: 158: l = istep;
  2791  0079D0  C023  F041         	movff	fix_fft@istep,fix_fft@l
  2792  0079D4  C024  F042         	movff	fix_fft@istep+1,fix_fft@l+1
  2793  0079D8  C025  F043         	movff	fix_fft@istep+2,fix_fft@l+2
  2794  0079DC  C026  F044         	movff	fix_fft@istep+3,fix_fft@l+3
  2795  0079E0                     l63:
  2796  0079E0  5044               	movf	fix_fft@l+3,w,c
  2797  0079E2  0A80               	xorlw	128
  2798  0079E4  6E13               	movwf	??_fix_fft& (0+255),c
  2799  0079E6  502F               	movf	fix_fft@n,w,c
  2800  0079E8  5C41               	subwf	fix_fft@l,w,c
  2801  0079EA  5030               	movf	fix_fft@n+1,w,c
  2802  0079EC  5842               	subwfb	fix_fft@l+1,w,c
  2803  0079EE  5031               	movf	fix_fft@n+2,w,c
  2804  0079F0  5843               	subwfb	fix_fft@l+2,w,c
  2805  0079F2  5032               	movf	fix_fft@n+3,w,c
  2806  0079F4  0A80               	xorlw	128
  2807  0079F6  5813               	subwfb	??_fix_fft& (0+255),w,c
  2808  0079F8  B0D8               	btfsc	status,0,c
  2809  0079FA  0012               	return	
  2810  0079FC  D554               	goto	l978
  2811  0079FE                     __end_of_fix_fft:
  2812                           	opt stack 0
  2813                           tblptru	equ	0xFF8
  2814                           tblptrh	equ	0xFF7
  2815                           tblptrl	equ	0xFF6
  2816                           tablat	equ	0xFF5
  2817                           postinc0	equ	0xFEE
  2818                           wreg	equ	0xFE8
  2819                           postinc1	equ	0xFE6
  2820                           postdec1	equ	0xFE5
  2821                           fsr1h	equ	0xFE2
  2822                           fsr1l	equ	0xFE1
  2823                           indf2	equ	0xFDF
  2824                           postinc2	equ	0xFDE
  2825                           postdec2	equ	0xFDD
  2826                           fsr2h	equ	0xFDA
  2827                           fsr2l	equ	0xFD9
  2828                           status	equ	0xFD8
  2829                           
  2830 ;; *************** function ___lmul *****************
  2831 ;; Defined at:
  2832 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/Umul32.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  multiplier      4    0[COMRAM] unsigned long 
  2835 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  product         4    8[COMRAM] unsigned long 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  4    0[COMRAM] unsigned long 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2847 ;;      Params:         8       0       0       0       0       0       0
  2848 ;;      Locals:         4       0       0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0
  2850 ;;      Totals:        12       0       0       0       0       0       0
  2851 ;;Total ram usage:       12 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_fix_fft
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text2
  2861  006D5A                     __ptext2:
  2862                           	opt stack 0
  2863  006D5A                     ___lmul:
  2864                           	opt stack 29
  2865                           
  2866                           ;incstack = 0
  2867  006D5A  0E00               	movlw	0
  2868  006D5C  6E09               	movwf	___lmul@product,c
  2869  006D5E  0E00               	movlw	0
  2870  006D60  6E0A               	movwf	___lmul@product+1,c
  2871  006D62  0E00               	movlw	0
  2872  006D64  6E0B               	movwf	___lmul@product+2,c
  2873  006D66  0E00               	movlw	0
  2874  006D68  6E0C               	movwf	___lmul@product+3,c
  2875  006D6A                     l920:
  2876  006D6A  A001               	btfss	___lmul@multiplier,0,c
  2877  006D6C  D008               	goto	l924
  2878  006D6E  5005               	movf	___lmul@multiplicand,w,c
  2879  006D70  2609               	addwf	___lmul@product,f,c
  2880  006D72  5006               	movf	___lmul@multiplicand+1,w,c
  2881  006D74  220A               	addwfc	___lmul@product+1,f,c
  2882  006D76  5007               	movf	___lmul@multiplicand+2,w,c
  2883  006D78  220B               	addwfc	___lmul@product+2,f,c
  2884  006D7A  5008               	movf	___lmul@multiplicand+3,w,c
  2885  006D7C  220C               	addwfc	___lmul@product+3,f,c
  2886  006D7E                     l924:
  2887  006D7E  90D8               	bcf	status,0,c
  2888  006D80  3605               	rlcf	___lmul@multiplicand,f,c
  2889  006D82  3606               	rlcf	___lmul@multiplicand+1,f,c
  2890  006D84  3607               	rlcf	___lmul@multiplicand+2,f,c
  2891  006D86  3608               	rlcf	___lmul@multiplicand+3,f,c
  2892  006D88  90D8               	bcf	status,0,c
  2893  006D8A  3204               	rrcf	___lmul@multiplier+3,f,c
  2894  006D8C  3203               	rrcf	___lmul@multiplier+2,f,c
  2895  006D8E  3202               	rrcf	___lmul@multiplier+1,f,c
  2896  006D90  3201               	rrcf	___lmul@multiplier,f,c
  2897  006D92  5004               	movf	___lmul@multiplier+3,w,c
  2898  006D94  1001               	iorwf	___lmul@multiplier,w,c
  2899  006D96  1002               	iorwf	___lmul@multiplier+1,w,c
  2900  006D98  1003               	iorwf	___lmul@multiplier+2,w,c
  2901  006D9A  A4D8               	btfss	status,2,c
  2902  006D9C  D7E6               	goto	l920
  2903  006D9E  C009  F001         	movff	___lmul@product,?___lmul
  2904  006DA2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  2905  006DA6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  2906  006DAA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  2907  006DAE  0012               	return	
  2908  006DB0                     __end_of___lmul:
  2909                           	opt stack 0
  2910                           tblptru	equ	0xFF8
  2911                           tblptrh	equ	0xFF7
  2912                           tblptrl	equ	0xFF6
  2913                           tablat	equ	0xFF5
  2914                           postinc0	equ	0xFEE
  2915                           wreg	equ	0xFE8
  2916                           postinc1	equ	0xFE6
  2917                           postdec1	equ	0xFE5
  2918                           fsr1h	equ	0xFE2
  2919                           fsr1l	equ	0xFE1
  2920                           indf2	equ	0xFDF
  2921                           postinc2	equ	0xFDE
  2922                           postdec2	equ	0xFDD
  2923                           fsr2h	equ	0xFDA
  2924                           fsr2l	equ	0xFD9
  2925                           status	equ	0xFD8
  2926                           
  2927 ;; *************** function ___wmul *****************
  2928 ;; Defined at:
  2929 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/Umul16.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  multiplier      2    0[COMRAM] unsigned int 
  2932 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  product         2    4[COMRAM] unsigned int 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2    0[COMRAM] unsigned int 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0, prodl, prodh
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2944 ;;      Params:         4       0       0       0       0       0       0
  2945 ;;      Locals:         2       0       0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0
  2947 ;;      Totals:         6       0       0       0       0       0       0
  2948 ;;Total ram usage:        6 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_main
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text3
  2958  006CE6                     __ptext3:
  2959                           	opt stack 0
  2960  006CE6                     ___wmul:
  2961                           	opt stack 30
  2962                           
  2963                           ;incstack = 0
  2964  006CE6  5001               	movf	___wmul@multiplier,w,c
  2965  006CE8  0203               	mulwf	___wmul@multiplicand,c
  2966  006CEA  CFF3 F005          	movff	prodl,___wmul@product
  2967  006CEE  CFF4 F006          	movff	prodh,___wmul@product+1
  2968  006CF2  5001               	movf	___wmul@multiplier,w,c
  2969  006CF4  0204               	mulwf	___wmul@multiplicand+1,c
  2970  006CF6  50F3               	movf	prodl,w,c
  2971  006CF8  2606               	addwf	___wmul@product+1,f,c
  2972  006CFA  5002               	movf	___wmul@multiplier+1,w,c
  2973  006CFC  0203               	mulwf	___wmul@multiplicand,c
  2974  006CFE  50F3               	movf	prodl,w,c
  2975  006D00  2606               	addwf	___wmul@product+1,f,c
  2976  006D02  C005  F001         	movff	___wmul@product,?___wmul
  2977  006D06  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2978  006D0A  0012               	return	
  2979  006D0C                     __end_of___wmul:
  2980                           	opt stack 0
  2981                           tblptru	equ	0xFF8
  2982                           tblptrh	equ	0xFF7
  2983                           tblptrl	equ	0xFF6
  2984                           tablat	equ	0xFF5
  2985                           prodh	equ	0xFF4
  2986                           prodl	equ	0xFF3
  2987                           postinc0	equ	0xFEE
  2988                           wreg	equ	0xFE8
  2989                           postinc1	equ	0xFE6
  2990                           postdec1	equ	0xFE5
  2991                           fsr1h	equ	0xFE2
  2992                           fsr1l	equ	0xFE1
  2993                           indf2	equ	0xFDF
  2994                           postinc2	equ	0xFDE
  2995                           postdec2	equ	0xFDD
  2996                           fsr2h	equ	0xFDA
  2997                           fsr2l	equ	0xFD9
  2998                           status	equ	0xFD8
  2999                           
  3000 ;; *************** function _ReadADC *****************
  3001 ;; Defined at:
  3002 ;;		line 24 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcread.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  2    0[COMRAM] int 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3016 ;;      Params:         2       0       0       0       0       0       0
  3017 ;;      Locals:         0       0       0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0
  3019 ;;      Totals:         2       0       0       0       0       0       0
  3020 ;;Total ram usage:        2 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text4
  3030  006C9E                     __ptext4:
  3031                           	opt stack 0
  3032  006C9E                     _ReadADC:
  3033                           	opt stack 30
  3034                           
  3035                           ;incstack = 0
  3036  006C9E  50C4               	movf	4036,w,c	;volatile
  3037  006CA0  6E02               	movwf	?_ReadADC+1,c
  3038  006CA2  50C3               	movf	4035,w,c	;volatile
  3039  006CA4  6E01               	movwf	?_ReadADC,c
  3040  006CA6  0012               	return	
  3041  006CA8                     __end_of_ReadADC:
  3042                           	opt stack 0
  3043                           tblptru	equ	0xFF8
  3044                           tblptrh	equ	0xFF7
  3045                           tblptrl	equ	0xFF6
  3046                           tablat	equ	0xFF5
  3047                           prodh	equ	0xFF4
  3048                           prodl	equ	0xFF3
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           postinc1	equ	0xFE6
  3052                           postdec1	equ	0xFE5
  3053                           fsr1h	equ	0xFE2
  3054                           fsr1l	equ	0xFE1
  3055                           indf2	equ	0xFDF
  3056                           postinc2	equ	0xFDE
  3057                           postdec2	equ	0xFDD
  3058                           fsr2h	equ	0xFDA
  3059                           fsr2l	equ	0xFD9
  3060                           status	equ	0xFD8
  3061                           
  3062 ;; *************** function _OpenADC *****************
  3063 ;; Defined at:
  3064 ;;		line 305 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcopen.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  config          1    wreg     unsigned char 
  3067 ;;  config2         1    0[COMRAM] unsigned char 
  3068 ;;  config3         1    1[COMRAM] unsigned char 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  config          1    4[COMRAM] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;		None               void
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3080 ;;      Params:         2       0       0       0       0       0       0
  3081 ;;      Locals:         1       0       0       0       0       0       0
  3082 ;;      Temps:          2       0       0       0       0       0       0
  3083 ;;      Totals:         5       0       0       0       0       0       0
  3084 ;;Total ram usage:        5 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text5
  3094  006D0C                     __ptext5:
  3095                           	opt stack 0
  3096  006D0C                     _OpenADC:
  3097                           	opt stack 30
  3098                           
  3099                           ;incstack = 0
  3100                           ;OpenADC@config stored from wreg
  3101  006D0C  6E05               	movwf	OpenADC@config,c
  3102  006D0E  0E00               	movlw	0
  3103  006D10  6EC2               	movwf	4034,c	;volatile
  3104  006D12  0E00               	movlw	0
  3105  006D14  6EC1               	movwf	4033,c	;volatile
  3106  006D16  0E00               	movlw	0
  3107  006D18  6EC0               	movwf	4032,c	;volatile
  3108  006D1A  5001               	movf	OpenADC@config2,w,c
  3109  006D1C  0B7C               	andlw	124
  3110  006D1E  6EC2               	movwf	4034,c	;volatile
  3111  006D20  C002  FFC1         	movff	OpenADC@config3,4033	;volatile
  3112  006D24  C005  F003         	movff	OpenADC@config,??_OpenADC
  3113  006D28  90D8               	bcf	status,0,c
  3114  006D2A  3603               	rlcf	??_OpenADC,f,c
  3115  006D2C  90D8               	bcf	status,0,c
  3116  006D2E  3603               	rlcf	??_OpenADC,f,c
  3117  006D30  0E38               	movlw	56
  3118  006D32  1603               	andwf	??_OpenADC,f,c
  3119  006D34  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  3120  006D38  3A04               	swapf	??_OpenADC+1,f,c
  3121  006D3A  0E0F               	movlw	15
  3122  006D3C  1604               	andwf	??_OpenADC+1,f,c
  3123  006D3E  0E07               	movlw	7
  3124  006D40  1604               	andwf	??_OpenADC+1,f,c
  3125  006D42  5005               	movf	OpenADC@config,w,c
  3126  006D44  0B80               	andlw	128
  3127  006D46  1004               	iorwf	??_OpenADC+1,w,c
  3128  006D48  1003               	iorwf	??_OpenADC,w,c
  3129  006D4A  6EC0               	movwf	4032,c	;volatile
  3130  006D4C  AE01               	btfss	OpenADC@config2,7,c
  3131  006D4E  D003               	goto	l99
  3132  006D50  9C9E               	bcf	3998,6,c	;volatile
  3133  006D52  8C9D               	bsf	3997,6,c	;volatile
  3134  006D54  8CF2               	bsf	intcon,6,c	;volatile
  3135  006D56                     l99:
  3136  006D56  80C2               	bsf	4034,0,c	;volatile
  3137  006D58  0012               	return	
  3138  006D5A                     __end_of_OpenADC:
  3139                           	opt stack 0
  3140                           tblptru	equ	0xFF8
  3141                           tblptrh	equ	0xFF7
  3142                           tblptrl	equ	0xFF6
  3143                           tablat	equ	0xFF5
  3144                           prodh	equ	0xFF4
  3145                           prodl	equ	0xFF3
  3146                           intcon	equ	0xFF2
  3147                           postinc0	equ	0xFEE
  3148                           wreg	equ	0xFE8
  3149                           postinc1	equ	0xFE6
  3150                           postdec1	equ	0xFE5
  3151                           fsr1h	equ	0xFE2
  3152                           fsr1l	equ	0xFE1
  3153                           indf2	equ	0xFDF
  3154                           postinc2	equ	0xFDE
  3155                           postdec2	equ	0xFDD
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8
  3159                           
  3160 ;; *************** function _Delay10TCYx *****************
  3161 ;; Defined at:
  3162 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d10tcyx.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  unit            1    wreg     unsigned char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  unit            1    0[COMRAM] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;		None               void
  3169 ;; Registers used:
  3170 ;;		wreg
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3176 ;;      Params:         0       0       0       0       0       0       0
  3177 ;;      Locals:         1       0       0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0
  3179 ;;      Totals:         1       0       0       0       0       0       0
  3180 ;;Total ram usage:        1 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_main
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text6
  3190  006CB4                     __ptext6:
  3191                           	opt stack 0
  3192  006CB4                     _Delay10TCYx:
  3193                           	opt stack 30
  3194                           
  3195                           ;incstack = 0
  3196                           ;Delay10TCYx@unit stored from wreg
  3197  006CB4  6E01               	movwf	Delay10TCYx@unit,c
  3198  006CB6                     l333:
  3199  006CB6  0E03               	movlw	3
  3200  006CB8                     u607:
  3201  006CB8  2EE8               	decfsz	wreg,f,c
  3202  006CBA  D7FE               	goto	u607
  3203  006CBC  F000               	nop	
  3204  006CBE  2E01               	decfsz	Delay10TCYx@unit,f,c
  3205  006CC0  D7FA               	goto	l333
  3206  006CC2  0012               	return	
  3207  006CC4                     __end_of_Delay10TCYx:
  3208                           	opt stack 0
  3209                           tblptru	equ	0xFF8
  3210                           tblptrh	equ	0xFF7
  3211                           tblptrl	equ	0xFF6
  3212                           tablat	equ	0xFF5
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           intcon	equ	0xFF2
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           postinc1	equ	0xFE6
  3219                           postdec1	equ	0xFE5
  3220                           fsr1h	equ	0xFE2
  3221                           fsr1l	equ	0xFE1
  3222                           indf2	equ	0xFDF
  3223                           postinc2	equ	0xFDE
  3224                           postdec2	equ	0xFDD
  3225                           fsr2h	equ	0xFDA
  3226                           fsr2l	equ	0xFD9
  3227                           status	equ	0xFD8
  3228                           
  3229 ;; *************** function _ConvertADC *****************
  3230 ;; Defined at:
  3231 ;;		line 22 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcconv.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;		None               void
  3238 ;; Registers used:
  3239 ;;		None
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3245 ;;      Params:         0       0       0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0
  3248 ;;      Totals:         0       0       0       0       0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text7
  3259  006C9A                     __ptext7:
  3260                           	opt stack 0
  3261  006C9A                     _ConvertADC:
  3262                           	opt stack 30
  3263                           
  3264                           ;incstack = 0
  3265  006C9A  82C2               	bsf	4034,1,c	;volatile
  3266  006C9C  0012               	return	
  3267  006C9E                     __end_of_ConvertADC:
  3268                           	opt stack 0
  3269                           tblptru	equ	0xFF8
  3270                           tblptrh	equ	0xFF7
  3271                           tblptrl	equ	0xFF6
  3272                           tablat	equ	0xFF5
  3273                           prodh	equ	0xFF4
  3274                           prodl	equ	0xFF3
  3275                           intcon	equ	0xFF2
  3276                           postinc0	equ	0xFEE
  3277                           wreg	equ	0xFE8
  3278                           postinc1	equ	0xFE6
  3279                           postdec1	equ	0xFE5
  3280                           fsr1h	equ	0xFE2
  3281                           fsr1l	equ	0xFE1
  3282                           indf2	equ	0xFDF
  3283                           postinc2	equ	0xFDE
  3284                           postdec2	equ	0xFDD
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _BusyADC *****************
  3290 ;; Defined at:
  3291 ;;		line 26 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcbusy.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      unsigned char 
  3298 ;; Registers used:
  3299 ;;		wreg
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3305 ;;      Params:         0       0       0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_main
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text8
  3319  006CA8                     __ptext8:
  3320                           	opt stack 0
  3321  006CA8                     _BusyADC:
  3322                           	opt stack 30
  3323                           
  3324                           ;incstack = 0
  3325  006CA8  A2C2               	btfss	4034,1,c	;volatile
  3326  006CAA  D002               	goto	u330
  3327  006CAC  0E01               	movlw	1
  3328  006CAE  0012               	return	
  3329  006CB0                     u330:
  3330  006CB0  0E00               	movlw	0
  3331  006CB2  0012               	return	
  3332  006CB4                     __end_of_BusyADC:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           prodh	equ	0xFF4
  3339                           prodl	equ	0xFF3
  3340                           intcon	equ	0xFF2
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           postinc1	equ	0xFE6
  3344                           postdec1	equ	0xFE5
  3345                           fsr1h	equ	0xFE2
  3346                           fsr1l	equ	0xFE1
  3347                           indf2	equ	0xFDF
  3348                           postinc2	equ	0xFDE
  3349                           postdec2	equ	0xFDD
  3350                           fsr2h	equ	0xFDA
  3351                           fsr2l	equ	0xFD9
  3352                           status	equ	0xFD8
  3353                           tblptru	equ	0xFF8
  3354                           tblptrh	equ	0xFF7
  3355                           tblptrl	equ	0xFF6
  3356                           tablat	equ	0xFF5
  3357                           prodh	equ	0xFF4
  3358                           prodl	equ	0xFF3
  3359                           intcon	equ	0xFF2
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           postinc1	equ	0xFE6
  3363                           postdec1	equ	0xFE5
  3364                           fsr1h	equ	0xFE2
  3365                           fsr1l	equ	0xFE1
  3366                           indf2	equ	0xFDF
  3367                           postinc2	equ	0xFDE
  3368                           postdec2	equ	0xFDD
  3369                           fsr2h	equ	0xFDA
  3370                           fsr2l	equ	0xFD9
  3371                           status	equ	0xFD8
  3372                           
  3373                           	psect	rparam
  3374  0000                     tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           prodh	equ	0xFF4
  3379                           prodl	equ	0xFF3
  3380                           intcon	equ	0xFF2
  3381                           postinc0	equ	0xFEE
  3382                           wreg	equ	0xFE8
  3383                           postinc1	equ	0xFE6
  3384                           postdec1	equ	0xFE5
  3385                           fsr1h	equ	0xFE2
  3386                           fsr1l	equ	0xFE1
  3387                           indf2	equ	0xFDF
  3388                           postinc2	equ	0xFDE
  3389                           postdec2	equ	0xFDD
  3390                           fsr2h	equ	0xFDA
  3391                           fsr2l	equ	0xFD9
  3392                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1536
    Data        0
    BSS         256
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      89
    BANK0           160     12     140
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fix_fft@fi	PTR short  size(2) Largest target is 128
		 -> imaginaryNumbers(BANK1[128]), 

    fix_fft@fr	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_fix_fft
    _fix_fft->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    4086
                                             76 COMRAM    13    13      0
                                              0 BANK0     12    12      0
                            _BusyADC
                         _ConvertADC
                        _Delay10TCYx
                            _OpenADC
                            _ReadADC
                             ___wmul
                            _fix_fft
 ---------------------------------------------------------------------------------
 (1) _fix_fft                                             68    62      6    2782
                                             12 COMRAM    64    58      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     444
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     371
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     238
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Delay10TCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Delay10TCYx
   _OpenADC
   _ReadADC
   ___wmul
   _fix_fft
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      80       6       50.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      C      8C       4       87.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      59       1       93.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     165       9        0.0%
DATA                 0      0     165      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Nov 22 16:52:50 2014

                     l63 79E0                       l57 72CE                       l99 6D56  
    ___wmul@multiplicand 0003                      l333 6CB6                      l920 6D6A  
                    l924 6D7E                      l972 7452                      l956 72DE  
                    l990 757A                      l982 74C2                      l974 7456  
                    l978 74A6                      u330 6CB0                      u405 76A0  
                    u406 76A6                      u415 7760                      u407 76B4  
                    u416 7766                      u344 7296                      u425 7810  
                    u417 7774                      u345 7290                      u426 7816  
                    u427 7824                      u515 7004                      u516 700A  
                    u517 7018                      u607 6CB8                      u384 74D8  
                    u385 74D2                      u545 71C0                      u546 71C6  
                    u395 75F0                      u547 71D4                      u396 75F6  
                    u397 7604                      u597 6E66                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     l1102 6FE8                     l1112 7172  
                   l1104 7028                     l1034 7972                     l1106 7086  
                   l1116 71E4                     l1124 7224                     l1038 7992  
                   l1118 71F2                     l1062 6DDC                     l1072 6E0A  
                   l1084 6E74                     _LATC 000F8B                     _main 6DB0  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000          __end_of_BusyADC 6CB4  
        __end_of_ReadADC 6CA8              _Delay10TCYx 6CB4          __end_of_OpenADC 6D5A  
                  ?_main 0001                    _TRISC 000F94      ___lmul@multiplicand 0005  
        __end_of_fix_fft 79FE                    main@i 00E8                    main@k 00EA  
             _ConvertADC 6C9A                    tablat 000FF5                    status 000FD8  
         __CFG_PBADEN$ON 000000          __initialization 6CC4             __end_of_main 7272  
                 ??_main 004D            __activetblptr 000002             fix_fft@istep 0023  
       __end_of_Sinewave 7FFF                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
         __CFG_WDTEN$OFF 000000                ??_BusyADC 0001                ??_ReadADC 0003  
              ??_OpenADC 0003                   ___lmul 6D5A                   ___wmul 6CE6  
                 clear_0 6CCA                   clear_1 6CD6                ??_fix_fft 0013  
           __mediumconst 79FE                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8              ?_ConvertADC 0001               __accesstop 0060  
__end_of__initialization 6CDC           __pcstackCOMRAM 0001               __pbssBANK0 0060  
             __pbssBANK1 0100          __CFG_PLLCFG$OFF 000000                  ?___lmul 0001  
           ?_Delay10TCYx 0001                  ?___wmul 0001           ___lmul@product 0009  
    __size_of_ConvertADC 0004        __CFG_PRICLKEN$OFF 000000                  _BusyADC 6CA8  
                _ReadADC 6C9E                  _OpenADC 6D0C                  __Hparam 0000  
                __Lparam 0000          __size_of___lmul 0056          __size_of___wmul 0026  
                __pcinit 6CC4          Delay10TCYx@unit 0001                  __ramtop 0600  
                __ptext0 6DB0                  __ptext1 7272                  __ptext2 6D5A  
                __ptext3 6CE6                  __ptext4 6C9E                  __ptext5 6D0C  
                __ptext6 6CB4                  __ptext7 6C9A                  __ptext8 6CA8  
                _fix_fft 7272           OpenADC@config2 0001           OpenADC@config3 0002  
   end_of_initialization 6CDC            __Lmediumconst 79FE                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE             ??_ConvertADC 0001           __end_of___lmul 6DB0  
         __end_of___wmul 6D0C     __size_of_Delay10TCYx 0010       __end_of_ConvertADC 6C9E  
    start_initialization 6CC4         _imaginaryNumbers 0100                 ??___lmul 0009  
               ??___wmul 0005            __pcstackBANK0 00E0                 ?_BusyADC 0001  
               ?_ReadADC 0001                 ?_OpenADC 0001            __pmediumconst 79FE  
               ?_fix_fft 000D           ___wmul@product 0005            OpenADC@config 0005  
               _PIE1bits 000F9D                 _PIR1bits 000F9E               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001                main@place 00E4                fix_fft@fi 000F  
              fix_fft@fr 000D                fix_fft@nn 001F                fix_fft@qi 0029  
              fix_fft@mr 003D                fix_fft@ti 0035                fix_fft@qr 0027  
              fix_fft@wi 002D                fix_fft@tr 0033                fix_fft@wr 002B  
      ___lmul@multiplier 0001         __size_of_BusyADC 000C         __size_of_ReadADC 000A  
               __Hrparam 0000         __size_of_OpenADC 004E                 __Lrparam 0000  
               _Sinewave 79FF         __size_of_fix_fft 078C              _realNumbers 0060  
          __size_of_main 04C2            ??_Delay10TCYx 0001                 main@root 00E0  
               fix_fft@b 0037                 fix_fft@c 0049                 fix_fft@i 0039  
               fix_fft@j 0045                 fix_fft@k 001B                 fix_fft@l 0041  
               fix_fft@m 0011                 fix_fft@n 002F              _OSCTUNEbits 000F9B  
             _INTCONbits 000FF2               _OSCCONbits 000FD3      __end_of_Delay10TCYx 6CC4  
      __CFG_FOSC$INTIO67 000000  



Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Nov 25 18:46:08 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	mediumconst
    33  0079F0                     __pmediumconst:
    34                           	opt stack 0
    35  0079F0  00                 	db	0
    36  0079F1                     _Sinewave:
    37                           	opt stack 0
    38  0079F1  0000               	dw	0
    39  0079F3  00C9               	dw	201
    40  0079F5  0192               	dw	402
    41  0079F7  025B               	dw	603
    42  0079F9  0324               	dw	804
    43  0079FB  03ED               	dw	1005
    44  0079FD  04B6               	dw	1206
    45  0079FF  057E               	dw	1406
    46  007A01  0647               	dw	1607
    47  007A03  0710               	dw	1808
    48  007A05  07D9               	dw	2009
    49  007A07  08A1               	dw	2209
    50  007A09  096A               	dw	2410
    51  007A0B  0A32               	dw	2610
    52  007A0D  0AFB               	dw	2811
    53  007A0F  0BC3               	dw	3011
    54  007A11  0C8B               	dw	3211
    55  007A13  0D53               	dw	3411
    56  007A15  0E1B               	dw	3611
    57  007A17  0EE3               	dw	3811
    58  007A19  0FAB               	dw	4011
    59  007A1B  1072               	dw	4210
    60  007A1D  1139               	dw	4409
    61  007A1F  1200               	dw	4608
    62  007A21  12C7               	dw	4807
    63  007A23  138E               	dw	5006
    64  007A25  1455               	dw	5205
    65  007A27  151B               	dw	5403
    66  007A29  15E1               	dw	5601
    67  007A2B  16A7               	dw	5799
    68  007A2D  176D               	dw	5997
    69  007A2F  1833               	dw	6195
    70  007A31  18F8               	dw	6392
    71  007A33  19BD               	dw	6589
    72  007A35  1A82               	dw	6786
    73  007A37  1B46               	dw	6982
    74  007A39  1C0B               	dw	7179
    75  007A3B  1CCF               	dw	7375
    76  007A3D  1D93               	dw	7571
    77  007A3F  1E56               	dw	7766
    78  007A41  1F19               	dw	7961
    79  007A43  1FDC               	dw	8156
    80  007A45  209F               	dw	8351
    81  007A47  2161               	dw	8545
    82  007A49  2223               	dw	8739
    83  007A4B  22E4               	dw	8932
    84  007A4D  23A6               	dw	9126
    85  007A4F  2467               	dw	9319
    86  007A51  2527               	dw	9511
    87  007A53  25E7               	dw	9703
    88  007A55  26A7               	dw	9895
    89  007A57  2767               	dw	10087
    90  007A59  2826               	dw	10278
    91  007A5B  28E5               	dw	10469
    92  007A5D  29A3               	dw	10659
    93  007A5F  2A61               	dw	10849
    94  007A61  2B1E               	dw	11038
    95  007A63  2BDB               	dw	11227
    96  007A65  2C98               	dw	11416
    97  007A67  2D54               	dw	11604
    98  007A69  2E10               	dw	11792
    99  007A6B  2ECC               	dw	11980
   100  007A6D  2F86               	dw	12166
   101  007A6F  3041               	dw	12353
   102  007A71  30FB               	dw	12539
   103  007A73  31B4               	dw	12724
   104  007A75  326D               	dw	12909
   105  007A77  3326               	dw	13094
   106  007A79  33DE               	dw	13278
   107  007A7B  3496               	dw	13462
   108  007A7D  354D               	dw	13645
   109  007A7F  3603               	dw	13827
   110  007A81  36B9               	dw	14009
   111  007A83  376F               	dw	14191
   112  007A85  3824               	dw	14372
   113  007A87  38D8               	dw	14552
   114  007A89  398C               	dw	14732
   115  007A8B  3A3F               	dw	14911
   116  007A8D  3AF2               	dw	15090
   117  007A8F  3BA4               	dw	15268
   118  007A91  3C56               	dw	15446
   119  007A93  3D07               	dw	15623
   120  007A95  3DB7               	dw	15799
   121  007A97  3E67               	dw	15975
   122  007A99  3F16               	dw	16150
   123  007A9B  3FC5               	dw	16325
   124  007A9D  4073               	dw	16499
   125  007A9F  4120               	dw	16672
   126  007AA1  41CD               	dw	16845
   127  007AA3  4279               	dw	17017
   128  007AA5  4325               	dw	17189
   129  007AA7  43D0               	dw	17360
   130  007AA9  447A               	dw	17530
   131  007AAB  4523               	dw	17699
   132  007AAD  45CC               	dw	17868
   133  007AAF  4674               	dw	18036
   134  007AB1  471C               	dw	18204
   135  007AB3  47C3               	dw	18371
   136  007AB5  4869               	dw	18537
   137  007AB7  490E               	dw	18702
   138  007AB9  49B3               	dw	18867
   139  007ABB  4A57               	dw	19031
   140  007ABD  4AFA               	dw	19194
   141  007ABF  4B9D               	dw	19357
   142  007AC1  4C3F               	dw	19519
   143  007AC3  4CE0               	dw	19680
   144  007AC5  4D80               	dw	19840
   145  007AC7  4E20               	dw	20000
   146  007AC9  4EBF               	dw	20159
   147  007ACB  4F5D               	dw	20317
   148  007ACD  4FFA               	dw	20474
   149  007ACF  5097               	dw	20631
   150  007AD1  5133               	dw	20787
   151  007AD3  51CE               	dw	20942
   152  007AD5  5268               	dw	21096
   153  007AD7  5301               	dw	21249
   154  007AD9  539A               	dw	21402
   155  007ADB  5432               	dw	21554
   156  007ADD  54C9               	dw	21705
   157  007ADF  555F               	dw	21855
   158  007AE1  55F4               	dw	22004
   159  007AE3  5689               	dw	22153
   160  007AE5  571D               	dw	22301
   161  007AE7  57B0               	dw	22448
   162  007AE9  5842               	dw	22594
   163  007AEB  58D3               	dw	22739
   164  007AED  5963               	dw	22883
   165  007AEF  59F3               	dw	23027
   166  007AF1  5A81               	dw	23169
   167  007AF3  5B0F               	dw	23311
   168  007AF5  5B9C               	dw	23452
   169  007AF7  5C28               	dw	23592
   170  007AF9  5CB3               	dw	23731
   171  007AFB  5D3D               	dw	23869
   172  007AFD  5DC6               	dw	24006
   173  007AFF  5E4F               	dw	24143
   174  007B01  5ED6               	dw	24278
   175  007B03  5F5D               	dw	24413
   176  007B05  5FE2               	dw	24546
   177  007B07  6067               	dw	24679
   178  007B09  60EB               	dw	24811
   179  007B0B  616E               	dw	24942
   180  007B0D  61F0               	dw	25072
   181  007B0F  6271               	dw	25201
   182  007B11  62F1               	dw	25329
   183  007B13  6370               	dw	25456
   184  007B15  63EE               	dw	25582
   185  007B17  646B               	dw	25707
   186  007B19  64E7               	dw	25831
   187  007B1B  6562               	dw	25954
   188  007B1D  65DD               	dw	26077
   189  007B1F  6656               	dw	26198
   190  007B21  66CE               	dw	26318
   191  007B23  6745               	dw	26437
   192  007B25  67BC               	dw	26556
   193  007B27  6831               	dw	26673
   194  007B29  68A5               	dw	26789
   195  007B2B  6919               	dw	26905
   196  007B2D  698B               	dw	27019
   197  007B2F  69FC               	dw	27132
   198  007B31  6A6C               	dw	27244
   199  007B33  6ADB               	dw	27355
   200  007B35  6B4A               	dw	27466
   201  007B37  6BB7               	dw	27575
   202  007B39  6C23               	dw	27683
   203  007B3B  6C8E               	dw	27790
   204  007B3D  6CF8               	dw	27896
   205  007B3F  6D61               	dw	28001
   206  007B41  6DC9               	dw	28105
   207  007B43  6E30               	dw	28208
   208  007B45  6E95               	dw	28309
   209  007B47  6EFA               	dw	28410
   210  007B49  6F5E               	dw	28510
   211  007B4B  6FC0               	dw	28608
   212  007B4D  7022               	dw	28706
   213  007B4F  7082               	dw	28802
   214  007B51  70E1               	dw	28897
   215  007B53  7140               	dw	28992
   216  007B55  719D               	dw	29085
   217  007B57  71F9               	dw	29177
   218  007B59  7254               	dw	29268
   219  007B5B  72AE               	dw	29358
   220  007B5D  7306               	dw	29446
   221  007B5F  735E               	dw	29534
   222  007B61  73B5               	dw	29621
   223  007B63  740A               	dw	29706
   224  007B65  745E               	dw	29790
   225  007B67  74B1               	dw	29873
   226  007B69  7503               	dw	29955
   227  007B6B  7554               	dw	30036
   228  007B6D  75A4               	dw	30116
   229  007B6F  75F3               	dw	30195
   230  007B71  7640               	dw	30272
   231  007B73  768D               	dw	30349
   232  007B75  76D8               	dw	30424
   233  007B77  7722               	dw	30498
   234  007B79  776B               	dw	30571
   235  007B7B  77B3               	dw	30643
   236  007B7D  77F9               	dw	30713
   237  007B7F  783F               	dw	30783
   238  007B81  7883               	dw	30851
   239  007B83  78C6               	dw	30918
   240  007B85  7908               	dw	30984
   241  007B87  7949               	dw	31049
   242  007B89  7989               	dw	31113
   243  007B8B  79C7               	dw	31175
   244  007B8D  7A04               	dw	31236
   245  007B8F  7A41               	dw	31297
   246  007B91  7A7C               	dw	31356
   247  007B93  7AB5               	dw	31413
   248  007B95  7AEE               	dw	31470
   249  007B97  7B25               	dw	31525
   250  007B99  7B5C               	dw	31580
   251  007B9B  7B91               	dw	31633
   252  007B9D  7BC4               	dw	31684
   253  007B9F  7BF7               	dw	31735
   254  007BA1  7C29               	dw	31785
   255  007BA3  7C59               	dw	31833
   256  007BA5  7C88               	dw	31880
   257  007BA7  7CB6               	dw	31926
   258  007BA9  7CE2               	dw	31970
   259  007BAB  7D0E               	dw	32014
   260  007BAD  7D38               	dw	32056
   261  007BAF  7D61               	dw	32097
   262  007BB1  7D89               	dw	32137
   263  007BB3  7DB0               	dw	32176
   264  007BB5  7DD5               	dw	32213
   265  007BB7  7DF9               	dw	32249
   266  007BB9  7E1C               	dw	32284
   267  007BBB  7E3E               	dw	32318
   268  007BBD  7E5E               	dw	32350
   269  007BBF  7E7E               	dw	32382
   270  007BC1  7E9C               	dw	32412
   271  007BC3  7EB9               	dw	32441
   272  007BC5  7ED4               	dw	32468
   273  007BC7  7EEF               	dw	32495
   274  007BC9  7F08               	dw	32520
   275  007BCB  7F20               	dw	32544
   276  007BCD  7F37               	dw	32567
   277  007BCF  7F4C               	dw	32588
   278  007BD1  7F61               	dw	32609
   279  007BD3  7F74               	dw	32628
   280  007BD5  7F86               	dw	32646
   281  007BD7  7F96               	dw	32662
   282  007BD9  7FA6               	dw	32678
   283  007BDB  7FB4               	dw	32692
   284  007BDD  7FC1               	dw	32705
   285  007BDF  7FCD               	dw	32717
   286  007BE1  7FD7               	dw	32727
   287  007BE3  7FE0               	dw	32736
   288  007BE5  7FE8               	dw	32744
   289  007BE7  7FEF               	dw	32751
   290  007BE9  7FF5               	dw	32757
   291  007BEB  7FF9               	dw	32761
   292  007BED  7FFC               	dw	32764
   293  007BEF  7FFE               	dw	32766
   294  007BF1  7FFF               	dw	32767
   295  007BF3  7FFE               	dw	32766
   296  007BF5  7FFC               	dw	32764
   297  007BF7  7FF9               	dw	32761
   298  007BF9  7FF5               	dw	32757
   299  007BFB  7FEF               	dw	32751
   300  007BFD  7FE8               	dw	32744
   301  007BFF  7FE0               	dw	32736
   302  007C01  7FD7               	dw	32727
   303  007C03  7FCD               	dw	32717
   304  007C05  7FC1               	dw	32705
   305  007C07  7FB4               	dw	32692
   306  007C09  7FA6               	dw	32678
   307  007C0B  7F96               	dw	32662
   308  007C0D  7F86               	dw	32646
   309  007C0F  7F74               	dw	32628
   310  007C11  7F61               	dw	32609
   311  007C13  7F4C               	dw	32588
   312  007C15  7F37               	dw	32567
   313  007C17  7F20               	dw	32544
   314  007C19  7F08               	dw	32520
   315  007C1B  7EEF               	dw	32495
   316  007C1D  7ED4               	dw	32468
   317  007C1F  7EB9               	dw	32441
   318  007C21  7E9C               	dw	32412
   319  007C23  7E7E               	dw	32382
   320  007C25  7E5E               	dw	32350
   321  007C27  7E3E               	dw	32318
   322  007C29  7E1C               	dw	32284
   323  007C2B  7DF9               	dw	32249
   324  007C2D  7DD5               	dw	32213
   325  007C2F  7DB0               	dw	32176
   326  007C31  7D89               	dw	32137
   327  007C33  7D61               	dw	32097
   328  007C35  7D38               	dw	32056
   329  007C37  7D0E               	dw	32014
   330  007C39  7CE2               	dw	31970
   331  007C3B  7CB6               	dw	31926
   332  007C3D  7C88               	dw	31880
   333  007C3F  7C59               	dw	31833
   334  007C41  7C29               	dw	31785
   335  007C43  7BF7               	dw	31735
   336  007C45  7BC4               	dw	31684
   337  007C47  7B91               	dw	31633
   338  007C49  7B5C               	dw	31580
   339  007C4B  7B25               	dw	31525
   340  007C4D  7AEE               	dw	31470
   341  007C4F  7AB5               	dw	31413
   342  007C51  7A7C               	dw	31356
   343  007C53  7A41               	dw	31297
   344  007C55  7A04               	dw	31236
   345  007C57  79C7               	dw	31175
   346  007C59  7989               	dw	31113
   347  007C5B  7949               	dw	31049
   348  007C5D  7908               	dw	30984
   349  007C5F  78C6               	dw	30918
   350  007C61  7883               	dw	30851
   351  007C63  783F               	dw	30783
   352  007C65  77F9               	dw	30713
   353  007C67  77B3               	dw	30643
   354  007C69  776B               	dw	30571
   355  007C6B  7722               	dw	30498
   356  007C6D  76D8               	dw	30424
   357  007C6F  768D               	dw	30349
   358  007C71  7640               	dw	30272
   359  007C73  75F3               	dw	30195
   360  007C75  75A4               	dw	30116
   361  007C77  7554               	dw	30036
   362  007C79  7503               	dw	29955
   363  007C7B  74B1               	dw	29873
   364  007C7D  745E               	dw	29790
   365  007C7F  740A               	dw	29706
   366  007C81  73B5               	dw	29621
   367  007C83  735E               	dw	29534
   368  007C85  7306               	dw	29446
   369  007C87  72AE               	dw	29358
   370  007C89  7254               	dw	29268
   371  007C8B  71F9               	dw	29177
   372  007C8D  719D               	dw	29085
   373  007C8F  7140               	dw	28992
   374  007C91  70E1               	dw	28897
   375  007C93  7082               	dw	28802
   376  007C95  7022               	dw	28706
   377  007C97  6FC0               	dw	28608
   378  007C99  6F5E               	dw	28510
   379  007C9B  6EFA               	dw	28410
   380  007C9D  6E95               	dw	28309
   381  007C9F  6E30               	dw	28208
   382  007CA1  6DC9               	dw	28105
   383  007CA3  6D61               	dw	28001
   384  007CA5  6CF8               	dw	27896
   385  007CA7  6C8E               	dw	27790
   386  007CA9  6C23               	dw	27683
   387  007CAB  6BB7               	dw	27575
   388  007CAD  6B4A               	dw	27466
   389  007CAF  6ADB               	dw	27355
   390  007CB1  6A6C               	dw	27244
   391  007CB3  69FC               	dw	27132
   392  007CB5  698B               	dw	27019
   393  007CB7  6919               	dw	26905
   394  007CB9  68A5               	dw	26789
   395  007CBB  6831               	dw	26673
   396  007CBD  67BC               	dw	26556
   397  007CBF  6745               	dw	26437
   398  007CC1  66CE               	dw	26318
   399  007CC3  6656               	dw	26198
   400  007CC5  65DD               	dw	26077
   401  007CC7  6562               	dw	25954
   402  007CC9  64E7               	dw	25831
   403  007CCB  646B               	dw	25707
   404  007CCD  63EE               	dw	25582
   405  007CCF  6370               	dw	25456
   406  007CD1  62F1               	dw	25329
   407  007CD3  6271               	dw	25201
   408  007CD5  61F0               	dw	25072
   409  007CD7  616E               	dw	24942
   410  007CD9  60EB               	dw	24811
   411  007CDB  6067               	dw	24679
   412  007CDD  5FE2               	dw	24546
   413  007CDF  5F5D               	dw	24413
   414  007CE1  5ED6               	dw	24278
   415  007CE3  5E4F               	dw	24143
   416  007CE5  5DC6               	dw	24006
   417  007CE7  5D3D               	dw	23869
   418  007CE9  5CB3               	dw	23731
   419  007CEB  5C28               	dw	23592
   420  007CED  5B9C               	dw	23452
   421  007CEF  5B0F               	dw	23311
   422  007CF1  5A81               	dw	23169
   423  007CF3  59F3               	dw	23027
   424  007CF5  5963               	dw	22883
   425  007CF7  58D3               	dw	22739
   426  007CF9  5842               	dw	22594
   427  007CFB  57B0               	dw	22448
   428  007CFD  571D               	dw	22301
   429  007CFF  5689               	dw	22153
   430  007D01  55F4               	dw	22004
   431  007D03  555F               	dw	21855
   432  007D05  54C9               	dw	21705
   433  007D07  5432               	dw	21554
   434  007D09  539A               	dw	21402
   435  007D0B  5301               	dw	21249
   436  007D0D  5268               	dw	21096
   437  007D0F  51CE               	dw	20942
   438  007D11  5133               	dw	20787
   439  007D13  5097               	dw	20631
   440  007D15  4FFA               	dw	20474
   441  007D17  4F5D               	dw	20317
   442  007D19  4EBF               	dw	20159
   443  007D1B  4E20               	dw	20000
   444  007D1D  4D80               	dw	19840
   445  007D1F  4CE0               	dw	19680
   446  007D21  4C3F               	dw	19519
   447  007D23  4B9D               	dw	19357
   448  007D25  4AFA               	dw	19194
   449  007D27  4A57               	dw	19031
   450  007D29  49B3               	dw	18867
   451  007D2B  490E               	dw	18702
   452  007D2D  4869               	dw	18537
   453  007D2F  47C3               	dw	18371
   454  007D31  471C               	dw	18204
   455  007D33  4674               	dw	18036
   456  007D35  45CC               	dw	17868
   457  007D37  4523               	dw	17699
   458  007D39  447A               	dw	17530
   459  007D3B  43D0               	dw	17360
   460  007D3D  4325               	dw	17189
   461  007D3F  4279               	dw	17017
   462  007D41  41CD               	dw	16845
   463  007D43  4120               	dw	16672
   464  007D45  4073               	dw	16499
   465  007D47  3FC5               	dw	16325
   466  007D49  3F16               	dw	16150
   467  007D4B  3E67               	dw	15975
   468  007D4D  3DB7               	dw	15799
   469  007D4F  3D07               	dw	15623
   470  007D51  3C56               	dw	15446
   471  007D53  3BA4               	dw	15268
   472  007D55  3AF2               	dw	15090
   473  007D57  3A3F               	dw	14911
   474  007D59  398C               	dw	14732
   475  007D5B  38D8               	dw	14552
   476  007D5D  3824               	dw	14372
   477  007D5F  376F               	dw	14191
   478  007D61  36B9               	dw	14009
   479  007D63  3603               	dw	13827
   480  007D65  354D               	dw	13645
   481  007D67  3496               	dw	13462
   482  007D69  33DE               	dw	13278
   483  007D6B  3326               	dw	13094
   484  007D6D  326D               	dw	12909
   485  007D6F  31B4               	dw	12724
   486  007D71  30FB               	dw	12539
   487  007D73  3041               	dw	12353
   488  007D75  2F86               	dw	12166
   489  007D77  2ECC               	dw	11980
   490  007D79  2E10               	dw	11792
   491  007D7B  2D54               	dw	11604
   492  007D7D  2C98               	dw	11416
   493  007D7F  2BDB               	dw	11227
   494  007D81  2B1E               	dw	11038
   495  007D83  2A61               	dw	10849
   496  007D85  29A3               	dw	10659
   497  007D87  28E5               	dw	10469
   498  007D89  2826               	dw	10278
   499  007D8B  2767               	dw	10087
   500  007D8D  26A7               	dw	9895
   501  007D8F  25E7               	dw	9703
   502  007D91  2527               	dw	9511
   503  007D93  2467               	dw	9319
   504  007D95  23A6               	dw	9126
   505  007D97  22E4               	dw	8932
   506  007D99  2223               	dw	8739
   507  007D9B  2161               	dw	8545
   508  007D9D  209F               	dw	8351
   509  007D9F  1FDC               	dw	8156
   510  007DA1  1F19               	dw	7961
   511  007DA3  1E56               	dw	7766
   512  007DA5  1D93               	dw	7571
   513  007DA7  1CCF               	dw	7375
   514  007DA9  1C0B               	dw	7179
   515  007DAB  1B46               	dw	6982
   516  007DAD  1A82               	dw	6786
   517  007DAF  19BD               	dw	6589
   518  007DB1  18F8               	dw	6392
   519  007DB3  1833               	dw	6195
   520  007DB5  176D               	dw	5997
   521  007DB7  16A7               	dw	5799
   522  007DB9  15E1               	dw	5601
   523  007DBB  151B               	dw	5403
   524  007DBD  1455               	dw	5205
   525  007DBF  138E               	dw	5006
   526  007DC1  12C7               	dw	4807
   527  007DC3  1200               	dw	4608
   528  007DC5  1139               	dw	4409
   529  007DC7  1072               	dw	4210
   530  007DC9  0FAB               	dw	4011
   531  007DCB  0EE3               	dw	3811
   532  007DCD  0E1B               	dw	3611
   533  007DCF  0D53               	dw	3411
   534  007DD1  0C8B               	dw	3211
   535  007DD3  0BC3               	dw	3011
   536  007DD5  0AFB               	dw	2811
   537  007DD7  0A32               	dw	2610
   538  007DD9  096A               	dw	2410
   539  007DDB  08A1               	dw	2209
   540  007DDD  07D9               	dw	2009
   541  007DDF  0710               	dw	1808
   542  007DE1  0647               	dw	1607
   543  007DE3  057E               	dw	1406
   544  007DE5  04B6               	dw	1206
   545  007DE7  03ED               	dw	1005
   546  007DE9  0324               	dw	804
   547  007DEB  025B               	dw	603
   548  007DED  0192               	dw	402
   549  007DEF  00C9               	dw	201
   550  007DF1  0000               	dw	0
   551  007DF3  FF37               	dw	65335
   552  007DF5  FE6E               	dw	65134
   553  007DF7  FDA5               	dw	64933
   554  007DF9  FCDC               	dw	64732
   555  007DFB  FC13               	dw	64531
   556  007DFD  FB4A               	dw	64330
   557  007DFF  FA82               	dw	64130
   558  007E01  F9B9               	dw	63929
   559  007E03  F8F0               	dw	63728
   560  007E05  F827               	dw	63527
   561  007E07  F75F               	dw	63327
   562  007E09  F696               	dw	63126
   563  007E0B  F5CE               	dw	62926
   564  007E0D  F505               	dw	62725
   565  007E0F  F43D               	dw	62525
   566  007E11  F375               	dw	62325
   567  007E13  F2AD               	dw	62125
   568  007E15  F1E5               	dw	61925
   569  007E17  F11D               	dw	61725
   570  007E19  F055               	dw	61525
   571  007E1B  EF8E               	dw	61326
   572  007E1D  EEC7               	dw	61127
   573  007E1F  EE00               	dw	60928
   574  007E21  ED39               	dw	60729
   575  007E23  EC72               	dw	60530
   576  007E25  EBAB               	dw	60331
   577  007E27  EAE5               	dw	60133
   578  007E29  EA1F               	dw	59935
   579  007E2B  E959               	dw	59737
   580  007E2D  E893               	dw	59539
   581  007E2F  E7CD               	dw	59341
   582  007E31  E708               	dw	59144
   583  007E33  E643               	dw	58947
   584  007E35  E57E               	dw	58750
   585  007E37  E4BA               	dw	58554
   586  007E39  E3F5               	dw	58357
   587  007E3B  E331               	dw	58161
   588  007E3D  E26D               	dw	57965
   589  007E3F  E1AA               	dw	57770
   590  007E41  E0E7               	dw	57575
   591  007E43  E024               	dw	57380
   592  007E45  DF61               	dw	57185
   593  007E47  DE9F               	dw	56991
   594  007E49  DDDD               	dw	56797
   595  007E4B  DD1C               	dw	56604
   596  007E4D  DC5A               	dw	56410
   597  007E4F  DB99               	dw	56217
   598  007E51  DAD9               	dw	56025
   599  007E53  DA19               	dw	55833
   600  007E55  D959               	dw	55641
   601  007E57  D899               	dw	55449
   602  007E59  D7DA               	dw	55258
   603  007E5B  D71B               	dw	55067
   604  007E5D  D65D               	dw	54877
   605  007E5F  D59F               	dw	54687
   606  007E61  D4E2               	dw	54498
   607  007E63  D425               	dw	54309
   608  007E65  D368               	dw	54120
   609  007E67  D2AC               	dw	53932
   610  007E69  D1F0               	dw	53744
   611  007E6B  D134               	dw	53556
   612  007E6D  D07A               	dw	53370
   613  007E6F  CFBF               	dw	53183
   614  007E71  CF05               	dw	52997
   615  007E73  CE4C               	dw	52812
   616  007E75  CD93               	dw	52627
   617  007E77  CCDA               	dw	52442
   618  007E79  CC22               	dw	52258
   619  007E7B  CB6A               	dw	52074
   620  007E7D  CAB3               	dw	51891
   621  007E7F  C9FD               	dw	51709
   622  007E81  C947               	dw	51527
   623  007E83  C891               	dw	51345
   624  007E85  C7DC               	dw	51164
   625  007E87  C728               	dw	50984
   626  007E89  C674               	dw	50804
   627  007E8B  C5C1               	dw	50625
   628  007E8D  C50E               	dw	50446
   629  007E8F  C45C               	dw	50268
   630  007E91  C3AA               	dw	50090
   631  007E93  C2F9               	dw	49913
   632  007E95  C249               	dw	49737
   633  007E97  C199               	dw	49561
   634  007E99  C0EA               	dw	49386
   635  007E9B  C03B               	dw	49211
   636  007E9D  BF8D               	dw	49037
   637  007E9F  BEE0               	dw	48864
   638  007EA1  BE33               	dw	48691
   639  007EA3  BD87               	dw	48519
   640  007EA5  BCDB               	dw	48347
   641  007EA7  BC30               	dw	48176
   642  007EA9  BB86               	dw	48006
   643  007EAB  BADD               	dw	47837
   644  007EAD  BA34               	dw	47668
   645  007EAF  B98C               	dw	47500
   646  007EB1  B8E4               	dw	47332
   647  007EB3  B83D               	dw	47165
   648  007EB5  B797               	dw	46999
   649  007EB7  B6F2               	dw	46834
   650  007EB9  B64D               	dw	46669
   651  007EBB  B5A9               	dw	46505
   652  007EBD  B506               	dw	46342
   653  007EBF  B463               	dw	46179
   654  007EC1  B3C1               	dw	46017
   655  007EC3  B320               	dw	45856
   656  007EC5  B280               	dw	45696
   657  007EC7  B1E0               	dw	45536
   658  007EC9  B141               	dw	45377
   659  007ECB  B0A3               	dw	45219
   660  007ECD  B006               	dw	45062
   661  007ECF  AF69               	dw	44905
   662  007ED1  AECD               	dw	44749
   663  007ED3  AE32               	dw	44594
   664  007ED5  AD98               	dw	44440
   665  007ED7  ACFF               	dw	44287
   666  007ED9  AC66               	dw	44134
   667  007EDB  ABCE               	dw	43982
   668  007EDD  AB37               	dw	43831
   669  007EDF  AAA1               	dw	43681
   670  007EE1  AA0C               	dw	43532
   671  007EE3  A977               	dw	43383
   672  007EE5  A8E3               	dw	43235
   673  007EE7  A850               	dw	43088
   674  007EE9  A7BE               	dw	42942
   675  007EEB  A72D               	dw	42797
   676  007EED  A69D               	dw	42653
   677  007EEF  A60D               	dw	42509
   678  007EF1  A57F               	dw	42367
   679  007EF3  A4F1               	dw	42225
   680  007EF5  A464               	dw	42084
   681  007EF7  A3D8               	dw	41944
   682  007EF9  A34D               	dw	41805
   683  007EFB  A2C3               	dw	41667
   684  007EFD  A23A               	dw	41530
   685  007EFF  A1B1               	dw	41393
   686  007F01  A12A               	dw	41258
   687  007F03  A0A3               	dw	41123
   688  007F05  A01E               	dw	40990
   689  007F07  9F99               	dw	40857
   690  007F09  9F15               	dw	40725
   691  007F0B  9E92               	dw	40594
   692  007F0D  9E10               	dw	40464
   693  007F0F  9D8F               	dw	40335
   694  007F11  9D0F               	dw	40207
   695  007F13  9C90               	dw	40080
   696  007F15  9C12               	dw	39954
   697  007F17  9B95               	dw	39829
   698  007F19  9B19               	dw	39705
   699  007F1B  9A9E               	dw	39582
   700  007F1D  9A23               	dw	39459
   701  007F1F  99AA               	dw	39338
   702  007F21  9932               	dw	39218
   703  007F23  98BB               	dw	39099
   704  007F25  9844               	dw	38980
   705  007F27  97CF               	dw	38863
   706  007F29  975B               	dw	38747
   707  007F2B  96E7               	dw	38631
   708  007F2D  9675               	dw	38517
   709  007F2F  9604               	dw	38404
   710  007F31  9594               	dw	38292
   711  007F33  9525               	dw	38181
   712  007F35  94B6               	dw	38070
   713  007F37  9449               	dw	37961
   714  007F39  93DD               	dw	37853
   715  007F3B  9372               	dw	37746
   716  007F3D  9308               	dw	37640
   717  007F3F  929F               	dw	37535
   718  007F41  9237               	dw	37431
   719  007F43  91D0               	dw	37328
   720  007F45  916B               	dw	37227
   721  007F47  9106               	dw	37126
   722  007F49  90A2               	dw	37026
   723  007F4B  9040               	dw	36928
   724  007F4D  8FDE               	dw	36830
   725  007F4F  8F7E               	dw	36734
   726  007F51  8F1F               	dw	36639
   727  007F53  8EC0               	dw	36544
   728  007F55  8E63               	dw	36451
   729  007F57  8E07               	dw	36359
   730  007F59  8DAC               	dw	36268
   731  007F5B  8D52               	dw	36178
   732  007F5D  8CFA               	dw	36090
   733  007F5F  8CA2               	dw	36002
   734  007F61  8C4B               	dw	35915
   735  007F63  8BF6               	dw	35830
   736  007F65  8BA2               	dw	35746
   737  007F67  8B4F               	dw	35663
   738  007F69  8AFD               	dw	35581
   739  007F6B  8AAC               	dw	35500
   740  007F6D  8A5C               	dw	35420
   741  007F6F  8A0D               	dw	35341
   742  007F71  89C0               	dw	35264
   743  007F73  8973               	dw	35187
   744  007F75  8928               	dw	35112
   745  007F77  88DE               	dw	35038
   746  007F79  8895               	dw	34965
   747  007F7B  884D               	dw	34893
   748  007F7D  8807               	dw	34823
   749  007F7F  87C1               	dw	34753
   750  007F81  877D               	dw	34685
   751  007F83  873A               	dw	34618
   752  007F85  86F8               	dw	34552
   753  007F87  86B7               	dw	34487
   754  007F89  8677               	dw	34423
   755  007F8B  8639               	dw	34361
   756  007F8D  85FC               	dw	34300
   757  007F8F  85BF               	dw	34239
   758  007F91  8584               	dw	34180
   759  007F93  854B               	dw	34123
   760  007F95  8512               	dw	34066
   761  007F97  84DB               	dw	34011
   762  007F99  84A4               	dw	33956
   763  007F9B  846F               	dw	33903
   764  007F9D  843C               	dw	33852
   765  007F9F  8409               	dw	33801
   766  007FA1  83D7               	dw	33751
   767  007FA3  83A7               	dw	33703
   768  007FA5  8378               	dw	33656
   769  007FA7  834A               	dw	33610
   770  007FA9  831E               	dw	33566
   771  007FAB  82F2               	dw	33522
   772  007FAD  82C8               	dw	33480
   773  007FAF  829F               	dw	33439
   774  007FB1  8277               	dw	33399
   775  007FB3  8250               	dw	33360
   776  007FB5  822B               	dw	33323
   777  007FB7  8207               	dw	33287
   778  007FB9  81E4               	dw	33252
   779  007FBB  81C2               	dw	33218
   780  007FBD  81A2               	dw	33186
   781  007FBF  8182               	dw	33154
   782  007FC1  8164               	dw	33124
   783  007FC3  8147               	dw	33095
   784  007FC5  812C               	dw	33068
   785  007FC7  8111               	dw	33041
   786  007FC9  80F8               	dw	33016
   787  007FCB  80E0               	dw	32992
   788  007FCD  80C9               	dw	32969
   789  007FCF  80B4               	dw	32948
   790  007FD1  809F               	dw	32927
   791  007FD3  808C               	dw	32908
   792  007FD5  807A               	dw	32890
   793  007FD7  806A               	dw	32874
   794  007FD9  805A               	dw	32858
   795  007FDB  804C               	dw	32844
   796  007FDD  803F               	dw	32831
   797  007FDF  8033               	dw	32819
   798  007FE1  8029               	dw	32809
   799  007FE3  8020               	dw	32800
   800  007FE5  8018               	dw	32792
   801  007FE7  8011               	dw	32785
   802  007FE9  800B               	dw	32779
   803  007FEB  8007               	dw	32775
   804  007FED  8004               	dw	32772
   805  007FEF  8002               	dw	32770
   806  007FF1                     __end_of_Sinewave:
   807                           	opt stack 0
   808  007FF1                     _dpowers:
   809                           	opt stack 0
   810  007FF1  0001               	dw	1
   811  007FF3  000A               	dw	10
   812  007FF5  0064               	dw	100
   813  007FF7  03E8               	dw	1000
   814  007FF9  2710               	dw	10000
   815  007FFB                     __end_of_dpowers:
   816                           	opt stack 0
   817  0000                     _ADCON0	set	4034
   818  0000                     _ADCON0bits	set	4034
   819  0000                     _ADCON1	set	4033
   820  0000                     _ADCON2	set	4032
   821  0000                     _ADRESH	set	4036
   822  0000                     _ADRESL	set	4035
   823  0000                     _ANSELC	set	3898
   824  0000                     _INTCONbits	set	4082
   825  0000                     _LATC	set	3979
   826  0000                     _OSCCONbits	set	4051
   827  0000                     _OSCTUNEbits	set	3995
   828  0000                     _PIE1	set	3997
   829  0000                     _PIE1bits	set	3997
   830  0000                     _PIR1bits	set	3998
   831  0000                     _RCSTA1	set	4011
   832  0000                     _RCSTA1bits	set	4011
   833  0000                     _SPBRG1	set	4015
   834  0000                     _SPBRGH1	set	4016
   835  0000                     _TRISC	set	3988
   836  0000                     _TRISCbits	set	3988
   837  0000                     _TXREG1	set	4013
   838  0000                     _TXSTA1	set	4012
   839  0000                     _TXSTA1bits	set	4012
   840  007FFB                     __stringdata:
   841                           	opt stack 0
   842  007FFB                     STR_1:
   843  007FFB  25                 	db	37
   844  007FFC  64                 	db	100	;'d'
   845  007FFD  00                 	db	0
   846  007FFE                     __end_of__stringdata:
   847                           	opt stack 0
   848                           
   849                           ; #config settings
   850  007FFE  00                 	db	0	; dummy byte at the end
   851  0000                     
   852                           	psect	cinit
   853  0069CE                     __pcinit:
   854                           	opt stack 0
   855  0069CE                     start_initialization:
   856                           	opt stack 0
   857  0069CE                     __initialization:
   858                           	opt stack 0
   859                           
   860                           ; Clear objects allocated to BANK1 (128 bytes)
   861  0069CE  EE01  F000         	lfsr	0,__pbssBANK1
   862  0069D2  0E80               	movlw	128
   863  0069D4                     clear_0:
   864  0069D4  6AEE               	clrf	postinc0,c
   865  0069D6  06E8               	decf	wreg,f,c
   866  0069D8  E1FD               	bnz	clear_0
   867                           
   868                           ; Clear objects allocated to BANK0 (133 bytes)
   869  0069DA  EE00  F060         	lfsr	0,__pbssBANK0
   870  0069DE  0E85               	movlw	133
   871  0069E0                     clear_1:
   872  0069E0  6AEE               	clrf	postinc0,c
   873  0069E2  06E8               	decf	wreg,f,c
   874  0069E4  E1FD               	bnz	clear_1
   875                           
   876                           ; Clear objects allocated to COMRAM (4 bytes)
   877  0069E6  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   878  0069E8  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   879  0069EA  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   880  0069EC  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   881  0069EE                     end_of_initialization:
   882                           	opt stack 0
   883  0069EE                     __end_of__initialization:
   884                           	opt stack 0
   885  0069EE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   886  0069F0  6EF8               	movwf	tblptru,c
   887  0069F2  0100               	movlb	0
   888  0069F4  EFA2  F036         	goto	_main	;jump to C main() function
   889                           tblptru	equ	0xFF8
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           
   893                           	psect	bssCOMRAM
   894  00005A                     __pbssCOMRAM:
   895                           	opt stack 0
   896  00005A                     _i:
   897                           	opt stack 0
   898  00005A                     	ds	2
   899  00005C                     _USART1_Status:
   900                           	opt stack 0
   901  00005C                     	ds	1
   902  00005D                     _input:
   903                           	opt stack 0
   904  00005D                     	ds	1
   905                           tblptru	equ	0xFF8
   906                           postinc0	equ	0xFEE
   907                           wreg	equ	0xFE8
   908                           
   909                           	psect	bssBANK0
   910  000060                     __pbssBANK0:
   911                           	opt stack 0
   912  000060                     _realNumbers:
   913                           	opt stack 0
   914  000060                     	ds	128
   915  0000E0                     _data:
   916                           	opt stack 0
   917  0000E0                     	ds	5
   918                           tblptru	equ	0xFF8
   919                           postinc0	equ	0xFEE
   920                           wreg	equ	0xFE8
   921                           
   922                           	psect	bssBANK1
   923  000100                     __pbssBANK1:
   924                           	opt stack 0
   925  000100                     _imaginaryNumbers:
   926                           	opt stack 0
   927  000100                     	ds	128
   928                           tblptru	equ	0xFF8
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           
   932                           	psect	cstackBANK0
   933  0000E5                     __pcstackBANK0:
   934                           	opt stack 0
   935  0000E5                     main@baud_rate:
   936                           	opt stack 0
   937                           
   938                           ; 4 bytes @ 0x0
   939  0000E5                     	ds	4
   940  0000E9                     main@adc_value:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x4
   944  0000E9                     	ds	2
   945  0000EB                     main@root:
   946                           	opt stack 0
   947                           
   948                           ; 4 bytes @ 0x6
   949  0000EB                     	ds	4
   950  0000EF                     main@place:
   951                           	opt stack 0
   952                           
   953                           ; 4 bytes @ 0xA
   954  0000EF                     	ds	4
   955  0000F3                     main@i:
   956                           	opt stack 0
   957                           
   958                           ; 2 bytes @ 0xE
   959  0000F3                     	ds	2
   960  0000F5                     main@k:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0x10
   964  0000F5                     	ds	2
   965                           tblptru	equ	0xFF8
   966                           postinc0	equ	0xFEE
   967                           wreg	equ	0xFE8
   968                           
   969                           	psect	cstackCOMRAM
   970  000001                     __pcstackCOMRAM:
   971                           	opt stack 0
   972  000001                     ?_ReadADC:
   973                           	opt stack 0
   974  000001                     ?___wmul:
   975                           	opt stack 0
   976  000001                     ?___lwdiv:
   977                           	opt stack 0
   978  000001                     ?___lmul:
   979                           	opt stack 0
   980  000001                     OpenADC@config2:
   981                           	opt stack 0
   982  000001                     Write1USART@data:
   983                           	opt stack 0
   984  000001                     Delay10TCYx@unit:
   985                           	opt stack 0
   986  000001                     Open1USART@spbrg:
   987                           	opt stack 0
   988  000001                     ___wmul@multiplier:
   989                           	opt stack 0
   990  000001                     ___lwdiv@dividend:
   991                           	opt stack 0
   992  000001                     ___lmul@multiplier:
   993                           	opt stack 0
   994                           
   995                           ; 4 bytes @ 0x0
   996  000001                     	ds	1
   997  000002                     OpenADC@config3:
   998                           	opt stack 0
   999  000002                     putrs1USART@data:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x1
  1003  000002                     	ds	1
  1004  000003                     ??_OpenADC:
  1005  000003                     ??_Open1USART:
  1006  000003                     ___wmul@multiplicand:
  1007                           	opt stack 0
  1008  000003                     ___lwdiv@divisor:
  1009                           	opt stack 0
  1010                           
  1011                           ; 2 bytes @ 0x2
  1012  000003                     	ds	1
  1013  000004                     sendString@string:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0x3
  1017  000004                     	ds	1
  1018  000005                     OpenADC@config:
  1019                           	opt stack 0
  1020  000005                     ___wmul@product:
  1021                           	opt stack 0
  1022  000005                     ___lwdiv@quotient:
  1023                           	opt stack 0
  1024  000005                     ___lmul@multiplicand:
  1025                           	opt stack 0
  1026                           
  1027                           ; 4 bytes @ 0x4
  1028  000005                     	ds	1
  1029  000006                     Open1USART@config:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x5
  1033  000006                     	ds	1
  1034  000007                     ___lwdiv@counter:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0x6
  1038  000007                     	ds	1
  1039  000008                     ?___lwmod:
  1040                           	opt stack 0
  1041  000008                     ___lwmod@dividend:
  1042                           	opt stack 0
  1043                           
  1044                           ; 2 bytes @ 0x7
  1045  000008                     	ds	1
  1046  000009                     ___lmul@product:
  1047                           	opt stack 0
  1048                           
  1049                           ; 4 bytes @ 0x8
  1050  000009                     	ds	1
  1051  00000A                     ___lwmod@divisor:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0x9
  1055  00000A                     	ds	2
  1056  00000C                     ___lwmod@counter:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0xB
  1060  00000C                     	ds	1
  1061  00000D                     ?_sprintf:
  1062                           	opt stack 0
  1063  00000D                     fix_fft@fr:
  1064                           	opt stack 0
  1065  00000D                     sprintf@sp:
  1066                           	opt stack 0
  1067                           
  1068                           ; 2 bytes @ 0xC
  1069  00000D                     	ds	2
  1070  00000F                     fix_fft@fi:
  1071                           	opt stack 0
  1072  00000F                     sprintf@f:
  1073                           	opt stack 0
  1074                           
  1075                           ; 2 bytes @ 0xE
  1076  00000F                     	ds	2
  1077  000011                     fix_fft@m:
  1078                           	opt stack 0
  1079                           
  1080                           ; 2 bytes @ 0x10
  1081  000011                     	ds	2
  1082  000013                     ??_fix_fft:
  1083  000013                     ??_sprintf:
  1084                           
  1085                           ; 0 bytes @ 0x12
  1086  000013                     	ds	2
  1087  000015                     sprintf@ap:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0x14
  1091  000015                     	ds	2
  1092  000017                     sprintf@flag:
  1093                           	opt stack 0
  1094                           
  1095                           ; 1 bytes @ 0x16
  1096  000017                     	ds	1
  1097  000018                     sprintf@prec:
  1098                           	opt stack 0
  1099                           
  1100                           ; 1 bytes @ 0x17
  1101  000018                     	ds	1
  1102  000019                     sprintf@_val:
  1103                           	opt stack 0
  1104                           
  1105                           ; 5 bytes @ 0x18
  1106  000019                     	ds	2
  1107  00001B                     fix_fft@k:
  1108                           	opt stack 0
  1109                           
  1110                           ; 4 bytes @ 0x1A
  1111  00001B                     	ds	3
  1112  00001E                     sprintf@c:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x1D
  1116  00001E                     	ds	1
  1117  00001F                     sendIntArray@array:
  1118                           	opt stack 0
  1119  00001F                     fix_fft@nn:
  1120                           	opt stack 0
  1121                           
  1122                           ; 4 bytes @ 0x1E
  1123  00001F                     	ds	2
  1124  000021                     sendIntArray@size:
  1125                           	opt stack 0
  1126                           
  1127                           ; 2 bytes @ 0x20
  1128  000021                     	ds	2
  1129  000023                     fix_fft@istep:
  1130                           	opt stack 0
  1131                           
  1132                           ; 4 bytes @ 0x22
  1133  000023                     	ds	4
  1134  000027                     fix_fft@qr:
  1135                           	opt stack 0
  1136                           
  1137                           ; 2 bytes @ 0x26
  1138  000027                     	ds	2
  1139  000029                     fix_fft@qi:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x28
  1143  000029                     	ds	2
  1144  00002B                     fix_fft@wr:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0x2A
  1148  00002B                     	ds	2
  1149  00002D                     fix_fft@wi:
  1150                           	opt stack 0
  1151                           
  1152                           ; 2 bytes @ 0x2C
  1153  00002D                     	ds	2
  1154  00002F                     fix_fft@n:
  1155                           	opt stack 0
  1156                           
  1157                           ; 4 bytes @ 0x2E
  1158  00002F                     	ds	4
  1159  000033                     fix_fft@tr:
  1160                           	opt stack 0
  1161                           
  1162                           ; 2 bytes @ 0x32
  1163  000033                     	ds	2
  1164  000035                     fix_fft@ti:
  1165                           	opt stack 0
  1166                           
  1167                           ; 2 bytes @ 0x34
  1168  000035                     	ds	2
  1169  000037                     fix_fft@b:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0x36
  1173  000037                     	ds	2
  1174  000039                     fix_fft@i:
  1175                           	opt stack 0
  1176                           
  1177                           ; 4 bytes @ 0x38
  1178  000039                     	ds	4
  1179  00003D                     fix_fft@mr:
  1180                           	opt stack 0
  1181                           
  1182                           ; 4 bytes @ 0x3C
  1183  00003D                     	ds	4
  1184  000041                     fix_fft@l:
  1185                           	opt stack 0
  1186                           
  1187                           ; 4 bytes @ 0x40
  1188  000041                     	ds	4
  1189  000045                     fix_fft@j:
  1190                           	opt stack 0
  1191                           
  1192                           ; 4 bytes @ 0x44
  1193  000045                     	ds	4
  1194  000049                     fix_fft@c:
  1195                           	opt stack 0
  1196                           
  1197                           ; 4 bytes @ 0x48
  1198  000049                     	ds	4
  1199  00004D                     ??_main:
  1200                           
  1201                           ; 0 bytes @ 0x4C
  1202  00004D                     	ds	13
  1203                           tblptru	equ	0xFF8
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           
  1207 ;;
  1208 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
  1209 ;;
  1210 ;; *************** function _main *****************
  1211 ;; Defined at:
  1212 ;;		line 35 in file "ADC main 25k22.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  k               2   16[BANK0 ] int 
  1217 ;;  place           4   10[BANK0 ] long 
  1218 ;;  root            4    6[BANK0 ] long 
  1219 ;;  i               2   14[BANK0 ] short 
  1220 ;;  baud_rate       4    0[BANK0 ] long 
  1221 ;;  adc_value       2    4[BANK0 ] unsigned int 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;		None               void
  1224 ;; Registers used:
  1225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1231 ;;      Params:         0       0       0       0       0       0       0
  1232 ;;      Locals:         0      18       0       0       0       0       0
  1233 ;;      Temps:         13       0       0       0       0       0       0
  1234 ;;      Totals:        13      18       0       0       0       0       0
  1235 ;;Total ram usage:       31 bytes
  1236 ;; Hardware stack levels required when called:    4
  1237 ;; This function calls:
  1238 ;;		_BusyADC
  1239 ;;		_ConvertADC
  1240 ;;		_Delay10TCYx
  1241 ;;		_Open1USART
  1242 ;;		_OpenADC
  1243 ;;		_ReadADC
  1244 ;;		___wmul
  1245 ;;		_fix_fft
  1246 ;;		_sendIntArray
  1247 ;; This function is called by:
  1248 ;;		Startup code after reset
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text0
  1253  006D44                     __ptext0:
  1254                           	opt stack 0
  1255  006D44                     _main:
  1256                           	opt stack 27
  1257                           
  1258                           ;ADC main 25k22.c: 36: unsigned int adc_value;
  1259                           ;ADC main 25k22.c: 37: TRISC = 0x00;
  1260                           
  1261                           ;incstack = 0
  1262  006D44  0E00               	movlw	0
  1263  006D46  6E94               	movwf	3988,c	;volatile
  1264                           
  1265                           ;ADC main 25k22.c: 38: LATC = 0x00;
  1266  006D48  0E00               	movlw	0
  1267  006D4A  6E8B               	movwf	3979,c	;volatile
  1268                           
  1269                           ;ADC main 25k22.c: 41: ANSELC = 0x00;
  1270  006D4C  0E00               	movlw	0
  1271  006D4E  010F               	movlb	15	; () banked
  1272  006D50  6F3A               	movwf	58,b	;volatile
  1273                           
  1274                           ; BSR set to: 15
  1275                           ;ADC main 25k22.c: 42: TRISCbits.TRISC6 = 1;
  1276  006D52  8C94               	bsf	3988,6,c	;volatile
  1277                           
  1278                           ; BSR set to: 15
  1279                           ;ADC main 25k22.c: 43: TRISCbits.TRISC7 = 1;
  1280  006D54  8E94               	bsf	3988,7,c	;volatile
  1281                           
  1282                           ; BSR set to: 15
  1283                           ;ADC main 25k22.c: 44: OSCCONbits.IRCF = 0b111;
  1284  006D56  88D3               	bsf	4051,4,c	;volatile
  1285  006D58  8AD3               	bsf	4051,5,c	;volatile
  1286  006D5A  8CD3               	bsf	4051,6,c	;volatile
  1287                           
  1288                           ;ADC main 25k22.c: 45: OSCCONbits.SCS = 0b11;
  1289  006D5C  0E03               	movlw	3
  1290  006D5E  12D3               	iorwf	4051,f,c	;volatile
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;ADC main 25k22.c: 46: OSCTUNEbits.TUN = 0b01111;
  1294  006D60  809B               	bsf	3995,0,c	;volatile
  1295  006D62  829B               	bsf	3995,1,c	;volatile
  1296  006D64  849B               	bsf	3995,2,c	;volatile
  1297  006D66  869B               	bsf	3995,3,c	;volatile
  1298  006D68  989B               	bcf	3995,4,c	;volatile
  1299  006D6A  9A9B               	bcf	3995,5,c	;volatile
  1300                           
  1301                           ; BSR set to: 15
  1302                           ;ADC main 25k22.c: 47: OpenADC(0b11111111 &
  1303                           ;ADC main 25k22.c: 48: 0b11111111 &
  1304                           ;ADC main 25k22.c: 49: 0b11110001,
  1305                           ;ADC main 25k22.c: 50: 0b10000011 &
  1306                           ;ADC main 25k22.c: 51: 0b01111111 &
  1307                           ;ADC main 25k22.c: 52: 0b11110111 &
  1308                           ;ADC main 25k22.c: 53: 0b11111100,
  1309                           ;ADC main 25k22.c: 54: 0b1110);
  1310  006D6C  0E00               	movlw	0
  1311  006D6E  6E01               	movwf	OpenADC@config2,c
  1312  006D70  0E0E               	movlw	14
  1313  006D72  6E02               	movwf	OpenADC@config3,c
  1314  006D74  0EF1               	movlw	241
  1315  006D76  EC1D  F035         	call	_OpenADC
  1316                           
  1317                           ;ADC main 25k22.c: 56: long baud_rate = (4000000 / 9600 / 16) - 1;
  1318  006D7A  0E19               	movlw	25
  1319  006D7C  0100               	movlb	0	; () banked
  1320  006D7E  6FE5               	movwf	main@baud_rate& (0+255),b
  1321  006D80  0E00               	movlw	0
  1322  006D82  0100               	movlb	0	; () banked
  1323  006D84  6FE6               	movwf	(main@baud_rate+1)& (0+255),b
  1324  006D86  0E00               	movlw	0
  1325  006D88  0100               	movlb	0	; () banked
  1326  006D8A  6FE7               	movwf	(main@baud_rate+2)& (0+255),b
  1327  006D8C  0E00               	movlw	0
  1328  006D8E  0100               	movlb	0	; () banked
  1329  006D90  6FE8               	movwf	(main@baud_rate+3)& (0+255),b
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;ADC main 25k22.c: 57: RCSTA1&=0b01001111,TXSTA1bits.TXEN=0,PIE1&=0b11001111;
  1333  006D92  0E4F               	movlw	79
  1334  006D94  16AB               	andwf	4011,f,c	;volatile
  1335                           
  1336                           ; BSR set to: 0
  1337  006D96  9AAC               	bcf	4012,5,c	;volatile
  1338                           
  1339                           ; BSR set to: 0
  1340  006D98  0ECF               	movlw	207
  1341  006D9A  169D               	andwf	3997,f,c	;volatile
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;ADC main 25k22.c: 58: Open1USART( 0b01111111 &
  1345                           ;ADC main 25k22.c: 59: 0b10111111 &
  1346                           ;ADC main 25k22.c: 60: 0b11111110 &
  1347                           ;ADC main 25k22.c: 61: 0b11111101 &
  1348                           ;ADC main 25k22.c: 62: 0b11111111 &
  1349                           ;ADC main 25k22.c: 63: 0b11101111,
  1350                           ;ADC main 25k22.c: 64: baud_rate );
  1351  006D9C  C0E5  F001         	movff	main@baud_rate,Open1USART@spbrg
  1352  006DA0  C0E6  F002         	movff	main@baud_rate+1,Open1USART@spbrg+1
  1353  006DA4  0E2C               	movlw	44
  1354  006DA6  EC98  F035         	call	_Open1USART
  1355  006DAA                     l1567:
  1356                           
  1357                           ;ADC main 25k22.c: 67: short i = 0;
  1358  006DAA  0E00               	movlw	0
  1359  006DAC  0100               	movlb	0	; () banked
  1360  006DAE  6FF4               	movwf	(main@i+1)& (0+255),b
  1361  006DB0  0E00               	movlw	0
  1362  006DB2  0100               	movlb	0	; () banked
  1363  006DB4  6FF3               	movwf	main@i& (0+255),b
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;ADC main 25k22.c: 68: for (i = 0; i < 64; i++) {
  1367  006DB6  0E00               	movlw	0
  1368  006DB8  0100               	movlb	0	; () banked
  1369  006DBA  6FF4               	movwf	(main@i+1)& (0+255),b
  1370  006DBC  0E00               	movlw	0
  1371  006DBE  0100               	movlb	0	; () banked
  1372  006DC0  6FF3               	movwf	main@i& (0+255),b
  1373  006DC2                     
  1374                           ; BSR set to: 0
  1375  006DC2  0100               	movlb	0	; () banked
  1376  006DC4  51F4               	movf	(main@i+1)& (0+255),w,b
  1377  006DC6  0A80               	xorlw	128
  1378  006DC8  0F80               	addlw	-128
  1379  006DCA  0E40               	movlw	64
  1380  006DCC  B4D8               	btfsc	status,2,c
  1381  006DCE  5DF3               	subwf	main@i& (0+255),w,b
  1382  006DD0  B0D8               	btfsc	status,0,c
  1383  006DD2  D03D               	goto	l1591
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;ADC main 25k22.c: 70: ConvertADC();
  1387                           
  1388                           ; BSR set to: 0
  1389                           
  1390                           ; BSR set to: 0
  1391  006DD4  EC9A  F034         	call	_ConvertADC	;wreg free
  1392  006DD8                     l1577:
  1393  006DD8  ECA1  F034         	call	_BusyADC	;wreg free
  1394  006DDC  0900               	iorlw	0
  1395  006DDE  A4D8               	btfss	status,2,c
  1396  006DE0  D7FB               	goto	l1577
  1397                           
  1398                           ;ADC main 25k22.c: 79: adc_value = ReadADC();
  1399  006DE2  EC9C  F034         	call	_ReadADC	;wreg free
  1400  006DE6  C001  F0E9         	movff	?_ReadADC,main@adc_value
  1401  006DEA  C002  F0EA         	movff	?_ReadADC+1,main@adc_value+1
  1402                           
  1403                           ;ADC main 25k22.c: 80: realNumbers[i] = adc_value;
  1404  006DEE  0E60               	movlw	low _realNumbers
  1405  006DF0  6E4D               	movwf	??_main& (0+255),c
  1406  006DF2  0E00               	movlw	high _realNumbers
  1407  006DF4  6E4E               	movwf	(??_main+1)& (0+255),c
  1408  006DF6  90D8               	bcf	status,0,c
  1409  006DF8  0100               	movlb	0	; () banked
  1410  006DFA  35F3               	rlcf	main@i& (0+255),w,b
  1411  006DFC  6ED9               	movwf	fsr2l,c
  1412  006DFE  0100               	movlb	0	; () banked
  1413  006E00  35F4               	rlcf	(main@i+1)& (0+255),w,b
  1414  006E02  6EDA               	movwf	fsr2h,c
  1415  006E04  504D               	movf	??_main,w,c
  1416  006E06  26D9               	addwf	fsr2l,f,c
  1417  006E08  504E               	movf	??_main+1,w,c
  1418  006E0A  22DA               	addwfc	fsr2h,f,c
  1419  006E0C  0100               	movlb	0	; () banked
  1420  006E0E  C0E9  FFDE         	movff	main@adc_value,postinc2
  1421  006E12  0100               	movlb	0	; () banked
  1422  006E14  C0EA  FFDD         	movff	main@adc_value+1,postdec2
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;ADC main 25k22.c: 83: imaginaryNumbers[i] = 0;
  1426  006E18  0E00               	movlw	low _imaginaryNumbers
  1427  006E1A  6E4D               	movwf	??_main& (0+255),c
  1428  006E1C  0E01               	movlw	high _imaginaryNumbers
  1429  006E1E  6E4E               	movwf	(??_main+1)& (0+255),c
  1430  006E20  90D8               	bcf	status,0,c
  1431  006E22  0100               	movlb	0	; () banked
  1432  006E24  35F3               	rlcf	main@i& (0+255),w,b
  1433  006E26  6ED9               	movwf	fsr2l,c
  1434  006E28  0100               	movlb	0	; () banked
  1435  006E2A  35F4               	rlcf	(main@i+1)& (0+255),w,b
  1436  006E2C  6EDA               	movwf	fsr2h,c
  1437  006E2E  504D               	movf	??_main,w,c
  1438  006E30  26D9               	addwf	fsr2l,f,c
  1439  006E32  504E               	movf	??_main+1,w,c
  1440  006E34  22DA               	addwfc	fsr2h,f,c
  1441  006E36  0E00               	movlw	0
  1442  006E38  6EDE               	movwf	postinc2,c
  1443  006E3A  0E00               	movlw	0
  1444  006E3C  6EDD               	movwf	postdec2,c
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;ADC main 25k22.c: 85: _delay((unsigned long)((7)*(4000000/4000000.0)));
  1448  006E3E  0E02               	movlw	2
  1449  006E40                     u1197:
  1450  006E40  2EE8               	decfsz	wreg,f,c
  1451  006E42  D7FE               	goto	u1197
  1452  006E44  F000               	nop	
  1453  006E46  0100               	movlb	0	; () banked
  1454  006E48  4BF3               	infsnz	main@i& (0+255),f,b
  1455  006E4A  2BF4               	incf	(main@i+1)& (0+255),f,b
  1456  006E4C  D7BA               	goto	L1
  1457  006E4E                     l1591:
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;ADC main 25k22.c: 86: }
  1461                           ;ADC main 25k22.c: 88: fix_fft(realNumbers, imaginaryNumbers, 6);
  1462  006E4E  0100               	movlb	0	; () banked
  1463  006E50  0E00               	movlw	high _realNumbers
  1464  006E52  6E0E               	movwf	fix_fft@fr+1,c
  1465  006E54  0100               	movlb	0	; () banked
  1466  006E56  0E60               	movlw	low _realNumbers
  1467  006E58  6E0D               	movwf	fix_fft@fr,c
  1468  006E5A  0101               	movlb	1	; () banked
  1469  006E5C  0E01               	movlw	high _imaginaryNumbers
  1470  006E5E  6E10               	movwf	fix_fft@fi+1,c
  1471  006E60  0101               	movlb	1	; () banked
  1472  006E62  0E00               	movlw	low _imaginaryNumbers
  1473  006E64  6E0F               	movwf	fix_fft@fi,c
  1474  006E66  0E00               	movlw	0
  1475  006E68  6E12               	movwf	fix_fft@m+1,c
  1476  006E6A  0E06               	movlw	6
  1477  006E6C  6E11               	movwf	fix_fft@m,c
  1478  006E6E  EC32  F039         	call	_fix_fft	;wreg free
  1479                           
  1480                           ;ADC main 25k22.c: 91: long place, root;
  1481                           ;ADC main 25k22.c: 92: for (int k=0; k < 32; k++) {
  1482  006E72  0E00               	movlw	0
  1483  006E74  0100               	movlb	0	; () banked
  1484  006E76  6FF6               	movwf	(main@k+1)& (0+255),b
  1485  006E78  0E00               	movlw	0
  1486  006E7A  0100               	movlb	0	; () banked
  1487  006E7C  6FF5               	movwf	main@k& (0+255),b
  1488  006E7E                     
  1489                           ; BSR set to: 0
  1490  006E7E  0100               	movlb	0	; () banked
  1491  006E80  51F6               	movf	(main@k+1)& (0+255),w,b
  1492  006E82  0A80               	xorlw	128
  1493  006E84  0F80               	addlw	-128
  1494  006E86  0E20               	movlw	32
  1495  006E88  B4D8               	btfsc	status,2,c
  1496  006E8A  5DF5               	subwf	main@k& (0+255),w,b
  1497  006E8C  B0D8               	btfsc	status,0,c
  1498  006E8E  D1B7               	goto	l1631
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;ADC main 25k22.c: 93: realNumbers[k] = (realNumbers[k] * realNumbers[k] +
  1502                           ;ADC main 25k22.c: 94: imaginaryNumbers[k] * imaginaryNumbers[k]);
  1503                           
  1504                           ; BSR set to: 0
  1505                           
  1506                           ; BSR set to: 0
  1507  006E90  0E60               	movlw	low _realNumbers
  1508  006E92  6E4D               	movwf	??_main& (0+255),c
  1509  006E94  0E00               	movlw	high _realNumbers
  1510  006E96  6E4E               	movwf	(??_main+1)& (0+255),c
  1511  006E98  90D8               	bcf	status,0,c
  1512  006E9A  0100               	movlb	0	; () banked
  1513  006E9C  35F5               	rlcf	main@k& (0+255),w,b
  1514  006E9E  6ED9               	movwf	fsr2l,c
  1515  006EA0  0100               	movlb	0	; () banked
  1516  006EA2  35F6               	rlcf	(main@k+1)& (0+255),w,b
  1517  006EA4  6EDA               	movwf	fsr2h,c
  1518  006EA6  504D               	movf	??_main,w,c
  1519  006EA8  26D9               	addwf	fsr2l,f,c
  1520  006EAA  504E               	movf	??_main+1,w,c
  1521  006EAC  22DA               	addwfc	fsr2h,f,c
  1522  006EAE  CFDE F001          	movff	postinc2,___wmul@multiplier
  1523  006EB2  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1524  006EB6  0E60               	movlw	low _realNumbers
  1525  006EB8  6E4F               	movwf	(??_main+2)& (0+255),c
  1526  006EBA  0E00               	movlw	high _realNumbers
  1527  006EBC  6E50               	movwf	(??_main+3)& (0+255),c
  1528  006EBE  90D8               	bcf	status,0,c
  1529  006EC0  0100               	movlb	0	; () banked
  1530  006EC2  35F5               	rlcf	main@k& (0+255),w,b
  1531  006EC4  6ED9               	movwf	fsr2l,c
  1532  006EC6  0100               	movlb	0	; () banked
  1533  006EC8  35F6               	rlcf	(main@k+1)& (0+255),w,b
  1534  006ECA  6EDA               	movwf	fsr2h,c
  1535  006ECC  504F               	movf	??_main+2,w,c
  1536  006ECE  26D9               	addwf	fsr2l,f,c
  1537  006ED0  5050               	movf	??_main+3,w,c
  1538  006ED2  22DA               	addwfc	fsr2h,f,c
  1539  006ED4  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1540  006ED8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1541  006EDC  ECC1  F034         	call	___wmul	;wreg free
  1542  006EE0  C001  F051         	movff	?___wmul,??_main+4
  1543  006EE4  C002  F052         	movff	?___wmul+1,??_main+5
  1544  006EE8  0E00               	movlw	low _imaginaryNumbers
  1545  006EEA  6E53               	movwf	(??_main+6)& (0+255),c
  1546  006EEC  0E01               	movlw	high _imaginaryNumbers
  1547  006EEE  6E54               	movwf	(??_main+7)& (0+255),c
  1548  006EF0  90D8               	bcf	status,0,c
  1549  006EF2  0100               	movlb	0	; () banked
  1550  006EF4  35F5               	rlcf	main@k& (0+255),w,b
  1551  006EF6  6ED9               	movwf	fsr2l,c
  1552  006EF8  0100               	movlb	0	; () banked
  1553  006EFA  35F6               	rlcf	(main@k+1)& (0+255),w,b
  1554  006EFC  6EDA               	movwf	fsr2h,c
  1555  006EFE  5053               	movf	??_main+6,w,c
  1556  006F00  26D9               	addwf	fsr2l,f,c
  1557  006F02  5054               	movf	??_main+7,w,c
  1558  006F04  22DA               	addwfc	fsr2h,f,c
  1559  006F06  CFDE F001          	movff	postinc2,___wmul@multiplier
  1560  006F0A  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1561  006F0E  0E00               	movlw	low _imaginaryNumbers
  1562  006F10  6E55               	movwf	(??_main+8)& (0+255),c
  1563  006F12  0E01               	movlw	high _imaginaryNumbers
  1564  006F14  6E56               	movwf	(??_main+9)& (0+255),c
  1565  006F16  90D8               	bcf	status,0,c
  1566  006F18  0100               	movlb	0	; () banked
  1567  006F1A  35F5               	rlcf	main@k& (0+255),w,b
  1568  006F1C  6ED9               	movwf	fsr2l,c
  1569  006F1E  0100               	movlb	0	; () banked
  1570  006F20  35F6               	rlcf	(main@k+1)& (0+255),w,b
  1571  006F22  6EDA               	movwf	fsr2h,c
  1572  006F24  5055               	movf	??_main+8,w,c
  1573  006F26  26D9               	addwf	fsr2l,f,c
  1574  006F28  5056               	movf	??_main+9,w,c
  1575  006F2A  22DA               	addwfc	fsr2h,f,c
  1576  006F2C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1577  006F30  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1578  006F34  ECC1  F034         	call	___wmul	;wreg free
  1579  006F38  5001               	movf	?___wmul,w,c
  1580  006F3A  2651               	addwf	??_main+4,f,c
  1581  006F3C  5002               	movf	?___wmul+1,w,c
  1582  006F3E  2252               	addwfc	??_main+5,f,c
  1583  006F40  0E60               	movlw	low _realNumbers
  1584  006F42  6E57               	movwf	(??_main+10)& (0+255),c
  1585  006F44  0E00               	movlw	high _realNumbers
  1586  006F46  6E58               	movwf	(??_main+11)& (0+255),c
  1587  006F48  90D8               	bcf	status,0,c
  1588  006F4A  0100               	movlb	0	; () banked
  1589  006F4C  35F5               	rlcf	main@k& (0+255),w,b
  1590  006F4E  6ED9               	movwf	fsr2l,c
  1591  006F50  0100               	movlb	0	; () banked
  1592  006F52  35F6               	rlcf	(main@k+1)& (0+255),w,b
  1593  006F54  6EDA               	movwf	fsr2h,c
  1594  006F56  5057               	movf	??_main+10,w,c
  1595  006F58  26D9               	addwf	fsr2l,f,c
  1596  006F5A  5058               	movf	??_main+11,w,c
  1597  006F5C  22DA               	addwfc	fsr2h,f,c
  1598  006F5E  C051  FFDE         	movff	??_main+4,postinc2
  1599  006F62  C052  FFDD         	movff	??_main+5,postdec2
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;ADC main 25k22.c: 96: place = 0x40000000;
  1603  006F66  0E00               	movlw	0
  1604  006F68  0100               	movlb	0	; () banked
  1605  006F6A  6FEF               	movwf	main@place& (0+255),b
  1606  006F6C  0E00               	movlw	0
  1607  006F6E  0100               	movlb	0	; () banked
  1608  006F70  6FF0               	movwf	(main@place+1)& (0+255),b
  1609  006F72  0E00               	movlw	0
  1610  006F74  0100               	movlb	0	; () banked
  1611  006F76  6FF1               	movwf	(main@place+2)& (0+255),b
  1612  006F78  0E40               	movlw	64
  1613  006F7A  0100               	movlb	0	; () banked
  1614  006F7C  6FF2               	movwf	(main@place+3)& (0+255),b
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;ADC main 25k22.c: 97: root = 0;
  1618  006F7E  0E00               	movlw	0
  1619  006F80  0100               	movlb	0	; () banked
  1620  006F82  6FEB               	movwf	main@root& (0+255),b
  1621  006F84  0E00               	movlw	0
  1622  006F86  0100               	movlb	0	; () banked
  1623  006F88  6FEC               	movwf	(main@root+1)& (0+255),b
  1624  006F8A  0E00               	movlw	0
  1625  006F8C  0100               	movlb	0	; () banked
  1626  006F8E  6FED               	movwf	(main@root+2)& (0+255),b
  1627  006F90  0E00               	movlw	0
  1628  006F92  0100               	movlb	0	; () banked
  1629  006F94  6FEE               	movwf	(main@root+3)& (0+255),b
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;ADC main 25k22.c: 99: if (realNumbers[k] >= 0) {
  1633  006F96  0E60               	movlw	low _realNumbers
  1634  006F98  6E4D               	movwf	??_main& (0+255),c
  1635  006F9A  0E00               	movlw	high _realNumbers
  1636  006F9C  6E4E               	movwf	(??_main+1)& (0+255),c
  1637  006F9E  90D8               	bcf	status,0,c
  1638  006FA0  0100               	movlb	0	; () banked
  1639  006FA2  35F5               	rlcf	main@k& (0+255),w,b
  1640  006FA4  6ED9               	movwf	fsr2l,c
  1641  006FA6  0100               	movlb	0	; () banked
  1642  006FA8  35F6               	rlcf	(main@k+1)& (0+255),w,b
  1643  006FAA  6EDA               	movwf	fsr2h,c
  1644  006FAC  504D               	movf	??_main,w,c
  1645  006FAE  26D9               	addwf	fsr2l,f,c
  1646  006FB0  504E               	movf	??_main+1,w,c
  1647  006FB2  22DA               	addwfc	fsr2h,f,c
  1648  006FB4  CFDE F04F          	movff	postinc2,??_main+2
  1649  006FB8  CFDD F050          	movff	postdec2,??_main+3
  1650  006FBC  AE50               	btfss	??_main+3,7,c
  1651  006FBE  D021               	goto	l1611
  1652  006FC0  D105               	goto	l1625
  1653  006FC2                     l1609:
  1654                           
  1655                           ; BSR set to: 0
  1656  006FC2  0E02               	movlw	2
  1657  006FC4  6E4D               	movwf	??_main& (0+255),c
  1658  006FC6  0100               	movlb	0	; () banked
  1659  006FC8  C0EF  F04E         	movff	main@place,??_main+1
  1660  006FCC  0100               	movlb	0	; () banked
  1661  006FCE  C0F0  F04F         	movff	main@place+1,??_main+2
  1662  006FD2  0100               	movlb	0	; () banked
  1663  006FD4  C0F1  F050         	movff	main@place+2,??_main+3
  1664  006FD8  0100               	movlb	0	; () banked
  1665  006FDA  C0F2  F051         	movff	main@place+3,??_main+4
  1666  006FDE                     u1095:
  1667  006FDE  664D               	tstfsz	??_main,c
  1668  006FE0  D001               	goto	u1096
  1669  006FE2  D007               	goto	u1097
  1670  006FE4                     u1096:
  1671  006FE4  3451               	rlcf	??_main+4,w,c
  1672  006FE6  3251               	rrcf	??_main+4,f,c
  1673  006FE8  3250               	rrcf	??_main+3,f,c
  1674  006FEA  324F               	rrcf	??_main+2,f,c
  1675  006FEC  324E               	rrcf	??_main+1,f,c
  1676  006FEE  2E4D               	decfsz	??_main,f,c
  1677  006FF0  D7F6               	goto	u1095
  1678  006FF2                     u1097:
  1679  006FF2  C04E  F0EF         	movff	??_main+1,main@place
  1680  006FF6  C04F  F0F0         	movff	??_main+2,main@place+1
  1681  006FFA  C050  F0F1         	movff	??_main+3,main@place+2
  1682  006FFE  C051  F0F2         	movff	??_main+4,main@place+3
  1683  007002                     l1611:
  1684                           
  1685                           ; BSR set to: 0
  1686  007002  0E60               	movlw	low _realNumbers
  1687  007004  6E4D               	movwf	??_main& (0+255),c
  1688  007006  0E00               	movlw	high _realNumbers
  1689  007008  6E4E               	movwf	(??_main+1)& (0+255),c
  1690  00700A  90D8               	bcf	status,0,c
  1691  00700C  0100               	movlb	0	; () banked
  1692  00700E  35F5               	rlcf	main@k& (0+255),w,b
  1693  007010  6ED9               	movwf	fsr2l,c
  1694  007012  0100               	movlb	0	; () banked
  1695  007014  35F6               	rlcf	(main@k+1)& (0+255),w,b
  1696  007016  6EDA               	movwf	fsr2h,c
  1697  007018  504D               	movf	??_main,w,c
  1698  00701A  26D9               	addwf	fsr2l,f,c
  1699  00701C  504E               	movf	??_main+1,w,c
  1700  00701E  22DA               	addwfc	fsr2h,f,c
  1701  007020  CFDE F04F          	movff	postinc2,??_main+2
  1702  007024  CFDD F050          	movff	postdec2,??_main+3
  1703  007028  C04F  F051         	movff	??_main+2,??_main+4
  1704  00702C  C050  F052         	movff	??_main+3,??_main+5
  1705  007030  0E00               	movlw	0
  1706  007032  BE52               	btfsc	(??_main+5)& (0+255),7,c
  1707  007034  0EFF               	movlw	255
  1708  007036  6E53               	movwf	(??_main+6)& (0+255),c
  1709  007038  6E54               	movwf	(??_main+7)& (0+255),c
  1710  00703A  5054               	movf	??_main+7,w,c
  1711  00703C  0A80               	xorlw	128
  1712  00703E  6E55               	movwf	(??_main+8)& (0+255),c
  1713  007040  0100               	movlb	0	; () banked
  1714  007042  51EF               	movf	main@place& (0+255),w,b
  1715  007044  5C51               	subwf	??_main+4,w,c
  1716  007046  0100               	movlb	0	; () banked
  1717  007048  51F0               	movf	(main@place+1)& (0+255),w,b
  1718  00704A  5852               	subwfb	??_main+5,w,c
  1719  00704C  0100               	movlb	0	; () banked
  1720  00704E  51F1               	movf	(main@place+2)& (0+255),w,b
  1721  007050  5853               	subwfb	??_main+6,w,c
  1722  007052  0100               	movlb	0	; () banked
  1723  007054  51F2               	movf	(main@place+3)& (0+255),w,b
  1724  007056  0A80               	xorlw	128
  1725  007058  5855               	subwfb	(??_main+8)& (0+255),w,c
  1726  00705A  B0D8               	btfsc	status,0,c
  1727  00705C  D0B0               	goto	l1623
  1728  00705E  D7B1               	goto	l1609
  1729  007060                     l1613:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;ADC main 25k22.c: 104: if (realNumbers[k] >= root + place) {
  1733  007060  0100               	movlb	0	; () banked
  1734  007062  51EF               	movf	main@place& (0+255),w,b
  1735  007064  0100               	movlb	0	; () banked
  1736  007066  25EB               	addwf	main@root& (0+255),w,b
  1737  007068  6E4D               	movwf	??_main& (0+255),c
  1738  00706A  0100               	movlb	0	; () banked
  1739  00706C  51F0               	movf	(main@place+1)& (0+255),w,b
  1740  00706E  0100               	movlb	0	; () banked
  1741  007070  21EC               	addwfc	(main@root+1)& (0+255),w,b
  1742  007072  6E4E               	movwf	(??_main+1)& (0+255),c
  1743  007074  0100               	movlb	0	; () banked
  1744  007076  51F1               	movf	(main@place+2)& (0+255),w,b
  1745  007078  0100               	movlb	0	; () banked
  1746  00707A  21ED               	addwfc	(main@root+2)& (0+255),w,b
  1747  00707C  6E4F               	movwf	(??_main+2)& (0+255),c
  1748  00707E  0100               	movlb	0	; () banked
  1749  007080  51F2               	movf	(main@place+3)& (0+255),w,b
  1750  007082  0100               	movlb	0	; () banked
  1751  007084  21EE               	addwfc	(main@root+3)& (0+255),w,b
  1752  007086  6E50               	movwf	(??_main+3)& (0+255),c
  1753  007088  0E60               	movlw	low _realNumbers
  1754  00708A  6E51               	movwf	(??_main+4)& (0+255),c
  1755  00708C  0E00               	movlw	high _realNumbers
  1756  00708E  6E52               	movwf	(??_main+5)& (0+255),c
  1757  007090  90D8               	bcf	status,0,c
  1758  007092  0100               	movlb	0	; () banked
  1759  007094  35F5               	rlcf	main@k& (0+255),w,b
  1760  007096  6ED9               	movwf	fsr2l,c
  1761  007098  0100               	movlb	0	; () banked
  1762  00709A  35F6               	rlcf	(main@k+1)& (0+255),w,b
  1763  00709C  6EDA               	movwf	fsr2h,c
  1764  00709E  5051               	movf	??_main+4,w,c
  1765  0070A0  26D9               	addwf	fsr2l,f,c
  1766  0070A2  5052               	movf	??_main+5,w,c
  1767  0070A4  22DA               	addwfc	fsr2h,f,c
  1768  0070A6  CFDE F053          	movff	postinc2,??_main+6
  1769  0070AA  CFDD F054          	movff	postdec2,??_main+7
  1770  0070AE  C053  F055         	movff	??_main+6,??_main+8
  1771  0070B2  C054  F056         	movff	??_main+7,??_main+9
  1772  0070B6  0E00               	movlw	0
  1773  0070B8  BE56               	btfsc	(??_main+9)& (0+255),7,c
  1774  0070BA  0EFF               	movlw	255
  1775  0070BC  6E57               	movwf	(??_main+10)& (0+255),c
  1776  0070BE  6E58               	movwf	(??_main+11)& (0+255),c
  1777  0070C0  5058               	movf	??_main+11,w,c
  1778  0070C2  0A80               	xorlw	128
  1779  0070C4  6E59               	movwf	(??_main+12)& (0+255),c
  1780  0070C6  504D               	movf	??_main,w,c
  1781  0070C8  5C55               	subwf	??_main+8,w,c
  1782  0070CA  504E               	movf	??_main+1,w,c
  1783  0070CC  5856               	subwfb	??_main+9,w,c
  1784  0070CE  504F               	movf	??_main+2,w,c
  1785  0070D0  5857               	subwfb	??_main+10,w,c
  1786  0070D2  5050               	movf	??_main+3,w,c
  1787  0070D4  0A80               	xorlw	128
  1788  0070D6  5859               	subwfb	(??_main+12)& (0+255),w,c
  1789  0070D8  A0D8               	btfss	status,0,c
  1790  0070DA  D038               	goto	l1619
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;ADC main 25k22.c: 105: realNumbers[k] -= root + place;
  1794  0070DC  0100               	movlb	0	; () banked
  1795  0070DE  C0EB  F04D         	movff	main@root,??_main
  1796  0070E2  0100               	movlb	0	; () banked
  1797  0070E4  C0EC  F04E         	movff	main@root+1,??_main+1
  1798  0070E8  0100               	movlb	0	; () banked
  1799  0070EA  51EF               	movf	main@place& (0+255),w,b
  1800  0070EC  264D               	addwf	??_main,f,c
  1801  0070EE  0100               	movlb	0	; () banked
  1802  0070F0  51F0               	movf	(main@place+1)& (0+255),w,b
  1803  0070F2  224E               	addwfc	??_main+1,f,c
  1804  0070F4  0E60               	movlw	low _realNumbers
  1805  0070F6  6E4F               	movwf	(??_main+2)& (0+255),c
  1806  0070F8  0E00               	movlw	high _realNumbers
  1807  0070FA  6E50               	movwf	(??_main+3)& (0+255),c
  1808  0070FC  90D8               	bcf	status,0,c
  1809  0070FE  0100               	movlb	0	; () banked
  1810  007100  35F5               	rlcf	main@k& (0+255),w,b
  1811  007102  6ED9               	movwf	fsr2l,c
  1812  007104  0100               	movlb	0	; () banked
  1813  007106  35F6               	rlcf	(main@k+1)& (0+255),w,b
  1814  007108  6EDA               	movwf	fsr2h,c
  1815  00710A  504F               	movf	??_main+2,w,c
  1816  00710C  26D9               	addwf	fsr2l,f,c
  1817  00710E  5050               	movf	??_main+3,w,c
  1818  007110  22DA               	addwfc	fsr2h,f,c
  1819  007112  504D               	movf	??_main,w,c
  1820  007114  5EDE               	subwf	postinc2,f,c
  1821  007116  504E               	movf	??_main+1,w,c
  1822  007118  5ADD               	subwfb	postdec2,f,c
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;ADC main 25k22.c: 106: root += place * 2;
  1826  00711A  90D8               	bcf	status,0,c
  1827  00711C  0100               	movlb	0	; () banked
  1828  00711E  35EF               	rlcf	main@place& (0+255),w,b
  1829  007120  6E4D               	movwf	??_main& (0+255),c
  1830  007122  0100               	movlb	0	; () banked
  1831  007124  35F0               	rlcf	(main@place+1)& (0+255),w,b
  1832  007126  6E4E               	movwf	(??_main+1)& (0+255),c
  1833  007128  0100               	movlb	0	; () banked
  1834  00712A  35F1               	rlcf	(main@place+2)& (0+255),w,b
  1835  00712C  6E4F               	movwf	(??_main+2)& (0+255),c
  1836  00712E  0100               	movlb	0	; () banked
  1837  007130  35F2               	rlcf	(main@place+3)& (0+255),w,b
  1838  007132  6E50               	movwf	(??_main+3)& (0+255),c
  1839  007134  504D               	movf	??_main,w,c
  1840  007136  0100               	movlb	0	; () banked
  1841  007138  27EB               	addwf	main@root& (0+255),f,b
  1842  00713A  504E               	movf	??_main+1,w,c
  1843  00713C  0100               	movlb	0	; () banked
  1844  00713E  23EC               	addwfc	(main@root+1)& (0+255),f,b
  1845  007140  504F               	movf	??_main+2,w,c
  1846  007142  0100               	movlb	0	; () banked
  1847  007144  23ED               	addwfc	(main@root+2)& (0+255),f,b
  1848  007146  5050               	movf	??_main+3,w,c
  1849  007148  0100               	movlb	0	; () banked
  1850  00714A  23EE               	addwfc	(main@root+3)& (0+255),f,b
  1851  00714C                     l1619:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;ADC main 25k22.c: 107: }
  1855                           ;ADC main 25k22.c: 109: root = root >> 1;
  1856  00714C  0100               	movlb	0	; () banked
  1857  00714E  C0EB  F04D         	movff	main@root,??_main
  1858  007152  0100               	movlb	0	; () banked
  1859  007154  C0EC  F04E         	movff	main@root+1,??_main+1
  1860  007158  0100               	movlb	0	; () banked
  1861  00715A  C0ED  F04F         	movff	main@root+2,??_main+2
  1862  00715E  0100               	movlb	0	; () banked
  1863  007160  C0EE  F050         	movff	main@root+3,??_main+3
  1864  007164  3450               	rlcf	??_main+3,w,c
  1865  007166  3250               	rrcf	??_main+3,f,c
  1866  007168  324F               	rrcf	??_main+2,f,c
  1867  00716A  324E               	rrcf	??_main+1,f,c
  1868  00716C  324D               	rrcf	??_main,f,c
  1869  00716E  C04D  F0EB         	movff	??_main,main@root
  1870  007172  C04E  F0EC         	movff	??_main+1,main@root+1
  1871  007176  C04F  F0ED         	movff	??_main+2,main@root+2
  1872  00717A  C050  F0EE         	movff	??_main+3,main@root+3
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;ADC main 25k22.c: 110: place = place >> 2;
  1876  00717E  0E02               	movlw	2
  1877  007180  6E4D               	movwf	??_main& (0+255),c
  1878  007182  0100               	movlb	0	; () banked
  1879  007184  C0EF  F04E         	movff	main@place,??_main+1
  1880  007188  0100               	movlb	0	; () banked
  1881  00718A  C0F0  F04F         	movff	main@place+1,??_main+2
  1882  00718E  0100               	movlb	0	; () banked
  1883  007190  C0F1  F050         	movff	main@place+2,??_main+3
  1884  007194  0100               	movlb	0	; () banked
  1885  007196  C0F2  F051         	movff	main@place+3,??_main+4
  1886  00719A                     u1125:
  1887  00719A  664D               	tstfsz	??_main,c
  1888  00719C  D001               	goto	u1126
  1889  00719E  D007               	goto	u1127
  1890  0071A0                     u1126:
  1891  0071A0  3451               	rlcf	??_main+4,w,c
  1892  0071A2  3251               	rrcf	??_main+4,f,c
  1893  0071A4  3250               	rrcf	??_main+3,f,c
  1894  0071A6  324F               	rrcf	??_main+2,f,c
  1895  0071A8  324E               	rrcf	??_main+1,f,c
  1896  0071AA  2E4D               	decfsz	??_main,f,c
  1897  0071AC  D7F6               	goto	u1125
  1898  0071AE                     u1127:
  1899  0071AE  C04E  F0EF         	movff	??_main+1,main@place
  1900  0071B2  C04F  F0F0         	movff	??_main+2,main@place+1
  1901  0071B6  C050  F0F1         	movff	??_main+3,main@place+2
  1902  0071BA  C051  F0F2         	movff	??_main+4,main@place+3
  1903  0071BE                     l1623:
  1904                           
  1905                           ; BSR set to: 0
  1906  0071BE  0100               	movlb	0	; () banked
  1907  0071C0  51F2               	movf	(main@place+3)& (0+255),w,b
  1908  0071C2  11EF               	iorwf	main@place& (0+255),w,b
  1909  0071C4  11F0               	iorwf	(main@place+1)& (0+255),w,b
  1910  0071C6  11F1               	iorwf	(main@place+2)& (0+255),w,b
  1911  0071C8  A4D8               	btfss	status,2,c
  1912  0071CA  D74A               	goto	l1613
  1913  0071CC                     l1625:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;ADC main 25k22.c: 111: }
  1917                           ;ADC main 25k22.c: 112: }
  1918                           ;ADC main 25k22.c: 114: realNumbers[k] = root;
  1919  0071CC  0E60               	movlw	low _realNumbers
  1920  0071CE  6E4D               	movwf	??_main& (0+255),c
  1921  0071D0  0E00               	movlw	high _realNumbers
  1922  0071D2  6E4E               	movwf	(??_main+1)& (0+255),c
  1923  0071D4  90D8               	bcf	status,0,c
  1924  0071D6  0100               	movlb	0	; () banked
  1925  0071D8  35F5               	rlcf	main@k& (0+255),w,b
  1926  0071DA  6ED9               	movwf	fsr2l,c
  1927  0071DC  0100               	movlb	0	; () banked
  1928  0071DE  35F6               	rlcf	(main@k+1)& (0+255),w,b
  1929  0071E0  6EDA               	movwf	fsr2h,c
  1930  0071E2  504D               	movf	??_main,w,c
  1931  0071E4  26D9               	addwf	fsr2l,f,c
  1932  0071E6  504E               	movf	??_main+1,w,c
  1933  0071E8  22DA               	addwfc	fsr2h,f,c
  1934  0071EA  0100               	movlb	0	; () banked
  1935  0071EC  C0EB  FFDE         	movff	main@root,postinc2
  1936  0071F0  0100               	movlb	0	; () banked
  1937  0071F2  C0EC  FFDD         	movff	main@root+1,postdec2
  1938                           
  1939                           ; BSR set to: 0
  1940  0071F6  0100               	movlb	0	; () banked
  1941  0071F8  4BF5               	infsnz	main@k& (0+255),f,b
  1942  0071FA  2BF6               	incf	(main@k+1)& (0+255),f,b
  1943  0071FC  D640               	goto	L2
  1944  0071FE                     l1631:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;ADC main 25k22.c: 115: }
  1948                           ;ADC main 25k22.c: 117: sendIntArray(realNumbers, 64);
  1949  0071FE  0100               	movlb	0	; () banked
  1950  007200  0E00               	movlw	high _realNumbers
  1951  007202  6E20               	movwf	sendIntArray@array+1,c
  1952  007204  0100               	movlb	0	; () banked
  1953  007206  0E60               	movlw	low _realNumbers
  1954  007208  6E1F               	movwf	sendIntArray@array,c
  1955  00720A  0E00               	movlw	0
  1956  00720C  6E22               	movwf	sendIntArray@size+1,c
  1957  00720E  0E40               	movlw	64
  1958  007210  6E21               	movwf	sendIntArray@size,c
  1959  007212  ECC4  F035         	call	_sendIntArray	;wreg free
  1960                           
  1961                           ;ADC main 25k22.c: 119: for(i = 0; i < 64; i++) {
  1962  007216  0E00               	movlw	0
  1963  007218  0100               	movlb	0	; () banked
  1964  00721A  6FF4               	movwf	(main@i+1)& (0+255),b
  1965  00721C  0E00               	movlw	0
  1966  00721E  0100               	movlb	0	; () banked
  1967  007220  6FF3               	movwf	main@i& (0+255),b
  1968  007222                     
  1969                           ; BSR set to: 0
  1970  007222  0100               	movlb	0	; () banked
  1971  007224  51F4               	movf	(main@i+1)& (0+255),w,b
  1972  007226  0A80               	xorlw	128
  1973  007228  0F80               	addlw	-128
  1974  00722A  0E40               	movlw	64
  1975  00722C  B4D8               	btfsc	status,2,c
  1976  00722E  5DF3               	subwf	main@i& (0+255),w,b
  1977  007230  B0D8               	btfsc	status,0,c
  1978  007232  D5BB               	goto	l1567
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;ADC main 25k22.c: 120: LATC = realNumbers[i];
  1982                           
  1983                           ; BSR set to: 0
  1984                           
  1985                           ; BSR set to: 0
  1986  007234  0E60               	movlw	low _realNumbers
  1987  007236  6E4D               	movwf	??_main& (0+255),c
  1988  007238  0E00               	movlw	high _realNumbers
  1989  00723A  6E4E               	movwf	(??_main+1)& (0+255),c
  1990  00723C  90D8               	bcf	status,0,c
  1991  00723E  0100               	movlb	0	; () banked
  1992  007240  35F3               	rlcf	main@i& (0+255),w,b
  1993  007242  6ED9               	movwf	fsr2l,c
  1994  007244  0100               	movlb	0	; () banked
  1995  007246  35F4               	rlcf	(main@i+1)& (0+255),w,b
  1996  007248  6EDA               	movwf	fsr2h,c
  1997  00724A  504D               	movf	??_main,w,c
  1998  00724C  26D9               	addwf	fsr2l,f,c
  1999  00724E  504E               	movf	??_main+1,w,c
  2000  007250  22DA               	addwfc	fsr2h,f,c
  2001  007252  50DF               	movf	indf2,w,c
  2002  007254  6E8B               	movwf	3979,c	;volatile
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;ADC main 25k22.c: 121: Delay10TCYx(5);
  2006  007256  0E05               	movlw	5
  2007  007258  ECA7  F034         	call	_Delay10TCYx
  2008  00725C  0100               	movlb	0	; () banked
  2009  00725E  4BF3               	infsnz	main@i& (0+255),f,b
  2010  007260  2BF4               	incf	(main@i+1)& (0+255),f,b
  2011  007262  D7DF               	goto	L3
  2012  007264                     __end_of_main:
  2013                           	opt stack 0
  2014                           tblptru	equ	0xFF8
  2015                           postinc0	equ	0xFEE
  2016                           wreg	equ	0xFE8
  2017                           indf2	equ	0xFDF
  2018                           postinc2	equ	0xFDE
  2019                           postdec2	equ	0xFDD
  2020                           fsr2h	equ	0xFDA
  2021                           fsr2l	equ	0xFD9
  2022                           status	equ	0xFD8
  2023                           
  2024 ;; *************** function _sendIntArray *****************
  2025 ;; Defined at:
  2026 ;;		line 145 in file "ADC main 25k22.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  array           2   30[COMRAM] PTR short 
  2029 ;;		 -> realNumbers(128), 
  2030 ;;  size            2   32[COMRAM] unsigned int 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;		None               void
  2035 ;; Registers used:
  2036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2042 ;;      Params:         4       0       0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0
  2045 ;;      Totals:         4       0       0       0       0       0       0
  2046 ;;Total ram usage:        4 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    3
  2049 ;; This function calls:
  2050 ;;		_sendString
  2051 ;;		_sprintf
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text1
  2058  006B88                     __ptext1:
  2059                           	opt stack 0
  2060  006B88                     _sendIntArray:
  2061                           	opt stack 27
  2062                           
  2063                           ;ADC main 25k22.c: 146: for(i = 0; i < size; i++) {
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;incstack = 0
  2067  006B88  0E00               	movlw	0
  2068  006B8A  6E5B               	movwf	_i+1,c
  2069  006B8C  0E00               	movlw	0
  2070  006B8E  6E5A               	movwf	_i,c
  2071  006B90  D023               	goto	l1533
  2072  006B92                     l1527:
  2073                           
  2074                           ;ADC main 25k22.c: 147: sprintf(data, "%d", array[i]);
  2075  006B92  0100               	movlb	0	; () banked
  2076  006B94  0E00               	movlw	high _data
  2077  006B96  6E0E               	movwf	sprintf@sp+1,c
  2078  006B98  0100               	movlb	0	; () banked
  2079  006B9A  0EE0               	movlw	low _data
  2080  006B9C  6E0D               	movwf	sprintf@sp,c
  2081  006B9E  0E7F               	movlw	high STR_1
  2082  006BA0  6E10               	movwf	sprintf@f+1,c
  2083  006BA2  0EFB               	movlw	low STR_1
  2084  006BA4  6E0F               	movwf	sprintf@f,c
  2085  006BA6  90D8               	bcf	status,0,c
  2086  006BA8  345A               	rlcf	_i,w,c
  2087  006BAA  6ED9               	movwf	fsr2l,c
  2088  006BAC  345B               	rlcf	_i+1,w,c
  2089  006BAE  6EDA               	movwf	fsr2h,c
  2090  006BB0  501F               	movf	sendIntArray@array,w,c
  2091  006BB2  26D9               	addwf	fsr2l,f,c
  2092  006BB4  5020               	movf	sendIntArray@array+1,w,c
  2093  006BB6  22DA               	addwfc	fsr2h,f,c
  2094  006BB8  CFDE F011          	movff	postinc2,?_sprintf+4
  2095  006BBC  CFDD F012          	movff	postdec2,?_sprintf+5
  2096  006BC0  ECF3  F035         	call	_sprintf	;wreg free
  2097                           
  2098                           ;ADC main 25k22.c: 148: sendString(data);
  2099  006BC4  0100               	movlb	0	; () banked
  2100  006BC6  0E00               	movlw	high _data
  2101  006BC8  6E05               	movwf	sendString@string+1,c
  2102  006BCA  0100               	movlb	0	; () banked
  2103  006BCC  0EE0               	movlw	low _data
  2104  006BCE  6E04               	movwf	sendString@string,c
  2105  006BD0  ECB8  F034         	call	_sendString	;wreg free
  2106  006BD4  4A5A               	infsnz	_i,f,c
  2107  006BD6  2A5B               	incf	_i+1,f,c
  2108  006BD8                     l1533:
  2109  006BD8  5021               	movf	sendIntArray@size,w,c
  2110  006BDA  5C5A               	subwf	_i,w,c
  2111  006BDC  5022               	movf	sendIntArray@size+1,w,c
  2112  006BDE  585B               	subwfb	_i+1,w,c
  2113  006BE0  B0D8               	btfsc	status,0,c
  2114  006BE2  0012               	return	
  2115  006BE4  D7D6               	goto	l1527
  2116  006BE6                     __end_of_sendIntArray:
  2117                           	opt stack 0
  2118                           tblptru	equ	0xFF8
  2119                           postinc0	equ	0xFEE
  2120                           wreg	equ	0xFE8
  2121                           indf2	equ	0xFDF
  2122                           postinc2	equ	0xFDE
  2123                           postdec2	equ	0xFDD
  2124                           fsr2h	equ	0xFDA
  2125                           fsr2l	equ	0xFD9
  2126                           status	equ	0xFD8
  2127                           
  2128 ;; *************** function _sprintf *****************
  2129 ;; Defined at:
  2130 ;;		line 492 in file "/Applications/microchip/xc8/v1.33/sources/common/doprnt.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  sp              2   12[COMRAM] PTR unsigned char 
  2133 ;;		 -> data(5), 
  2134 ;;  f               2   14[COMRAM] PTR const unsigned char 
  2135 ;;		 -> STR_1(3), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  _val            5   24[COMRAM] struct .
  2138 ;;  ap              2   20[COMRAM] PTR void [1]
  2139 ;;		 -> ?_sprintf(2), 
  2140 ;;  c               1   29[COMRAM] char 
  2141 ;;  prec            1   23[COMRAM] char 
  2142 ;;  flag            1   22[COMRAM] unsigned char 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  2   12[COMRAM] int 
  2145 ;; Registers used:
  2146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2152 ;;      Params:         6       0       0       0       0       0       0
  2153 ;;      Locals:        10       0       0       0       0       0       0
  2154 ;;      Temps:          2       0       0       0       0       0       0
  2155 ;;      Totals:        18       0       0       0       0       0       0
  2156 ;;Total ram usage:       18 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    1
  2159 ;; This function calls:
  2160 ;;		___lwdiv
  2161 ;;		___lwmod
  2162 ;; This function is called by:
  2163 ;;		_sendIntArray
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text2
  2168  006BE6                     __ptext2:
  2169                           	opt stack 0
  2170  006BE6                     _sprintf:
  2171                           	opt stack 28
  2172                           
  2173                           ;doprnt.c: 494: va_list ap;
  2174                           ;doprnt.c: 499: signed char c;
  2175                           ;doprnt.c: 506: signed char prec;
  2176                           ;doprnt.c: 508: unsigned char flag;
  2177                           ;doprnt.c: 527: union {
  2178                           ;doprnt.c: 528: unsigned int _val;
  2179                           ;doprnt.c: 529: struct {
  2180                           ;doprnt.c: 530: const char * _cp;
  2181                           ;doprnt.c: 531: unsigned _len;
  2182                           ;doprnt.c: 532: } _str;
  2183                           ;doprnt.c: 533: } _val;
  2184                           ;doprnt.c: 542: *ap = __va_start();
  2185                           
  2186                           ;incstack = 0
  2187  006BE6  0E00               	movlw	high (?_sprintf+4)
  2188  006BE8  6E16               	movwf	sprintf@ap+1,c
  2189  006BEA  0E11               	movlw	low (?_sprintf+4)
  2190  006BEC  6E15               	movwf	sprintf@ap,c
  2191                           
  2192                           ;doprnt.c: 545: while(c = *f++) {
  2193  006BEE  D098               	goto	l1353
  2194  006BF0                     l1301:
  2195                           
  2196                           ;doprnt.c: 547: if(c != '%')
  2197  006BF0  501E               	movf	sprintf@c,w,c
  2198  006BF2  0A25               	xorlw	37
  2199  006BF4  B4D8               	btfsc	status,2,c
  2200  006BF6  D009               	goto	l1307
  2201                           
  2202                           ;doprnt.c: 549: {
  2203                           ;doprnt.c: 550: ((*sp++ = (c)));
  2204  006BF8  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2205  006BFC  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2206  006C00  C01E  FFDF         	movff	sprintf@c,indf2
  2207  006C04  4A0D               	infsnz	sprintf@sp,f,c
  2208  006C06  2A0E               	incf	sprintf@sp+1,f,c
  2209                           
  2210                           ;doprnt.c: 551: continue;
  2211  006C08  D08B               	goto	l1353
  2212  006C0A                     l1307:
  2213                           
  2214                           ;doprnt.c: 552: }
  2215                           ;doprnt.c: 557: flag = 0;
  2216  006C0A  0E00               	movlw	0
  2217  006C0C  6E17               	movwf	sprintf@flag,c
  2218                           
  2219                           ;doprnt.c: 831: }
  2220                           
  2221                           ;doprnt.c: 822: continue;
  2222                           
  2223                           ;doprnt.c: 811: default:
  2224                           
  2225                           ;doprnt.c: 707: case 'i':
  2226                           ;doprnt.c: 708: break;
  2227                           
  2228                           ;doprnt.c: 706: case 'd':
  2229                           
  2230                           ;doprnt.c: 647: goto alldone;
  2231                           
  2232                           ;doprnt.c: 646: case 0:
  2233                           
  2234                           ;doprnt.c: 644: switch(c = *f++) {
  2235  006C0E  C00F  FFF6         	movff	sprintf@f,tblptrl
  2236  006C12  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2237  006C16  4A0F               	infsnz	sprintf@f,f,c
  2238  006C18  2A10               	incf	sprintf@f+1,f,c
  2239  006C1A                     	if	0	;tblptru may be non-zero
  2240  006C1A                     	endif
  2241  006C1A                     	if	0	;tblptru may be non-zero
  2242  006C1A                     	endif
  2243  006C1A  0008               	tblrd		*
  2244  006C1C  CFF5 F01E          	movff	tablat,sprintf@c
  2245  006C20  501E               	movf	sprintf@c& (0+255),w,c
  2246                           
  2247                           ; Switch size 1, requested type "space"
  2248                           ; Number of cases is 3, Range of values is 0 to 105
  2249                           ; switch strategies available:
  2250                           ; Name         Instructions Cycles
  2251                           ; simple_byte           10     6 (average)
  2252                           ;	Chosen strategy is simple_byte
  2253  006C22  0A00               	xorlw	0	; case 0
  2254  006C24  B4D8               	btfsc	status,2,c
  2255  006C26  D087               	goto	l1355
  2256  006C28  0A64               	xorlw	100	; case 100
  2257  006C2A  B4D8               	btfsc	status,2,c
  2258  006C2C  D003               	goto	l1313
  2259  006C2E  0A0D               	xorlw	13	; case 105
  2260  006C30  A4D8               	btfss	status,2,c
  2261  006C32  D076               	goto	l1353
  2262  006C34                     l1313:
  2263                           
  2264                           ;doprnt.c: 1262: {
  2265                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2266  006C34  C015  FFD9         	movff	sprintf@ap,fsr2l
  2267  006C38  C016  FFDA         	movff	sprintf@ap+1,fsr2h
  2268  006C3C  CFDE F019          	movff	postinc2,sprintf@_val
  2269  006C40  CFDD F01A          	movff	postdec2,sprintf@_val+1
  2270  006C44  0E02               	movlw	2
  2271  006C46  2615               	addwf	sprintf@ap,f,c
  2272  006C48  0E00               	movlw	0
  2273  006C4A  2216               	addwfc	sprintf@ap+1,f,c
  2274                           
  2275                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2276  006C4C  501A               	movf	sprintf@_val+1,w,c
  2277  006C4E  0A80               	xorlw	128
  2278  006C50  6EF3               	movwf	prodl,c
  2279  006C52  0E80               	movlw	128
  2280  006C54  5CF3               	subwf	prodl,w,c
  2281  006C56  0E00               	movlw	0
  2282  006C58  B4D8               	btfsc	status,2,c
  2283  006C5A  5C19               	subwf	sprintf@_val,w,c
  2284  006C5C  B0D8               	btfsc	status,0,c
  2285  006C5E  D006               	goto	l1323
  2286                           
  2287                           ;doprnt.c: 1271: flag |= 0x03;
  2288  006C60  0E03               	movlw	3
  2289  006C62  1217               	iorwf	sprintf@flag,f,c
  2290                           
  2291                           ;doprnt.c: 1272: _val._val = -_val._val;
  2292  006C64  6C19               	negf	sprintf@_val,c
  2293  006C66  1E1A               	comf	sprintf@_val+1,f,c
  2294  006C68  B0D8               	btfsc	status,0,c
  2295  006C6A  2A1A               	incf	sprintf@_val+1,f,c
  2296  006C6C                     l1323:
  2297                           
  2298                           ;doprnt.c: 1273: }
  2299                           ;doprnt.c: 1275: }
  2300                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2301  006C6C  0E01               	movlw	1
  2302  006C6E  6E1E               	movwf	sprintf@c,c
  2303  006C70  501E               	movf	sprintf@c,w,c
  2304  006C72  0A05               	xorlw	5
  2305  006C74  B4D8               	btfsc	status,2,c
  2306  006C76  D016               	goto	l1337
  2307                           
  2308                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2309  006C78  501E               	movf	sprintf@c,w,c
  2310  006C7A  0D02               	mullw	2
  2311  006C7C  0EF1               	movlw	low _dpowers
  2312  006C7E  24F3               	addwf	prodl,w,c
  2313  006C80  6EF6               	movwf	tblptrl,c
  2314  006C82  0E7F               	movlw	high _dpowers
  2315  006C84  20F4               	addwfc	prodh,w,c
  2316  006C86  6EF7               	movwf	tblptrh,c
  2317  006C88                     	if	0	;There are less than 3 active tblptr bytes
  2318  006C88                     	endif
  2319  006C88  0009               	tblrd		*+
  2320  006C8A  CFF5 F013          	movff	tablat,??_sprintf
  2321  006C8E  0009               	tblrd		*+
  2322  006C90  CFF5 F014          	movff	tablat,??_sprintf+1
  2323  006C94  5013               	movf	??_sprintf,w,c
  2324  006C96  5C19               	subwf	sprintf@_val,w,c
  2325  006C98  5014               	movf	??_sprintf+1,w,c
  2326  006C9A  581A               	subwfb	sprintf@_val+1,w,c
  2327  006C9C  A0D8               	btfss	status,0,c
  2328  006C9E  D002               	goto	l1337
  2329                           
  2330                           ;doprnt.c: 1316: break;
  2331  006CA0  2A1E               	incf	sprintf@c,f,c
  2332  006CA2  D7E6               	goto	L4
  2333  006CA4                     l1337:
  2334                           
  2335                           ;doprnt.c: 1431: {
  2336                           ;doprnt.c: 1447: if(flag & 0x03)
  2337  006CA4  C017  F013         	movff	sprintf@flag,??_sprintf
  2338  006CA8  0E03               	movlw	3
  2339  006CAA  1613               	andwf	??_sprintf,f,c
  2340  006CAC  B4D8               	btfsc	status,2,c
  2341  006CAE  D008               	goto	l1343
  2342                           
  2343                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2344  006CB0  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2345  006CB4  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2346  006CB8  0E2D               	movlw	45
  2347  006CBA  6EDF               	movwf	indf2,c
  2348  006CBC  4A0D               	infsnz	sprintf@sp,f,c
  2349  006CBE  2A0E               	incf	sprintf@sp+1,f,c
  2350  006CC0                     l1343:
  2351                           
  2352                           ;doprnt.c: 1478: }
  2353                           ;doprnt.c: 1481: prec = c;
  2354  006CC0  C01E  F018         	movff	sprintf@c,sprintf@prec
  2355                           
  2356                           ;doprnt.c: 1483: while(prec--) {
  2357  006CC4  D029               	goto	l1351
  2358  006CC6                     l1345:
  2359                           
  2360                           ;doprnt.c: 1487: {
  2361                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2362  006CC6  5018               	movf	sprintf@prec,w,c
  2363  006CC8  0D02               	mullw	2
  2364  006CCA  0EF1               	movlw	low _dpowers
  2365  006CCC  24F3               	addwf	prodl,w,c
  2366  006CCE  6EF6               	movwf	tblptrl,c
  2367  006CD0  0E7F               	movlw	high _dpowers
  2368  006CD2  20F4               	addwfc	prodh,w,c
  2369  006CD4  6EF7               	movwf	tblptrh,c
  2370  006CD6                     	if	0	;There are less than 3 active tblptr bytes
  2371  006CD6                     	endif
  2372  006CD6  0009               	tblrd		*+
  2373  006CD8  CFF5 F003          	movff	tablat,___lwdiv@divisor
  2374  006CDC  000A               	tblrd		*-
  2375  006CDE  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  2376  006CE2  C019  F001         	movff	sprintf@_val,___lwdiv@dividend
  2377  006CE6  C01A  F002         	movff	sprintf@_val+1,___lwdiv@dividend+1
  2378  006CEA  EC44  F035         	call	___lwdiv	;wreg free
  2379  006CEE  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2380  006CF2  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2381  006CF6  0E00               	movlw	0
  2382  006CF8  6E0B               	movwf	___lwmod@divisor+1,c
  2383  006CFA  0E0A               	movlw	10
  2384  006CFC  6E0A               	movwf	___lwmod@divisor,c
  2385  006CFE  ECFC  F034         	call	___lwmod	;wreg free
  2386  006D02  5008               	movf	?___lwmod,w,c
  2387  006D04  0F30               	addlw	48
  2388  006D06  6E1E               	movwf	sprintf@c,c
  2389                           
  2390                           ;doprnt.c: 1532: }
  2391                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2392  006D08  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2393  006D0C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2394  006D10  C01E  FFDF         	movff	sprintf@c,indf2
  2395  006D14  4A0D               	infsnz	sprintf@sp,f,c
  2396  006D16  2A0E               	incf	sprintf@sp+1,f,c
  2397  006D18                     l1351:
  2398  006D18  0618               	decf	sprintf@prec,f,c
  2399  006D1A  2818               	incf	sprintf@prec& (0+255),w,c
  2400  006D1C  A4D8               	btfss	status,2,c
  2401  006D1E  D7D3               	goto	l1345
  2402  006D20                     l1353:
  2403  006D20  C00F  FFF6         	movff	sprintf@f,tblptrl
  2404  006D24  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2405  006D28  4A0F               	infsnz	sprintf@f,f,c
  2406  006D2A  2A10               	incf	sprintf@f+1,f,c
  2407  006D2C                     	if	0	;tblptru may be non-zero
  2408  006D2C                     	endif
  2409  006D2C                     	if	0	;tblptru may be non-zero
  2410  006D2C                     	endif
  2411  006D2C  0008               	tblrd		*
  2412  006D2E  CFF5 F01E          	movff	tablat,sprintf@c
  2413  006D32  661E               	tstfsz	sprintf@c& (0+255),c
  2414  006D34  D75D               	goto	l1301
  2415  006D36                     l1355:
  2416                           
  2417                           ;doprnt.c: 1547: *sp = 0;
  2418  006D36  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2419  006D3A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2420  006D3E  0E00               	movlw	0
  2421  006D40  6EDF               	movwf	indf2,c
  2422  006D42  0012               	return	
  2423  006D44                     __end_of_sprintf:
  2424                           	opt stack 0
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           prodh	equ	0xFF4
  2430                           prodl	equ	0xFF3
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           indf2	equ	0xFDF
  2434                           postinc2	equ	0xFDE
  2435                           postdec2	equ	0xFDD
  2436                           fsr2h	equ	0xFDA
  2437                           fsr2l	equ	0xFD9
  2438                           status	equ	0xFD8
  2439                           
  2440 ;; *************** function ___lwmod *****************
  2441 ;; Defined at:
  2442 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/lwmod.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  dividend        2    7[COMRAM] unsigned int 
  2445 ;;  divisor         2    9[COMRAM] unsigned int 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  counter         1   11[COMRAM] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  2    7[COMRAM] unsigned int 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2457 ;;      Params:         4       0       0       0       0       0       0
  2458 ;;      Locals:         1       0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0
  2460 ;;      Totals:         5       0       0       0       0       0       0
  2461 ;;Total ram usage:        5 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_sprintf
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text3
  2471  0069F8                     __ptext3:
  2472                           	opt stack 0
  2473  0069F8                     ___lwmod:
  2474                           	opt stack 28
  2475                           
  2476                           ;incstack = 0
  2477  0069F8  500B               	movf	___lwmod@divisor+1,w,c
  2478  0069FA  100A               	iorwf	___lwmod@divisor,w,c
  2479  0069FC  B4D8               	btfsc	status,2,c
  2480  0069FE  D018               	goto	l770
  2481  006A00  0E01               	movlw	1
  2482  006A02  6E0C               	movwf	___lwmod@counter,c
  2483  006A04  D004               	goto	l1285
  2484  006A06                     l1283:
  2485  006A06  90D8               	bcf	status,0,c
  2486  006A08  360A               	rlcf	___lwmod@divisor,f,c
  2487  006A0A  360B               	rlcf	___lwmod@divisor+1,f,c
  2488  006A0C  2A0C               	incf	___lwmod@counter,f,c
  2489  006A0E                     l1285:
  2490  006A0E  AE0B               	btfss	___lwmod@divisor+1,7,c
  2491  006A10  D7FA               	goto	l1283
  2492  006A12                     l1287:
  2493  006A12  500A               	movf	___lwmod@divisor,w,c
  2494  006A14  5C08               	subwf	___lwmod@dividend,w,c
  2495  006A16  500B               	movf	___lwmod@divisor+1,w,c
  2496  006A18  5809               	subwfb	___lwmod@dividend+1,w,c
  2497  006A1A  A0D8               	btfss	status,0,c
  2498  006A1C  D004               	goto	l1291
  2499  006A1E  500A               	movf	___lwmod@divisor,w,c
  2500  006A20  5E08               	subwf	___lwmod@dividend,f,c
  2501  006A22  500B               	movf	___lwmod@divisor+1,w,c
  2502  006A24  5A09               	subwfb	___lwmod@dividend+1,f,c
  2503  006A26                     l1291:
  2504  006A26  90D8               	bcf	status,0,c
  2505  006A28  320B               	rrcf	___lwmod@divisor+1,f,c
  2506  006A2A  320A               	rrcf	___lwmod@divisor,f,c
  2507  006A2C  2E0C               	decfsz	___lwmod@counter,f,c
  2508  006A2E  D7F1               	goto	l1287
  2509  006A30                     l770:
  2510  006A30  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2511  006A34  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2512  006A38  0012               	return	
  2513  006A3A                     __end_of___lwmod:
  2514                           	opt stack 0
  2515                           tblptru	equ	0xFF8
  2516                           tblptrh	equ	0xFF7
  2517                           tblptrl	equ	0xFF6
  2518                           tablat	equ	0xFF5
  2519                           prodh	equ	0xFF4
  2520                           prodl	equ	0xFF3
  2521                           postinc0	equ	0xFEE
  2522                           wreg	equ	0xFE8
  2523                           indf2	equ	0xFDF
  2524                           postinc2	equ	0xFDE
  2525                           postdec2	equ	0xFDD
  2526                           fsr2h	equ	0xFDA
  2527                           fsr2l	equ	0xFD9
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function ___lwdiv *****************
  2531 ;; Defined at:
  2532 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/lwdiv.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  dividend        2    0[COMRAM] unsigned int 
  2535 ;;  divisor         2    2[COMRAM] unsigned int 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  quotient        2    4[COMRAM] unsigned int 
  2538 ;;  counter         1    6[COMRAM] unsigned char 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  2    0[COMRAM] unsigned int 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2548 ;;      Params:         4       0       0       0       0       0       0
  2549 ;;      Locals:         3       0       0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0
  2551 ;;      Totals:         7       0       0       0       0       0       0
  2552 ;;Total ram usage:        7 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_sprintf
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text4
  2562  006A88                     __ptext4:
  2563                           	opt stack 0
  2564  006A88                     ___lwdiv:
  2565                           	opt stack 28
  2566                           
  2567                           ;incstack = 0
  2568  006A88  0E00               	movlw	0
  2569  006A8A  6E06               	movwf	___lwdiv@quotient+1,c
  2570  006A8C  0E00               	movlw	0
  2571  006A8E  6E05               	movwf	___lwdiv@quotient,c
  2572  006A90  5004               	movf	___lwdiv@divisor+1,w,c
  2573  006A92  1003               	iorwf	___lwdiv@divisor,w,c
  2574  006A94  B4D8               	btfsc	status,2,c
  2575  006A96  D01C               	goto	l760
  2576  006A98  0E01               	movlw	1
  2577  006A9A  6E07               	movwf	___lwdiv@counter,c
  2578  006A9C  D004               	goto	l1265
  2579  006A9E                     l1263:
  2580  006A9E  90D8               	bcf	status,0,c
  2581  006AA0  3603               	rlcf	___lwdiv@divisor,f,c
  2582  006AA2  3604               	rlcf	___lwdiv@divisor+1,f,c
  2583  006AA4  2A07               	incf	___lwdiv@counter,f,c
  2584  006AA6                     l1265:
  2585  006AA6  AE04               	btfss	___lwdiv@divisor+1,7,c
  2586  006AA8  D7FA               	goto	l1263
  2587  006AAA                     l1267:
  2588  006AAA  90D8               	bcf	status,0,c
  2589  006AAC  3605               	rlcf	___lwdiv@quotient,f,c
  2590  006AAE  3606               	rlcf	___lwdiv@quotient+1,f,c
  2591  006AB0  5003               	movf	___lwdiv@divisor,w,c
  2592  006AB2  5C01               	subwf	___lwdiv@dividend,w,c
  2593  006AB4  5004               	movf	___lwdiv@divisor+1,w,c
  2594  006AB6  5802               	subwfb	___lwdiv@dividend+1,w,c
  2595  006AB8  A0D8               	btfss	status,0,c
  2596  006ABA  D005               	goto	l1275
  2597  006ABC  5003               	movf	___lwdiv@divisor,w,c
  2598  006ABE  5E01               	subwf	___lwdiv@dividend,f,c
  2599  006AC0  5004               	movf	___lwdiv@divisor+1,w,c
  2600  006AC2  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2601  006AC4  8005               	bsf	___lwdiv@quotient,0,c
  2602  006AC6                     l1275:
  2603  006AC6  90D8               	bcf	status,0,c
  2604  006AC8  3204               	rrcf	___lwdiv@divisor+1,f,c
  2605  006ACA  3203               	rrcf	___lwdiv@divisor,f,c
  2606  006ACC  2E07               	decfsz	___lwdiv@counter,f,c
  2607  006ACE  D7ED               	goto	l1267
  2608  006AD0                     l760:
  2609  006AD0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2610  006AD4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2611  006AD8  0012               	return	
  2612  006ADA                     __end_of___lwdiv:
  2613                           	opt stack 0
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           indf2	equ	0xFDF
  2623                           postinc2	equ	0xFDE
  2624                           postdec2	equ	0xFDD
  2625                           fsr2h	equ	0xFDA
  2626                           fsr2l	equ	0xFD9
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _sendString *****************
  2630 ;; Defined at:
  2631 ;;		line 134 in file "ADC main 25k22.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  string          2    3[COMRAM] PTR unsigned char 
  2634 ;;		 -> data(5), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;		None               void
  2639 ;; Registers used:
  2640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2646 ;;      Params:         2       0       0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0
  2649 ;;      Totals:         2       0       0       0       0       0       0
  2650 ;;Total ram usage:        2 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    2
  2653 ;; This function calls:
  2654 ;;		_putrs1USART
  2655 ;; This function is called by:
  2656 ;;		_sendIntArray
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text5
  2661  006970                     __ptext5:
  2662                           	opt stack 0
  2663  006970                     _sendString:
  2664                           	opt stack 27
  2665  006970                     l88:
  2666  006970  A2AC               	btfss	4012,1,c	;volatile
  2667  006972  D7FE               	goto	l88
  2668                           
  2669                           ;ADC main 25k22.c: 136: putrs1USART(string);
  2670  006974  C005  F003         	movff	sendString@string+1,putrs1USART@data+1
  2671  006978  C004  F002         	movff	sendString@string,putrs1USART@data
  2672  00697C  ECD4  F034         	call	_putrs1USART	;wreg free
  2673  006980  0012               	return	
  2674  006982                     __end_of_sendString:
  2675                           	opt stack 0
  2676                           tblptru	equ	0xFF8
  2677                           tblptrh	equ	0xFF7
  2678                           tblptrl	equ	0xFF6
  2679                           tablat	equ	0xFF5
  2680                           prodh	equ	0xFF4
  2681                           prodl	equ	0xFF3
  2682                           postinc0	equ	0xFEE
  2683                           wreg	equ	0xFE8
  2684                           indf2	equ	0xFDF
  2685                           postinc2	equ	0xFDE
  2686                           postdec2	equ	0xFDD
  2687                           fsr2h	equ	0xFDA
  2688                           fsr2l	equ	0xFD9
  2689                           status	equ	0xFD8
  2690                           
  2691 ;; *************** function _putrs1USART *****************
  2692 ;; Defined at:
  2693 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/USART/u1putrs.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  data            2    1[COMRAM] PTR const unsigned char 
  2696 ;;		 -> data(5), 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;		None               void
  2701 ;; Registers used:
  2702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2708 ;;      Params:         2       0       0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0
  2711 ;;      Totals:         2       0       0       0       0       0       0
  2712 ;;Total ram usage:        2 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    1
  2715 ;; This function calls:
  2716 ;;		_Write1USART
  2717 ;; This function is called by:
  2718 ;;		_sendString
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text6
  2723  0069A8                     __ptext6:
  2724                           	opt stack 0
  2725  0069A8                     _putrs1USART:
  2726                           	opt stack 27
  2727  0069A8                     l223:
  2728  0069A8  A2AC               	btfss	4012,1,c	;volatile
  2729  0069AA  D7FE               	goto	l223
  2730  0069AC  C002  FFD9         	movff	putrs1USART@data,fsr2l
  2731  0069B0  C003  FFDA         	movff	putrs1USART@data+1,fsr2h
  2732  0069B4  50DF               	movf	indf2,w,c
  2733  0069B6  ECAF  F034         	call	_Write1USART
  2734  0069BA  C002  FFD9         	movff	putrs1USART@data,fsr2l
  2735  0069BE  C003  FFDA         	movff	putrs1USART@data+1,fsr2h
  2736  0069C2  4A02               	infsnz	putrs1USART@data,f,c
  2737  0069C4  2A03               	incf	putrs1USART@data+1,f,c
  2738  0069C6  50DF               	movf	indf2,w,c
  2739  0069C8  B4D8               	btfsc	status,2,c
  2740  0069CA  0012               	return	
  2741  0069CC  D7ED               	goto	l223
  2742  0069CE                     __end_of_putrs1USART:
  2743                           	opt stack 0
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           tblptrl	equ	0xFF6
  2747                           tablat	equ	0xFF5
  2748                           prodh	equ	0xFF4
  2749                           prodl	equ	0xFF3
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           indf2	equ	0xFDF
  2753                           postinc2	equ	0xFDE
  2754                           postdec2	equ	0xFDD
  2755                           fsr2h	equ	0xFDA
  2756                           fsr2l	equ	0xFD9
  2757                           status	equ	0xFD8
  2758                           
  2759 ;; *************** function _Write1USART *****************
  2760 ;; Defined at:
  2761 ;;		line 14 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/USART/u1write.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  data            1    wreg     unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  data            1    0[COMRAM] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;		None               void
  2768 ;; Registers used:
  2769 ;;		wreg
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2775 ;;      Params:         0       0       0       0       0       0       0
  2776 ;;      Locals:         1       0       0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0       0       0
  2778 ;;      Totals:         1       0       0       0       0       0       0
  2779 ;;Total ram usage:        1 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_putrs1USART
  2785 ;;		_sendChar
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text7
  2790  00695E                     __ptext7:
  2791                           	opt stack 0
  2792  00695E                     _Write1USART:
  2793                           	opt stack 27
  2794                           
  2795                           ;incstack = 0
  2796                           ;Write1USART@data stored from wreg
  2797  00695E  6E01               	movwf	Write1USART@data,c
  2798  006960  ACAC               	btfss	4012,6,c	;volatile
  2799  006962  D003               	goto	l1251
  2800  006964  90AC               	bcf	4012,0,c	;volatile
  2801  006966  B25C               	btfsc	_USART1_Status,1,c
  2802  006968  80AC               	bsf	4012,0,c	;volatile
  2803  00696A                     l1251:
  2804  00696A  C001  FFAD         	movff	Write1USART@data,4013	;volatile
  2805  00696E  0012               	return	
  2806  006970                     __end_of_Write1USART:
  2807                           	opt stack 0
  2808                           tblptru	equ	0xFF8
  2809                           tblptrh	equ	0xFF7
  2810                           tblptrl	equ	0xFF6
  2811                           tablat	equ	0xFF5
  2812                           prodh	equ	0xFF4
  2813                           prodl	equ	0xFF3
  2814                           postinc0	equ	0xFEE
  2815                           wreg	equ	0xFE8
  2816                           indf2	equ	0xFDF
  2817                           postinc2	equ	0xFDE
  2818                           postdec2	equ	0xFDD
  2819                           fsr2h	equ	0xFDA
  2820                           fsr2l	equ	0xFD9
  2821                           status	equ	0xFD8
  2822                           
  2823 ;; *************** function _fix_fft *****************
  2824 ;; Defined at:
  2825 ;;		line 52 in file "fft.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  fr              2   12[COMRAM] PTR short 
  2828 ;;		 -> realNumbers(128), 
  2829 ;;  fi              2   14[COMRAM] PTR short 
  2830 ;;		 -> imaginaryNumbers(128), 
  2831 ;;  m               2   16[COMRAM] short 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  c               4   72[COMRAM] long 
  2834 ;;  b               2   54[COMRAM] short 
  2835 ;;  j               4   68[COMRAM] long 
  2836 ;;  l               4   64[COMRAM] long 
  2837 ;;  mr              4   60[COMRAM] long 
  2838 ;;  i               4   56[COMRAM] long 
  2839 ;;  n               4   46[COMRAM] long 
  2840 ;;  istep           4   34[COMRAM] long 
  2841 ;;  nn              4   30[COMRAM] long 
  2842 ;;  k               4   26[COMRAM] long 
  2843 ;;  shift           4    0        long 
  2844 ;;  ti              2   52[COMRAM] short 
  2845 ;;  tr              2   50[COMRAM] short 
  2846 ;;  wi              2   44[COMRAM] short 
  2847 ;;  wr              2   42[COMRAM] short 
  2848 ;;  qi              2   40[COMRAM] short 
  2849 ;;  qr              2   38[COMRAM] short 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;		None               void
  2852 ;; Registers used:
  2853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2859 ;;      Params:         6       0       0       0       0       0       0
  2860 ;;      Locals:        50       0       0       0       0       0       0
  2861 ;;      Temps:          8       0       0       0       0       0       0
  2862 ;;      Totals:        64       0       0       0       0       0       0
  2863 ;;Total ram usage:       64 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    1
  2866 ;; This function calls:
  2867 ;;		___lmul
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text8
  2874  007264                     __ptext8:
  2875                           	opt stack 0
  2876  007264                     _fix_fft:
  2877                           	opt stack 29
  2878                           
  2879                           ;fft.c: 54: long int mr = 0, nn, i, j, l, k, istep, n, shift;
  2880                           
  2881                           ;incstack = 0
  2882  007264  0E00               	movlw	0
  2883  007266  6E3D               	movwf	fix_fft@mr,c
  2884  007268  0E00               	movlw	0
  2885  00726A  6E3E               	movwf	fix_fft@mr+1,c
  2886  00726C  0E00               	movlw	0
  2887  00726E  6E3F               	movwf	fix_fft@mr+2,c
  2888  007270  0E00               	movlw	0
  2889  007272  6E40               	movwf	fix_fft@mr+3,c
  2890                           
  2891                           ;fft.c: 55: short qr, qi, tr, ti, wr, wi;
  2892                           ;fft.c: 57: n = 1 << m;
  2893  007274  C011  F013         	movff	fix_fft@m,??_fix_fft
  2894  007278  0E01               	movlw	1
  2895  00727A  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2896  00727C  6A15               	clrf	(??_fix_fft+2)& (0+255),c
  2897  00727E  2A13               	incf	??_fix_fft,f,c
  2898  007280  D003               	goto	u914
  2899  007282                     u915:
  2900  007282  90D8               	bcf	status,0,c
  2901  007284  3614               	rlcf	??_fix_fft+1,f,c
  2902  007286  3615               	rlcf	??_fix_fft+2,f,c
  2903  007288                     u914:
  2904  007288  2E13               	decfsz	??_fix_fft,f,c
  2905  00728A  D7FB               	goto	u915
  2906  00728C  C014  F02F         	movff	??_fix_fft+1,fix_fft@n
  2907  007290  C015  F030         	movff	??_fix_fft+2,fix_fft@n+1
  2908  007294  0E00               	movlw	0
  2909  007296  BE30               	btfsc	fix_fft@n+1,7,c
  2910  007298  0EFF               	movlw	-1
  2911  00729A  6E31               	movwf	fix_fft@n+2,c
  2912  00729C  6E32               	movwf	fix_fft@n+3,c
  2913                           
  2914                           ;fft.c: 58: nn = n - 1;
  2915  00729E  0EFF               	movlw	255
  2916  0072A0  242F               	addwf	fix_fft@n,w,c
  2917  0072A2  6E1F               	movwf	fix_fft@nn,c
  2918  0072A4  0EFF               	movlw	255
  2919  0072A6  2030               	addwfc	fix_fft@n+1,w,c
  2920  0072A8  6E20               	movwf	fix_fft@nn+1,c
  2921  0072AA  0EFF               	movlw	255
  2922  0072AC  2031               	addwfc	fix_fft@n+2,w,c
  2923  0072AE  6E21               	movwf	fix_fft@nn+2,c
  2924  0072B0  0EFF               	movlw	255
  2925  0072B2  2032               	addwfc	fix_fft@n+3,w,c
  2926  0072B4  6E22               	movwf	fix_fft@nn+3,c
  2927                           
  2928                           ;fft.c: 64: for (m=1; m<=nn; ++m)
  2929  0072B6  0E00               	movlw	0
  2930  0072B8  6E12               	movwf	fix_fft@m+1,c
  2931  0072BA  0E01               	movlw	1
  2932  0072BC  6E11               	movwf	fix_fft@m,c
  2933  0072BE  D0C4               	goto	l1455
  2934  0072C0                     l109:
  2935                           
  2936                           ;fft.c: 65: {
  2937                           ;fft.c: 66: l = n;
  2938  0072C0  C02F  F041         	movff	fix_fft@n,fix_fft@l
  2939  0072C4  C030  F042         	movff	fix_fft@n+1,fix_fft@l+1
  2940  0072C8  C031  F043         	movff	fix_fft@n+2,fix_fft@l+2
  2941  0072CC  C032  F044         	movff	fix_fft@n+3,fix_fft@l+3
  2942  0072D0                     l1437:
  2943                           
  2944                           ;fft.c: 68: {
  2945                           ;fft.c: 69: l >>= 1;
  2946  0072D0  3444               	rlcf	fix_fft@l+3,w,c
  2947  0072D2  3244               	rrcf	fix_fft@l+3,f,c
  2948  0072D4  3243               	rrcf	fix_fft@l+2,f,c
  2949  0072D6  3242               	rrcf	fix_fft@l+1,f,c
  2950  0072D8  3241               	rrcf	fix_fft@l,f,c
  2951                           
  2952                           ;fft.c: 70: } while (mr+l > nn);
  2953  0072DA  5041               	movf	fix_fft@l,w,c
  2954  0072DC  243D               	addwf	fix_fft@mr,w,c
  2955  0072DE  6E13               	movwf	??_fix_fft& (0+255),c
  2956  0072E0  5042               	movf	fix_fft@l+1,w,c
  2957  0072E2  203E               	addwfc	fix_fft@mr+1,w,c
  2958  0072E4  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2959  0072E6  5043               	movf	fix_fft@l+2,w,c
  2960  0072E8  203F               	addwfc	fix_fft@mr+2,w,c
  2961  0072EA  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2962  0072EC  5044               	movf	fix_fft@l+3,w,c
  2963  0072EE  2040               	addwfc	fix_fft@mr+3,w,c
  2964  0072F0  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2965  0072F2  5022               	movf	fix_fft@nn+3,w,c
  2966  0072F4  0A80               	xorlw	128
  2967  0072F6  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2968  0072F8  5013               	movf	??_fix_fft,w,c
  2969  0072FA  5C1F               	subwf	fix_fft@nn,w,c
  2970  0072FC  5014               	movf	??_fix_fft+1,w,c
  2971  0072FE  5820               	subwfb	fix_fft@nn+1,w,c
  2972  007300  5015               	movf	??_fix_fft+2,w,c
  2973  007302  5821               	subwfb	fix_fft@nn+2,w,c
  2974  007304  5016               	movf	??_fix_fft+3,w,c
  2975  007306  0A80               	xorlw	128
  2976  007308  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  2977  00730A  A0D8               	btfss	status,0,c
  2978  00730C  D7E1               	goto	l1437
  2979                           
  2980                           ;fft.c: 72: mr = (mr & (l-1)) + l;
  2981  00730E  0EFF               	movlw	255
  2982  007310  2441               	addwf	fix_fft@l,w,c
  2983  007312  6E13               	movwf	??_fix_fft& (0+255),c
  2984  007314  0EFF               	movlw	255
  2985  007316  2042               	addwfc	fix_fft@l+1,w,c
  2986  007318  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  2987  00731A  0EFF               	movlw	255
  2988  00731C  2043               	addwfc	fix_fft@l+2,w,c
  2989  00731E  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  2990  007320  0EFF               	movlw	255
  2991  007322  2044               	addwfc	fix_fft@l+3,w,c
  2992  007324  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  2993  007326  503D               	movf	fix_fft@mr,w,c
  2994  007328  1413               	andwf	??_fix_fft,w,c
  2995  00732A  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  2996  00732C  503E               	movf	fix_fft@mr+1,w,c
  2997  00732E  1414               	andwf	??_fix_fft+1,w,c
  2998  007330  6E18               	movwf	(??_fix_fft+5)& (0+255),c
  2999  007332  503F               	movf	fix_fft@mr+2,w,c
  3000  007334  1415               	andwf	??_fix_fft+2,w,c
  3001  007336  6E19               	movwf	(??_fix_fft+6)& (0+255),c
  3002  007338  5040               	movf	fix_fft@mr+3,w,c
  3003  00733A  1416               	andwf	??_fix_fft+3,w,c
  3004  00733C  6E1A               	movwf	(??_fix_fft+7)& (0+255),c
  3005  00733E  5041               	movf	fix_fft@l,w,c
  3006  007340  2417               	addwf	??_fix_fft+4,w,c
  3007  007342  6E3D               	movwf	fix_fft@mr,c
  3008  007344  5042               	movf	fix_fft@l+1,w,c
  3009  007346  2018               	addwfc	??_fix_fft+5,w,c
  3010  007348  6E3E               	movwf	fix_fft@mr+1,c
  3011  00734A  5043               	movf	fix_fft@l+2,w,c
  3012  00734C  2019               	addwfc	??_fix_fft+6,w,c
  3013  00734E  6E3F               	movwf	fix_fft@mr+2,c
  3014  007350  5044               	movf	fix_fft@l+3,w,c
  3015  007352  201A               	addwfc	??_fix_fft+7,w,c
  3016  007354  6E40               	movwf	fix_fft@mr+3,c
  3017                           
  3018                           ;fft.c: 73: if (mr <= m) continue;
  3019  007356  C011  F013         	movff	fix_fft@m,??_fix_fft
  3020  00735A  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  3021  00735E  0E00               	movlw	0
  3022  007360  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  3023  007362  0EFF               	movlw	255
  3024  007364  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  3025  007366  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  3026  007368  5016               	movf	??_fix_fft+3,w,c
  3027  00736A  0A80               	xorlw	128
  3028  00736C  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  3029  00736E  503D               	movf	fix_fft@mr,w,c
  3030  007370  5C13               	subwf	??_fix_fft,w,c
  3031  007372  503E               	movf	fix_fft@mr+1,w,c
  3032  007374  5814               	subwfb	??_fix_fft+1,w,c
  3033  007376  503F               	movf	fix_fft@mr+2,w,c
  3034  007378  5815               	subwfb	??_fix_fft+2,w,c
  3035  00737A  5040               	movf	fix_fft@mr+3,w,c
  3036  00737C  0A80               	xorlw	128
  3037  00737E  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  3038  007380  B0D8               	btfsc	status,0,c
  3039  007382  D060               	goto	l1453
  3040                           
  3041                           ;fft.c: 75: tr = fr[m];
  3042  007384  90D8               	bcf	status,0,c
  3043  007386  3411               	rlcf	fix_fft@m,w,c
  3044  007388  6ED9               	movwf	fsr2l,c
  3045  00738A  3412               	rlcf	fix_fft@m+1,w,c
  3046  00738C  6EDA               	movwf	fsr2h,c
  3047  00738E  500D               	movf	fix_fft@fr,w,c
  3048  007390  26D9               	addwf	fsr2l,f,c
  3049  007392  500E               	movf	fix_fft@fr+1,w,c
  3050  007394  22DA               	addwfc	fsr2h,f,c
  3051  007396  CFDE F033          	movff	postinc2,fix_fft@tr
  3052  00739A  CFDD F034          	movff	postdec2,fix_fft@tr+1
  3053                           
  3054                           ;fft.c: 76: fr[m] = fr[mr];
  3055  00739E  90D8               	bcf	status,0,c
  3056  0073A0  343D               	rlcf	fix_fft@mr,w,c
  3057  0073A2  6ED9               	movwf	fsr2l,c
  3058  0073A4  343E               	rlcf	fix_fft@mr+1,w,c
  3059  0073A6  6EDA               	movwf	fsr2h,c
  3060  0073A8  500D               	movf	fix_fft@fr,w,c
  3061  0073AA  26D9               	addwf	fsr2l,f,c
  3062  0073AC  500E               	movf	fix_fft@fr+1,w,c
  3063  0073AE  22DA               	addwfc	fsr2h,f,c
  3064  0073B0  90D8               	bcf	status,0,c
  3065  0073B2  3411               	rlcf	fix_fft@m,w,c
  3066  0073B4  6EE1               	movwf	fsr1l,c
  3067  0073B6  3412               	rlcf	fix_fft@m+1,w,c
  3068  0073B8  6EE2               	movwf	fsr1h,c
  3069  0073BA  500D               	movf	fix_fft@fr,w,c
  3070  0073BC  26E1               	addwf	fsr1l,f,c
  3071  0073BE  500E               	movf	fix_fft@fr+1,w,c
  3072  0073C0  22E2               	addwfc	fsr1h,f,c
  3073  0073C2  CFDE FFE6          	movff	postinc2,postinc1
  3074  0073C6  CFDD FFE5          	movff	postdec2,postdec1
  3075                           
  3076                           ;fft.c: 77: fr[mr] = tr;
  3077  0073CA  90D8               	bcf	status,0,c
  3078  0073CC  343D               	rlcf	fix_fft@mr,w,c
  3079  0073CE  6ED9               	movwf	fsr2l,c
  3080  0073D0  343E               	rlcf	fix_fft@mr+1,w,c
  3081  0073D2  6EDA               	movwf	fsr2h,c
  3082  0073D4  500D               	movf	fix_fft@fr,w,c
  3083  0073D6  26D9               	addwf	fsr2l,f,c
  3084  0073D8  500E               	movf	fix_fft@fr+1,w,c
  3085  0073DA  22DA               	addwfc	fsr2h,f,c
  3086  0073DC  C033  FFDE         	movff	fix_fft@tr,postinc2
  3087  0073E0  C034  FFDD         	movff	fix_fft@tr+1,postdec2
  3088                           
  3089                           ;fft.c: 78: ti = fi[m];
  3090  0073E4  90D8               	bcf	status,0,c
  3091  0073E6  3411               	rlcf	fix_fft@m,w,c
  3092  0073E8  6ED9               	movwf	fsr2l,c
  3093  0073EA  3412               	rlcf	fix_fft@m+1,w,c
  3094  0073EC  6EDA               	movwf	fsr2h,c
  3095  0073EE  500F               	movf	fix_fft@fi,w,c
  3096  0073F0  26D9               	addwf	fsr2l,f,c
  3097  0073F2  5010               	movf	fix_fft@fi+1,w,c
  3098  0073F4  22DA               	addwfc	fsr2h,f,c
  3099  0073F6  CFDE F035          	movff	postinc2,fix_fft@ti
  3100  0073FA  CFDD F036          	movff	postdec2,fix_fft@ti+1
  3101                           
  3102                           ;fft.c: 79: fi[m] = fi[mr];
  3103  0073FE  90D8               	bcf	status,0,c
  3104  007400  343D               	rlcf	fix_fft@mr,w,c
  3105  007402  6ED9               	movwf	fsr2l,c
  3106  007404  343E               	rlcf	fix_fft@mr+1,w,c
  3107  007406  6EDA               	movwf	fsr2h,c
  3108  007408  500F               	movf	fix_fft@fi,w,c
  3109  00740A  26D9               	addwf	fsr2l,f,c
  3110  00740C  5010               	movf	fix_fft@fi+1,w,c
  3111  00740E  22DA               	addwfc	fsr2h,f,c
  3112  007410  90D8               	bcf	status,0,c
  3113  007412  3411               	rlcf	fix_fft@m,w,c
  3114  007414  6EE1               	movwf	fsr1l,c
  3115  007416  3412               	rlcf	fix_fft@m+1,w,c
  3116  007418  6EE2               	movwf	fsr1h,c
  3117  00741A  500F               	movf	fix_fft@fi,w,c
  3118  00741C  26E1               	addwf	fsr1l,f,c
  3119  00741E  5010               	movf	fix_fft@fi+1,w,c
  3120  007420  22E2               	addwfc	fsr1h,f,c
  3121  007422  CFDE FFE6          	movff	postinc2,postinc1
  3122  007426  CFDD FFE5          	movff	postdec2,postdec1
  3123                           
  3124                           ;fft.c: 80: fi[mr] = ti;
  3125  00742A  90D8               	bcf	status,0,c
  3126  00742C  343D               	rlcf	fix_fft@mr,w,c
  3127  00742E  6ED9               	movwf	fsr2l,c
  3128  007430  343E               	rlcf	fix_fft@mr+1,w,c
  3129  007432  6EDA               	movwf	fsr2h,c
  3130  007434  500F               	movf	fix_fft@fi,w,c
  3131  007436  26D9               	addwf	fsr2l,f,c
  3132  007438  5010               	movf	fix_fft@fi+1,w,c
  3133  00743A  22DA               	addwfc	fsr2h,f,c
  3134  00743C  C035  FFDE         	movff	fix_fft@ti,postinc2
  3135  007440  C036  FFDD         	movff	fix_fft@ti+1,postdec2
  3136  007444                     l1453:
  3137  007444  4A11               	infsnz	fix_fft@m,f,c
  3138  007446  2A12               	incf	fix_fft@m+1,f,c
  3139  007448                     l1455:
  3140  007448  C011  F013         	movff	fix_fft@m,??_fix_fft
  3141  00744C  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  3142  007450  0E00               	movlw	0
  3143  007452  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  3144  007454  0EFF               	movlw	255
  3145  007456  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  3146  007458  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  3147  00745A  5022               	movf	fix_fft@nn+3,w,c
  3148  00745C  0A80               	xorlw	128
  3149  00745E  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  3150  007460  5013               	movf	??_fix_fft,w,c
  3151  007462  5C1F               	subwf	fix_fft@nn,w,c
  3152  007464  5014               	movf	??_fix_fft+1,w,c
  3153  007466  5820               	subwfb	fix_fft@nn+1,w,c
  3154  007468  5015               	movf	??_fix_fft+2,w,c
  3155  00746A  5821               	subwfb	fix_fft@nn+2,w,c
  3156  00746C  5016               	movf	??_fix_fft+3,w,c
  3157  00746E  0A80               	xorlw	128
  3158  007470  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  3159  007472  B0D8               	btfsc	status,0,c
  3160  007474  D725               	goto	l109
  3161                           
  3162                           ;fft.c: 81: }
  3163                           ;fft.c: 83: l = 1;
  3164  007476  0E01               	movlw	1
  3165  007478  6E41               	movwf	fix_fft@l,c
  3166  00747A  0E00               	movlw	0
  3167  00747C  6E42               	movwf	fix_fft@l+1,c
  3168  00747E  0E00               	movlw	0
  3169  007480  6E43               	movwf	fix_fft@l+2,c
  3170  007482  0E00               	movlw	0
  3171  007484  6E44               	movwf	fix_fft@l+3,c
  3172                           
  3173                           ;fft.c: 84: k = 10-1;
  3174  007486  0E09               	movlw	9
  3175  007488  6E1B               	movwf	fix_fft@k,c
  3176  00748A  0E00               	movlw	0
  3177  00748C  6E1C               	movwf	fix_fft@k+1,c
  3178  00748E  0E00               	movlw	0
  3179  007490  6E1D               	movwf	fix_fft@k+2,c
  3180  007492  0E00               	movlw	0
  3181  007494  6E1E               	movwf	fix_fft@k+3,c
  3182                           
  3183                           ;fft.c: 86: while (l < n)
  3184  007496  D29D               	goto	l115
  3185  007498                     l1459:
  3186                           
  3187                           ;fft.c: 87: {
  3188                           ;fft.c: 100: long int c;
  3189                           ;fft.c: 101: short b;
  3190                           ;fft.c: 103: istep = l << 1;
  3191  007498  90D8               	bcf	status,0,c
  3192  00749A  3441               	rlcf	fix_fft@l,w,c
  3193  00749C  6E23               	movwf	fix_fft@istep,c
  3194  00749E  3442               	rlcf	fix_fft@l+1,w,c
  3195  0074A0  6E24               	movwf	fix_fft@istep+1,c
  3196  0074A2  3443               	rlcf	fix_fft@l+2,w,c
  3197  0074A4  6E25               	movwf	fix_fft@istep+2,c
  3198  0074A6  3444               	rlcf	fix_fft@l+3,w,c
  3199  0074A8  6E26               	movwf	fix_fft@istep+3,c
  3200                           
  3201                           ;fft.c: 104: for (m=0; m<l; ++m)
  3202  0074AA  0E00               	movlw	0
  3203  0074AC  6E12               	movwf	fix_fft@m+1,c
  3204  0074AE  0E00               	movlw	0
  3205  0074B0  6E11               	movwf	fix_fft@m,c
  3206  0074B2  D268               	goto	l1519
  3207  0074B4                     l1463:
  3208                           
  3209                           ;fft.c: 105: {
  3210                           ;fft.c: 106: j = m << k;
  3211  0074B4  C01B  F013         	movff	fix_fft@k,??_fix_fft
  3212  0074B8  C011  F014         	movff	fix_fft@m,??_fix_fft+1
  3213  0074BC  C012  F015         	movff	fix_fft@m+1,??_fix_fft+2
  3214  0074C0  2A13               	incf	??_fix_fft,f,c
  3215  0074C2  D003               	goto	u954
  3216  0074C4                     u955:
  3217  0074C4  90D8               	bcf	status,0,c
  3218  0074C6  3614               	rlcf	??_fix_fft+1,f,c
  3219  0074C8  3615               	rlcf	??_fix_fft+2,f,c
  3220  0074CA                     u954:
  3221  0074CA  2E13               	decfsz	??_fix_fft,f,c
  3222  0074CC  D7FB               	goto	u955
  3223  0074CE  C014  F045         	movff	??_fix_fft+1,fix_fft@j
  3224  0074D2  C015  F046         	movff	??_fix_fft+2,fix_fft@j+1
  3225  0074D6  0E00               	movlw	0
  3226  0074D8  BE46               	btfsc	fix_fft@j+1,7,c
  3227  0074DA  0EFF               	movlw	-1
  3228  0074DC  6E47               	movwf	fix_fft@j+2,c
  3229  0074DE  6E48               	movwf	fix_fft@j+3,c
  3230                           
  3231                           ;fft.c: 108: wr = Sinewave[j+1024/4];
  3232  0074E0  0E00               	movlw	0
  3233  0074E2  6E13               	movwf	??_fix_fft& (0+255),c
  3234  0074E4  0E02               	movlw	2
  3235  0074E6  6E14               	movwf	(??_fix_fft+1)& (0+255),c
  3236  0074E8  C045  F015         	movff	fix_fft@j,??_fix_fft+2
  3237  0074EC  C046  F016         	movff	fix_fft@j+1,??_fix_fft+3
  3238  0074F0  90D8               	bcf	status,0,c
  3239  0074F2  3615               	rlcf	??_fix_fft+2,f,c
  3240  0074F4  3616               	rlcf	??_fix_fft+3,f,c
  3241  0074F6  5013               	movf	??_fix_fft,w,c
  3242  0074F8  2615               	addwf	??_fix_fft+2,f,c
  3243  0074FA  5014               	movf	??_fix_fft+1,w,c
  3244  0074FC  2216               	addwfc	??_fix_fft+3,f,c
  3245  0074FE  0EF1               	movlw	low _Sinewave
  3246  007500  2415               	addwf	??_fix_fft+2,w,c
  3247  007502  6EF6               	movwf	tblptrl,c
  3248  007504  0E79               	movlw	high _Sinewave
  3249  007506  2016               	addwfc	??_fix_fft+3,w,c
  3250  007508  6EF7               	movwf	tblptrh,c
  3251  00750A                     	if	0	;There are less than 3 active tblptr bytes
  3252  00750A                     	endif
  3253  00750A  0009               	tblrd		*+
  3254  00750C  CFF5 F02B          	movff	tablat,fix_fft@wr
  3255  007510  000A               	tblrd		*-
  3256  007512  CFF5 F02C          	movff	tablat,fix_fft@wr+1
  3257                           
  3258                           ;fft.c: 109: wi = -Sinewave[j];
  3259  007516  C045  F013         	movff	fix_fft@j,??_fix_fft
  3260  00751A  C046  F014         	movff	fix_fft@j+1,??_fix_fft+1
  3261  00751E  90D8               	bcf	status,0,c
  3262  007520  3613               	rlcf	??_fix_fft,f,c
  3263  007522  3614               	rlcf	??_fix_fft+1,f,c
  3264  007524  0EF1               	movlw	low _Sinewave
  3265  007526  2413               	addwf	??_fix_fft,w,c
  3266  007528  6EF6               	movwf	tblptrl,c
  3267  00752A  0E79               	movlw	high _Sinewave
  3268  00752C  2014               	addwfc	??_fix_fft+1,w,c
  3269  00752E  6EF7               	movwf	tblptrh,c
  3270  007530                     	if	0	;There are less than 3 active tblptr bytes
  3271  007530                     	endif
  3272  007530  0009               	tblrd		*+
  3273  007532  CFF5 F015          	movff	tablat,??_fix_fft+2
  3274  007536  0009               	tblrd		*+
  3275  007538  CFF5 F016          	movff	tablat,??_fix_fft+3
  3276  00753C  1E15               	comf	??_fix_fft+2,f,c
  3277  00753E  1E16               	comf	??_fix_fft+3,f,c
  3278  007540  4A15               	infsnz	??_fix_fft+2,f,c
  3279  007542  2A16               	incf	??_fix_fft+3,f,c
  3280  007544  C015  F02D         	movff	??_fix_fft+2,fix_fft@wi
  3281  007548  C016  F02E         	movff	??_fix_fft+3,fix_fft@wi+1
  3282                           
  3283                           ;fft.c: 111: wr >>= 1;
  3284  00754C  342C               	rlcf	fix_fft@wr+1,w,c
  3285  00754E  322C               	rrcf	fix_fft@wr+1,f,c
  3286  007550  322B               	rrcf	fix_fft@wr,f,c
  3287                           
  3288                           ;fft.c: 112: wi >>= 1;
  3289  007552  342E               	rlcf	fix_fft@wi+1,w,c
  3290  007554  322E               	rrcf	fix_fft@wi+1,f,c
  3291  007556  322D               	rrcf	fix_fft@wi,f,c
  3292                           
  3293                           ;fft.c: 114: for (i=m; i<n; i+=istep)
  3294  007558  C011  F039         	movff	fix_fft@m,fix_fft@i
  3295  00755C  C012  F03A         	movff	fix_fft@m+1,fix_fft@i+1
  3296  007560  0E00               	movlw	0
  3297  007562  BE3A               	btfsc	fix_fft@i+1,7,c
  3298  007564  0EFF               	movlw	-1
  3299  007566  6E3B               	movwf	fix_fft@i+2,c
  3300  007568  6E3C               	movwf	fix_fft@i+3,c
  3301  00756A  D1FC               	goto	l1515
  3302  00756C                     l1471:
  3303                           
  3304                           ;fft.c: 115: {
  3305                           ;fft.c: 116: j = i + l;
  3306  00756C  5041               	movf	fix_fft@l,w,c
  3307  00756E  2439               	addwf	fix_fft@i,w,c
  3308  007570  6E45               	movwf	fix_fft@j,c
  3309  007572  5042               	movf	fix_fft@l+1,w,c
  3310  007574  203A               	addwfc	fix_fft@i+1,w,c
  3311  007576  6E46               	movwf	fix_fft@j+1,c
  3312  007578  5043               	movf	fix_fft@l+2,w,c
  3313  00757A  203B               	addwfc	fix_fft@i+2,w,c
  3314  00757C  6E47               	movwf	fix_fft@j+2,c
  3315  00757E  5044               	movf	fix_fft@l+3,w,c
  3316  007580  203C               	addwfc	fix_fft@i+3,w,c
  3317  007582  6E48               	movwf	fix_fft@j+3,c
  3318                           
  3319                           ;fft.c: 124: c = ((long int)wr * (long int)fr[j]);
  3320  007584  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  3321  007588  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  3322  00758C  0E00               	movlw	0
  3323  00758E  BE02               	btfsc	___lmul@multiplier+1,7,c
  3324  007590  0EFF               	movlw	-1
  3325  007592  6E03               	movwf	___lmul@multiplier+2,c
  3326  007594  6E04               	movwf	___lmul@multiplier+3,c
  3327  007596  90D8               	bcf	status,0,c
  3328  007598  3445               	rlcf	fix_fft@j,w,c
  3329  00759A  6ED9               	movwf	fsr2l,c
  3330  00759C  3446               	rlcf	fix_fft@j+1,w,c
  3331  00759E  6EDA               	movwf	fsr2h,c
  3332  0075A0  500D               	movf	fix_fft@fr,w,c
  3333  0075A2  26D9               	addwf	fsr2l,f,c
  3334  0075A4  500E               	movf	fix_fft@fr+1,w,c
  3335  0075A6  22DA               	addwfc	fsr2h,f,c
  3336  0075A8  CFDE F005          	movff	postinc2,___lmul@multiplicand
  3337  0075AC  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  3338  0075B0  0E00               	movlw	0
  3339  0075B2  BE06               	btfsc	___lmul@multiplicand+1,7,c
  3340  0075B4  0EFF               	movlw	-1
  3341  0075B6  6E07               	movwf	___lmul@multiplicand+2,c
  3342  0075B8  6E08               	movwf	___lmul@multiplicand+3,c
  3343  0075BA  EC6D  F035         	call	___lmul	;wreg free
  3344  0075BE  C001  F049         	movff	?___lmul,fix_fft@c
  3345  0075C2  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  3346  0075C6  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  3347  0075CA  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  3348                           
  3349                           ;fft.c: 125: c = c >> 14;
  3350  0075CE  0E0E               	movlw	14
  3351  0075D0  6E13               	movwf	??_fix_fft& (0+255),c
  3352  0075D2  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  3353  0075D6  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  3354  0075DA  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  3355  0075DE  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  3356  0075E2                     u965:
  3357  0075E2  6613               	tstfsz	??_fix_fft,c
  3358  0075E4  D001               	goto	u966
  3359  0075E6  D007               	goto	u967
  3360  0075E8                     u966:
  3361  0075E8  3417               	rlcf	??_fix_fft+4,w,c
  3362  0075EA  3217               	rrcf	??_fix_fft+4,f,c
  3363  0075EC  3216               	rrcf	??_fix_fft+3,f,c
  3364  0075EE  3215               	rrcf	??_fix_fft+2,f,c
  3365  0075F0  3214               	rrcf	??_fix_fft+1,f,c
  3366  0075F2  2E13               	decfsz	??_fix_fft,f,c
  3367  0075F4  D7F6               	goto	u965
  3368  0075F6                     u967:
  3369  0075F6  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  3370  0075FA  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  3371  0075FE  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  3372  007602  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  3373                           
  3374                           ;fft.c: 126: b = c & 0x01;
  3375  007606  0E01               	movlw	1
  3376  007608  1449               	andwf	fix_fft@c,w,c
  3377  00760A  6E37               	movwf	fix_fft@b,c
  3378  00760C  6A38               	clrf	fix_fft@b+1,c
  3379                           
  3380                           ;fft.c: 127: tr = (c >> 1) + b;
  3381  00760E  C049  F013         	movff	fix_fft@c,??_fix_fft
  3382  007612  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  3383  007616  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  3384  00761A  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  3385  00761E  3416               	rlcf	??_fix_fft+3,w,c
  3386  007620  3216               	rrcf	??_fix_fft+3,f,c
  3387  007622  3215               	rrcf	??_fix_fft+2,f,c
  3388  007624  3214               	rrcf	??_fix_fft+1,f,c
  3389  007626  3213               	rrcf	??_fix_fft,f,c
  3390  007628  5037               	movf	fix_fft@b,w,c
  3391  00762A  2413               	addwf	??_fix_fft,w,c
  3392  00762C  6E33               	movwf	fix_fft@tr,c
  3393  00762E  5038               	movf	fix_fft@b+1,w,c
  3394  007630  2014               	addwfc	??_fix_fft+1,w,c
  3395  007632  6E34               	movwf	fix_fft@tr+1,c
  3396                           
  3397                           ;fft.c: 129: c = ((long int)wi * (long int)fi[j]);
  3398  007634  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  3399  007638  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  3400  00763C  0E00               	movlw	0
  3401  00763E  BE02               	btfsc	___lmul@multiplier+1,7,c
  3402  007640  0EFF               	movlw	-1
  3403  007642  6E03               	movwf	___lmul@multiplier+2,c
  3404  007644  6E04               	movwf	___lmul@multiplier+3,c
  3405  007646  90D8               	bcf	status,0,c
  3406  007648  3445               	rlcf	fix_fft@j,w,c
  3407  00764A  6ED9               	movwf	fsr2l,c
  3408  00764C  3446               	rlcf	fix_fft@j+1,w,c
  3409  00764E  6EDA               	movwf	fsr2h,c
  3410  007650  500F               	movf	fix_fft@fi,w,c
  3411  007652  26D9               	addwf	fsr2l,f,c
  3412  007654  5010               	movf	fix_fft@fi+1,w,c
  3413  007656  22DA               	addwfc	fsr2h,f,c
  3414  007658  CFDE F005          	movff	postinc2,___lmul@multiplicand
  3415  00765C  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  3416  007660  0E00               	movlw	0
  3417  007662  BE06               	btfsc	___lmul@multiplicand+1,7,c
  3418  007664  0EFF               	movlw	-1
  3419  007666  6E07               	movwf	___lmul@multiplicand+2,c
  3420  007668  6E08               	movwf	___lmul@multiplicand+3,c
  3421  00766A  EC6D  F035         	call	___lmul	;wreg free
  3422  00766E  C001  F049         	movff	?___lmul,fix_fft@c
  3423  007672  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  3424  007676  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  3425  00767A  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  3426                           
  3427                           ;fft.c: 130: c = c >> 14;
  3428  00767E  0E0E               	movlw	14
  3429  007680  6E13               	movwf	??_fix_fft& (0+255),c
  3430  007682  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  3431  007686  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  3432  00768A  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  3433  00768E  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  3434  007692                     u975:
  3435  007692  6613               	tstfsz	??_fix_fft,c
  3436  007694  D001               	goto	u976
  3437  007696  D007               	goto	u977
  3438  007698                     u976:
  3439  007698  3417               	rlcf	??_fix_fft+4,w,c
  3440  00769A  3217               	rrcf	??_fix_fft+4,f,c
  3441  00769C  3216               	rrcf	??_fix_fft+3,f,c
  3442  00769E  3215               	rrcf	??_fix_fft+2,f,c
  3443  0076A0  3214               	rrcf	??_fix_fft+1,f,c
  3444  0076A2  2E13               	decfsz	??_fix_fft,f,c
  3445  0076A4  D7F6               	goto	u975
  3446  0076A6                     u977:
  3447  0076A6  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  3448  0076AA  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  3449  0076AE  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  3450  0076B2  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  3451                           
  3452                           ;fft.c: 131: b = c & 0x01;
  3453  0076B6  0E01               	movlw	1
  3454  0076B8  1449               	andwf	fix_fft@c,w,c
  3455  0076BA  6E37               	movwf	fix_fft@b,c
  3456  0076BC  6A38               	clrf	fix_fft@b+1,c
  3457                           
  3458                           ;fft.c: 132: tr = tr - ((c >> 1) + b);
  3459  0076BE  C049  F013         	movff	fix_fft@c,??_fix_fft
  3460  0076C2  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  3461  0076C6  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  3462  0076CA  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  3463  0076CE  3416               	rlcf	??_fix_fft+3,w,c
  3464  0076D0  3216               	rrcf	??_fix_fft+3,f,c
  3465  0076D2  3215               	rrcf	??_fix_fft+2,f,c
  3466  0076D4  3214               	rrcf	??_fix_fft+1,f,c
  3467  0076D6  3213               	rrcf	??_fix_fft,f,c
  3468  0076D8  5037               	movf	fix_fft@b,w,c
  3469  0076DA  2613               	addwf	??_fix_fft,f,c
  3470  0076DC  5038               	movf	fix_fft@b+1,w,c
  3471  0076DE  2214               	addwfc	??_fix_fft+1,f,c
  3472  0076E0  1E13               	comf	??_fix_fft,f,c
  3473  0076E2  1E14               	comf	??_fix_fft+1,f,c
  3474  0076E4  4A13               	infsnz	??_fix_fft,f,c
  3475  0076E6  2A14               	incf	??_fix_fft+1,f,c
  3476  0076E8  5033               	movf	fix_fft@tr,w,c
  3477  0076EA  2413               	addwf	??_fix_fft,w,c
  3478  0076EC  6E33               	movwf	fix_fft@tr,c
  3479  0076EE  5034               	movf	fix_fft@tr+1,w,c
  3480  0076F0  2014               	addwfc	??_fix_fft+1,w,c
  3481  0076F2  6E34               	movwf	fix_fft@tr+1,c
  3482                           
  3483                           ;fft.c: 135: c = ((long int)wr * (long int)fi[j]);
  3484  0076F4  C02B  F001         	movff	fix_fft@wr,___lmul@multiplier
  3485  0076F8  C02C  F002         	movff	fix_fft@wr+1,___lmul@multiplier+1
  3486  0076FC  0E00               	movlw	0
  3487  0076FE  BE02               	btfsc	___lmul@multiplier+1,7,c
  3488  007700  0EFF               	movlw	-1
  3489  007702  6E03               	movwf	___lmul@multiplier+2,c
  3490  007704  6E04               	movwf	___lmul@multiplier+3,c
  3491  007706  90D8               	bcf	status,0,c
  3492  007708  3445               	rlcf	fix_fft@j,w,c
  3493  00770A  6ED9               	movwf	fsr2l,c
  3494  00770C  3446               	rlcf	fix_fft@j+1,w,c
  3495  00770E  6EDA               	movwf	fsr2h,c
  3496  007710  500F               	movf	fix_fft@fi,w,c
  3497  007712  26D9               	addwf	fsr2l,f,c
  3498  007714  5010               	movf	fix_fft@fi+1,w,c
  3499  007716  22DA               	addwfc	fsr2h,f,c
  3500  007718  CFDE F005          	movff	postinc2,___lmul@multiplicand
  3501  00771C  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  3502  007720  0E00               	movlw	0
  3503  007722  BE06               	btfsc	___lmul@multiplicand+1,7,c
  3504  007724  0EFF               	movlw	-1
  3505  007726  6E07               	movwf	___lmul@multiplicand+2,c
  3506  007728  6E08               	movwf	___lmul@multiplicand+3,c
  3507  00772A  EC6D  F035         	call	___lmul	;wreg free
  3508  00772E  C001  F049         	movff	?___lmul,fix_fft@c
  3509  007732  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  3510  007736  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  3511  00773A  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  3512                           
  3513                           ;fft.c: 136: c = c >> 14;
  3514  00773E  0E0E               	movlw	14
  3515  007740  6E13               	movwf	??_fix_fft& (0+255),c
  3516  007742  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  3517  007746  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  3518  00774A  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  3519  00774E  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  3520  007752                     u985:
  3521  007752  6613               	tstfsz	??_fix_fft,c
  3522  007754  D001               	goto	u986
  3523  007756  D007               	goto	u987
  3524  007758                     u986:
  3525  007758  3417               	rlcf	??_fix_fft+4,w,c
  3526  00775A  3217               	rrcf	??_fix_fft+4,f,c
  3527  00775C  3216               	rrcf	??_fix_fft+3,f,c
  3528  00775E  3215               	rrcf	??_fix_fft+2,f,c
  3529  007760  3214               	rrcf	??_fix_fft+1,f,c
  3530  007762  2E13               	decfsz	??_fix_fft,f,c
  3531  007764  D7F6               	goto	u985
  3532  007766                     u987:
  3533  007766  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  3534  00776A  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  3535  00776E  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  3536  007772  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  3537                           
  3538                           ;fft.c: 137: b = c & 0x01;
  3539  007776  0E01               	movlw	1
  3540  007778  1449               	andwf	fix_fft@c,w,c
  3541  00777A  6E37               	movwf	fix_fft@b,c
  3542  00777C  6A38               	clrf	fix_fft@b+1,c
  3543                           
  3544                           ;fft.c: 138: ti = (c >> 1) + b;
  3545  00777E  C049  F013         	movff	fix_fft@c,??_fix_fft
  3546  007782  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  3547  007786  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  3548  00778A  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  3549  00778E  3416               	rlcf	??_fix_fft+3,w,c
  3550  007790  3216               	rrcf	??_fix_fft+3,f,c
  3551  007792  3215               	rrcf	??_fix_fft+2,f,c
  3552  007794  3214               	rrcf	??_fix_fft+1,f,c
  3553  007796  3213               	rrcf	??_fix_fft,f,c
  3554  007798  5037               	movf	fix_fft@b,w,c
  3555  00779A  2413               	addwf	??_fix_fft,w,c
  3556  00779C  6E35               	movwf	fix_fft@ti,c
  3557  00779E  5038               	movf	fix_fft@b+1,w,c
  3558  0077A0  2014               	addwfc	??_fix_fft+1,w,c
  3559  0077A2  6E36               	movwf	fix_fft@ti+1,c
  3560                           
  3561                           ;fft.c: 140: c = ((long int)wi * (long int)fr[j]);
  3562  0077A4  C02D  F001         	movff	fix_fft@wi,___lmul@multiplier
  3563  0077A8  C02E  F002         	movff	fix_fft@wi+1,___lmul@multiplier+1
  3564  0077AC  0E00               	movlw	0
  3565  0077AE  BE02               	btfsc	___lmul@multiplier+1,7,c
  3566  0077B0  0EFF               	movlw	-1
  3567  0077B2  6E03               	movwf	___lmul@multiplier+2,c
  3568  0077B4  6E04               	movwf	___lmul@multiplier+3,c
  3569  0077B6  90D8               	bcf	status,0,c
  3570  0077B8  3445               	rlcf	fix_fft@j,w,c
  3571  0077BA  6ED9               	movwf	fsr2l,c
  3572  0077BC  3446               	rlcf	fix_fft@j+1,w,c
  3573  0077BE  6EDA               	movwf	fsr2h,c
  3574  0077C0  500D               	movf	fix_fft@fr,w,c
  3575  0077C2  26D9               	addwf	fsr2l,f,c
  3576  0077C4  500E               	movf	fix_fft@fr+1,w,c
  3577  0077C6  22DA               	addwfc	fsr2h,f,c
  3578  0077C8  CFDE F005          	movff	postinc2,___lmul@multiplicand
  3579  0077CC  CFDD F006          	movff	postdec2,___lmul@multiplicand+1
  3580  0077D0  0E00               	movlw	0
  3581  0077D2  BE06               	btfsc	___lmul@multiplicand+1,7,c
  3582  0077D4  0EFF               	movlw	-1
  3583  0077D6  6E07               	movwf	___lmul@multiplicand+2,c
  3584  0077D8  6E08               	movwf	___lmul@multiplicand+3,c
  3585  0077DA  EC6D  F035         	call	___lmul	;wreg free
  3586  0077DE  C001  F049         	movff	?___lmul,fix_fft@c
  3587  0077E2  C002  F04A         	movff	?___lmul+1,fix_fft@c+1
  3588  0077E6  C003  F04B         	movff	?___lmul+2,fix_fft@c+2
  3589  0077EA  C004  F04C         	movff	?___lmul+3,fix_fft@c+3
  3590                           
  3591                           ;fft.c: 141: c = c >> 14;
  3592  0077EE  0E0E               	movlw	14
  3593  0077F0  6E13               	movwf	??_fix_fft& (0+255),c
  3594  0077F2  C049  F014         	movff	fix_fft@c,??_fix_fft+1
  3595  0077F6  C04A  F015         	movff	fix_fft@c+1,??_fix_fft+2
  3596  0077FA  C04B  F016         	movff	fix_fft@c+2,??_fix_fft+3
  3597  0077FE  C04C  F017         	movff	fix_fft@c+3,??_fix_fft+4
  3598  007802                     u995:
  3599  007802  6613               	tstfsz	??_fix_fft,c
  3600  007804  D001               	goto	u996
  3601  007806  D007               	goto	u997
  3602  007808                     u996:
  3603  007808  3417               	rlcf	??_fix_fft+4,w,c
  3604  00780A  3217               	rrcf	??_fix_fft+4,f,c
  3605  00780C  3216               	rrcf	??_fix_fft+3,f,c
  3606  00780E  3215               	rrcf	??_fix_fft+2,f,c
  3607  007810  3214               	rrcf	??_fix_fft+1,f,c
  3608  007812  2E13               	decfsz	??_fix_fft,f,c
  3609  007814  D7F6               	goto	u995
  3610  007816                     u997:
  3611  007816  C014  F049         	movff	??_fix_fft+1,fix_fft@c
  3612  00781A  C015  F04A         	movff	??_fix_fft+2,fix_fft@c+1
  3613  00781E  C016  F04B         	movff	??_fix_fft+3,fix_fft@c+2
  3614  007822  C017  F04C         	movff	??_fix_fft+4,fix_fft@c+3
  3615                           
  3616                           ;fft.c: 142: b = c & 0x01;
  3617  007826  0E01               	movlw	1
  3618  007828  1449               	andwf	fix_fft@c,w,c
  3619  00782A  6E37               	movwf	fix_fft@b,c
  3620  00782C  6A38               	clrf	fix_fft@b+1,c
  3621                           
  3622                           ;fft.c: 143: ti = ti + ((c >> 1) + b);
  3623  00782E  C049  F013         	movff	fix_fft@c,??_fix_fft
  3624  007832  C04A  F014         	movff	fix_fft@c+1,??_fix_fft+1
  3625  007836  C04B  F015         	movff	fix_fft@c+2,??_fix_fft+2
  3626  00783A  C04C  F016         	movff	fix_fft@c+3,??_fix_fft+3
  3627  00783E  3416               	rlcf	??_fix_fft+3,w,c
  3628  007840  3216               	rrcf	??_fix_fft+3,f,c
  3629  007842  3215               	rrcf	??_fix_fft+2,f,c
  3630  007844  3214               	rrcf	??_fix_fft+1,f,c
  3631  007846  3213               	rrcf	??_fix_fft,f,c
  3632  007848  5037               	movf	fix_fft@b,w,c
  3633  00784A  2613               	addwf	??_fix_fft,f,c
  3634  00784C  5038               	movf	fix_fft@b+1,w,c
  3635  00784E  2214               	addwfc	??_fix_fft+1,f,c
  3636  007850  5035               	movf	fix_fft@ti,w,c
  3637  007852  2413               	addwf	??_fix_fft,w,c
  3638  007854  6E35               	movwf	fix_fft@ti,c
  3639  007856  5036               	movf	fix_fft@ti+1,w,c
  3640  007858  2014               	addwfc	??_fix_fft+1,w,c
  3641  00785A  6E36               	movwf	fix_fft@ti+1,c
  3642                           
  3643                           ;fft.c: 145: qr = fr[i];
  3644  00785C  90D8               	bcf	status,0,c
  3645  00785E  3439               	rlcf	fix_fft@i,w,c
  3646  007860  6ED9               	movwf	fsr2l,c
  3647  007862  343A               	rlcf	fix_fft@i+1,w,c
  3648  007864  6EDA               	movwf	fsr2h,c
  3649  007866  500D               	movf	fix_fft@fr,w,c
  3650  007868  26D9               	addwf	fsr2l,f,c
  3651  00786A  500E               	movf	fix_fft@fr+1,w,c
  3652  00786C  22DA               	addwfc	fsr2h,f,c
  3653  00786E  CFDE F027          	movff	postinc2,fix_fft@qr
  3654  007872  CFDD F028          	movff	postdec2,fix_fft@qr+1
  3655                           
  3656                           ;fft.c: 146: qi = fi[i];
  3657  007876  90D8               	bcf	status,0,c
  3658  007878  3439               	rlcf	fix_fft@i,w,c
  3659  00787A  6ED9               	movwf	fsr2l,c
  3660  00787C  343A               	rlcf	fix_fft@i+1,w,c
  3661  00787E  6EDA               	movwf	fsr2h,c
  3662  007880  500F               	movf	fix_fft@fi,w,c
  3663  007882  26D9               	addwf	fsr2l,f,c
  3664  007884  5010               	movf	fix_fft@fi+1,w,c
  3665  007886  22DA               	addwfc	fsr2h,f,c
  3666  007888  CFDE F029          	movff	postinc2,fix_fft@qi
  3667  00788C  CFDD F02A          	movff	postdec2,fix_fft@qi+1
  3668                           
  3669                           ;fft.c: 147: qr >>= 1;
  3670  007890  3428               	rlcf	fix_fft@qr+1,w,c
  3671  007892  3228               	rrcf	fix_fft@qr+1,f,c
  3672  007894  3227               	rrcf	fix_fft@qr,f,c
  3673                           
  3674                           ;fft.c: 148: qi >>= 1;
  3675  007896  342A               	rlcf	fix_fft@qi+1,w,c
  3676  007898  322A               	rrcf	fix_fft@qi+1,f,c
  3677  00789A  3229               	rrcf	fix_fft@qi,f,c
  3678                           
  3679                           ;fft.c: 150: fr[j] = qr - tr;
  3680  00789C  C033  F013         	movff	fix_fft@tr,??_fix_fft
  3681  0078A0  C034  F014         	movff	fix_fft@tr+1,??_fix_fft+1
  3682  0078A4  1E13               	comf	??_fix_fft,f,c
  3683  0078A6  1E14               	comf	??_fix_fft+1,f,c
  3684  0078A8  4A13               	infsnz	??_fix_fft,f,c
  3685  0078AA  2A14               	incf	??_fix_fft+1,f,c
  3686  0078AC  5027               	movf	fix_fft@qr,w,c
  3687  0078AE  2613               	addwf	??_fix_fft,f,c
  3688  0078B0  5028               	movf	fix_fft@qr+1,w,c
  3689  0078B2  2214               	addwfc	??_fix_fft+1,f,c
  3690  0078B4  90D8               	bcf	status,0,c
  3691  0078B6  3445               	rlcf	fix_fft@j,w,c
  3692  0078B8  6ED9               	movwf	fsr2l,c
  3693  0078BA  3446               	rlcf	fix_fft@j+1,w,c
  3694  0078BC  6EDA               	movwf	fsr2h,c
  3695  0078BE  500D               	movf	fix_fft@fr,w,c
  3696  0078C0  26D9               	addwf	fsr2l,f,c
  3697  0078C2  500E               	movf	fix_fft@fr+1,w,c
  3698  0078C4  22DA               	addwfc	fsr2h,f,c
  3699  0078C6  C013  FFDE         	movff	??_fix_fft,postinc2
  3700  0078CA  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3701                           
  3702                           ;fft.c: 151: fi[j] = qi - ti;
  3703  0078CE  C035  F013         	movff	fix_fft@ti,??_fix_fft
  3704  0078D2  C036  F014         	movff	fix_fft@ti+1,??_fix_fft+1
  3705  0078D6  1E13               	comf	??_fix_fft,f,c
  3706  0078D8  1E14               	comf	??_fix_fft+1,f,c
  3707  0078DA  4A13               	infsnz	??_fix_fft,f,c
  3708  0078DC  2A14               	incf	??_fix_fft+1,f,c
  3709  0078DE  5029               	movf	fix_fft@qi,w,c
  3710  0078E0  2613               	addwf	??_fix_fft,f,c
  3711  0078E2  502A               	movf	fix_fft@qi+1,w,c
  3712  0078E4  2214               	addwfc	??_fix_fft+1,f,c
  3713  0078E6  90D8               	bcf	status,0,c
  3714  0078E8  3445               	rlcf	fix_fft@j,w,c
  3715  0078EA  6ED9               	movwf	fsr2l,c
  3716  0078EC  3446               	rlcf	fix_fft@j+1,w,c
  3717  0078EE  6EDA               	movwf	fsr2h,c
  3718  0078F0  500F               	movf	fix_fft@fi,w,c
  3719  0078F2  26D9               	addwf	fsr2l,f,c
  3720  0078F4  5010               	movf	fix_fft@fi+1,w,c
  3721  0078F6  22DA               	addwfc	fsr2h,f,c
  3722  0078F8  C013  FFDE         	movff	??_fix_fft,postinc2
  3723  0078FC  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3724                           
  3725                           ;fft.c: 152: fr[i] = qr + tr;
  3726  007900  C027  F013         	movff	fix_fft@qr,??_fix_fft
  3727  007904  C028  F014         	movff	fix_fft@qr+1,??_fix_fft+1
  3728  007908  5033               	movf	fix_fft@tr,w,c
  3729  00790A  2613               	addwf	??_fix_fft,f,c
  3730  00790C  5034               	movf	fix_fft@tr+1,w,c
  3731  00790E  2214               	addwfc	??_fix_fft+1,f,c
  3732  007910  90D8               	bcf	status,0,c
  3733  007912  3439               	rlcf	fix_fft@i,w,c
  3734  007914  6ED9               	movwf	fsr2l,c
  3735  007916  343A               	rlcf	fix_fft@i+1,w,c
  3736  007918  6EDA               	movwf	fsr2h,c
  3737  00791A  500D               	movf	fix_fft@fr,w,c
  3738  00791C  26D9               	addwf	fsr2l,f,c
  3739  00791E  500E               	movf	fix_fft@fr+1,w,c
  3740  007920  22DA               	addwfc	fsr2h,f,c
  3741  007922  C013  FFDE         	movff	??_fix_fft,postinc2
  3742  007926  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3743                           
  3744                           ;fft.c: 153: fi[i] = qi + ti;
  3745  00792A  C029  F013         	movff	fix_fft@qi,??_fix_fft
  3746  00792E  C02A  F014         	movff	fix_fft@qi+1,??_fix_fft+1
  3747  007932  5035               	movf	fix_fft@ti,w,c
  3748  007934  2613               	addwf	??_fix_fft,f,c
  3749  007936  5036               	movf	fix_fft@ti+1,w,c
  3750  007938  2214               	addwfc	??_fix_fft+1,f,c
  3751  00793A  90D8               	bcf	status,0,c
  3752  00793C  3439               	rlcf	fix_fft@i,w,c
  3753  00793E  6ED9               	movwf	fsr2l,c
  3754  007940  343A               	rlcf	fix_fft@i+1,w,c
  3755  007942  6EDA               	movwf	fsr2h,c
  3756  007944  500F               	movf	fix_fft@fi,w,c
  3757  007946  26D9               	addwf	fsr2l,f,c
  3758  007948  5010               	movf	fix_fft@fi+1,w,c
  3759  00794A  22DA               	addwfc	fsr2h,f,c
  3760  00794C  C013  FFDE         	movff	??_fix_fft,postinc2
  3761  007950  C014  FFDD         	movff	??_fix_fft+1,postdec2
  3762  007954  5023               	movf	fix_fft@istep,w,c
  3763  007956  2639               	addwf	fix_fft@i,f,c
  3764  007958  5024               	movf	fix_fft@istep+1,w,c
  3765  00795A  223A               	addwfc	fix_fft@i+1,f,c
  3766  00795C  5025               	movf	fix_fft@istep+2,w,c
  3767  00795E  223B               	addwfc	fix_fft@i+2,f,c
  3768  007960  5026               	movf	fix_fft@istep+3,w,c
  3769  007962  223C               	addwfc	fix_fft@i+3,f,c
  3770  007964                     l1515:
  3771  007964  503C               	movf	fix_fft@i+3,w,c
  3772  007966  0A80               	xorlw	128
  3773  007968  6E13               	movwf	??_fix_fft& (0+255),c
  3774  00796A  502F               	movf	fix_fft@n,w,c
  3775  00796C  5C39               	subwf	fix_fft@i,w,c
  3776  00796E  5030               	movf	fix_fft@n+1,w,c
  3777  007970  583A               	subwfb	fix_fft@i+1,w,c
  3778  007972  5031               	movf	fix_fft@n+2,w,c
  3779  007974  583B               	subwfb	fix_fft@i+2,w,c
  3780  007976  5032               	movf	fix_fft@n+3,w,c
  3781  007978  0A80               	xorlw	128
  3782  00797A  5813               	subwfb	??_fix_fft& (0+255),w,c
  3783  00797C  A0D8               	btfss	status,0,c
  3784  00797E  D5F6               	goto	l1471
  3785  007980  4A11               	infsnz	fix_fft@m,f,c
  3786  007982  2A12               	incf	fix_fft@m+1,f,c
  3787  007984                     l1519:
  3788  007984  C011  F013         	movff	fix_fft@m,??_fix_fft
  3789  007988  C012  F014         	movff	fix_fft@m+1,??_fix_fft+1
  3790  00798C  0E00               	movlw	0
  3791  00798E  BE14               	btfsc	(??_fix_fft+1)& (0+255),7,c
  3792  007990  0EFF               	movlw	255
  3793  007992  6E15               	movwf	(??_fix_fft+2)& (0+255),c
  3794  007994  6E16               	movwf	(??_fix_fft+3)& (0+255),c
  3795  007996  5016               	movf	??_fix_fft+3,w,c
  3796  007998  0A80               	xorlw	128
  3797  00799A  6E17               	movwf	(??_fix_fft+4)& (0+255),c
  3798  00799C  5041               	movf	fix_fft@l,w,c
  3799  00799E  5C13               	subwf	??_fix_fft,w,c
  3800  0079A0  5042               	movf	fix_fft@l+1,w,c
  3801  0079A2  5814               	subwfb	??_fix_fft+1,w,c
  3802  0079A4  5043               	movf	fix_fft@l+2,w,c
  3803  0079A6  5815               	subwfb	??_fix_fft+2,w,c
  3804  0079A8  5044               	movf	fix_fft@l+3,w,c
  3805  0079AA  0A80               	xorlw	128
  3806  0079AC  5817               	subwfb	(??_fix_fft+4)& (0+255),w,c
  3807  0079AE  A0D8               	btfss	status,0,c
  3808  0079B0  D581               	goto	l1463
  3809                           
  3810                           ;fft.c: 154: }
  3811                           ;fft.c: 155: }
  3812                           ;fft.c: 157: --k;
  3813  0079B2  0EFF               	movlw	255
  3814  0079B4  261B               	addwf	fix_fft@k,f,c
  3815  0079B6  0EFF               	movlw	255
  3816  0079B8  221C               	addwfc	fix_fft@k+1,f,c
  3817  0079BA  0EFF               	movlw	255
  3818  0079BC  221D               	addwfc	fix_fft@k+2,f,c
  3819  0079BE  0EFF               	movlw	255
  3820  0079C0  221E               	addwfc	fix_fft@k+3,f,c
  3821                           
  3822                           ;fft.c: 158: l = istep;
  3823  0079C2  C023  F041         	movff	fix_fft@istep,fix_fft@l
  3824  0079C6  C024  F042         	movff	fix_fft@istep+1,fix_fft@l+1
  3825  0079CA  C025  F043         	movff	fix_fft@istep+2,fix_fft@l+2
  3826  0079CE  C026  F044         	movff	fix_fft@istep+3,fix_fft@l+3
  3827  0079D2                     l115:
  3828  0079D2  5044               	movf	fix_fft@l+3,w,c
  3829  0079D4  0A80               	xorlw	128
  3830  0079D6  6E13               	movwf	??_fix_fft& (0+255),c
  3831  0079D8  502F               	movf	fix_fft@n,w,c
  3832  0079DA  5C41               	subwf	fix_fft@l,w,c
  3833  0079DC  5030               	movf	fix_fft@n+1,w,c
  3834  0079DE  5842               	subwfb	fix_fft@l+1,w,c
  3835  0079E0  5031               	movf	fix_fft@n+2,w,c
  3836  0079E2  5843               	subwfb	fix_fft@l+2,w,c
  3837  0079E4  5032               	movf	fix_fft@n+3,w,c
  3838  0079E6  0A80               	xorlw	128
  3839  0079E8  5813               	subwfb	??_fix_fft& (0+255),w,c
  3840  0079EA  B0D8               	btfsc	status,0,c
  3841  0079EC  0012               	return	
  3842  0079EE  D554               	goto	l1459
  3843  0079F0                     __end_of_fix_fft:
  3844                           	opt stack 0
  3845                           tblptru	equ	0xFF8
  3846                           tblptrh	equ	0xFF7
  3847                           tblptrl	equ	0xFF6
  3848                           tablat	equ	0xFF5
  3849                           prodh	equ	0xFF4
  3850                           prodl	equ	0xFF3
  3851                           postinc0	equ	0xFEE
  3852                           wreg	equ	0xFE8
  3853                           postinc1	equ	0xFE6
  3854                           postdec1	equ	0xFE5
  3855                           fsr1h	equ	0xFE2
  3856                           fsr1l	equ	0xFE1
  3857                           indf2	equ	0xFDF
  3858                           postinc2	equ	0xFDE
  3859                           postdec2	equ	0xFDD
  3860                           fsr2h	equ	0xFDA
  3861                           fsr2l	equ	0xFD9
  3862                           status	equ	0xFD8
  3863                           
  3864 ;; *************** function ___lmul *****************
  3865 ;; Defined at:
  3866 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/Umul32.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  multiplier      4    0[COMRAM] unsigned long 
  3869 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  product         4    8[COMRAM] unsigned long 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  4    0[COMRAM] unsigned long 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3881 ;;      Params:         8       0       0       0       0       0       0
  3882 ;;      Locals:         4       0       0       0       0       0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0
  3884 ;;      Totals:        12       0       0       0       0       0       0
  3885 ;;Total ram usage:       12 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_fix_fft
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text9
  3895  006ADA                     __ptext9:
  3896                           	opt stack 0
  3897  006ADA                     ___lmul:
  3898                           	opt stack 29
  3899                           
  3900                           ;incstack = 0
  3901  006ADA  0E00               	movlw	0
  3902  006ADC  6E09               	movwf	___lmul@product,c
  3903  006ADE  0E00               	movlw	0
  3904  006AE0  6E0A               	movwf	___lmul@product+1,c
  3905  006AE2  0E00               	movlw	0
  3906  006AE4  6E0B               	movwf	___lmul@product+2,c
  3907  006AE6  0E00               	movlw	0
  3908  006AE8  6E0C               	movwf	___lmul@product+3,c
  3909  006AEA                     l1361:
  3910  006AEA  A001               	btfss	___lmul@multiplier,0,c
  3911  006AEC  D008               	goto	l1365
  3912  006AEE  5005               	movf	___lmul@multiplicand,w,c
  3913  006AF0  2609               	addwf	___lmul@product,f,c
  3914  006AF2  5006               	movf	___lmul@multiplicand+1,w,c
  3915  006AF4  220A               	addwfc	___lmul@product+1,f,c
  3916  006AF6  5007               	movf	___lmul@multiplicand+2,w,c
  3917  006AF8  220B               	addwfc	___lmul@product+2,f,c
  3918  006AFA  5008               	movf	___lmul@multiplicand+3,w,c
  3919  006AFC  220C               	addwfc	___lmul@product+3,f,c
  3920  006AFE                     l1365:
  3921  006AFE  90D8               	bcf	status,0,c
  3922  006B00  3605               	rlcf	___lmul@multiplicand,f,c
  3923  006B02  3606               	rlcf	___lmul@multiplicand+1,f,c
  3924  006B04  3607               	rlcf	___lmul@multiplicand+2,f,c
  3925  006B06  3608               	rlcf	___lmul@multiplicand+3,f,c
  3926  006B08  90D8               	bcf	status,0,c
  3927  006B0A  3204               	rrcf	___lmul@multiplier+3,f,c
  3928  006B0C  3203               	rrcf	___lmul@multiplier+2,f,c
  3929  006B0E  3202               	rrcf	___lmul@multiplier+1,f,c
  3930  006B10  3201               	rrcf	___lmul@multiplier,f,c
  3931  006B12  5004               	movf	___lmul@multiplier+3,w,c
  3932  006B14  1001               	iorwf	___lmul@multiplier,w,c
  3933  006B16  1002               	iorwf	___lmul@multiplier+1,w,c
  3934  006B18  1003               	iorwf	___lmul@multiplier+2,w,c
  3935  006B1A  A4D8               	btfss	status,2,c
  3936  006B1C  D7E6               	goto	l1361
  3937  006B1E  C009  F001         	movff	___lmul@product,?___lmul
  3938  006B22  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3939  006B26  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3940  006B2A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3941  006B2E  0012               	return	
  3942  006B30                     __end_of___lmul:
  3943                           	opt stack 0
  3944                           tblptru	equ	0xFF8
  3945                           tblptrh	equ	0xFF7
  3946                           tblptrl	equ	0xFF6
  3947                           tablat	equ	0xFF5
  3948                           prodh	equ	0xFF4
  3949                           prodl	equ	0xFF3
  3950                           postinc0	equ	0xFEE
  3951                           wreg	equ	0xFE8
  3952                           postinc1	equ	0xFE6
  3953                           postdec1	equ	0xFE5
  3954                           fsr1h	equ	0xFE2
  3955                           fsr1l	equ	0xFE1
  3956                           indf2	equ	0xFDF
  3957                           postinc2	equ	0xFDE
  3958                           postdec2	equ	0xFDD
  3959                           fsr2h	equ	0xFDA
  3960                           fsr2l	equ	0xFD9
  3961                           status	equ	0xFD8
  3962                           
  3963 ;; *************** function ___wmul *****************
  3964 ;; Defined at:
  3965 ;;		line 15 in file "/Applications/microchip/xc8/v1.33/sources/common/Umul16.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  multiplier      2    0[COMRAM] unsigned int 
  3968 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  product         2    4[COMRAM] unsigned int 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  2    0[COMRAM] unsigned int 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0, prodl, prodh
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3980 ;;      Params:         4       0       0       0       0       0       0
  3981 ;;      Locals:         2       0       0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0
  3983 ;;      Totals:         6       0       0       0       0       0       0
  3984 ;;Total ram usage:        6 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_main
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text10
  3994  006982                     __ptext10:
  3995                           	opt stack 0
  3996  006982                     ___wmul:
  3997                           	opt stack 30
  3998                           
  3999                           ;incstack = 0
  4000  006982  5001               	movf	___wmul@multiplier,w,c
  4001  006984  0203               	mulwf	___wmul@multiplicand,c
  4002  006986  CFF3 F005          	movff	prodl,___wmul@product
  4003  00698A  CFF4 F006          	movff	prodh,___wmul@product+1
  4004  00698E  5001               	movf	___wmul@multiplier,w,c
  4005  006990  0204               	mulwf	___wmul@multiplicand+1,c
  4006  006992  50F3               	movf	prodl,w,c
  4007  006994  2606               	addwf	___wmul@product+1,f,c
  4008  006996  5002               	movf	___wmul@multiplier+1,w,c
  4009  006998  0203               	mulwf	___wmul@multiplicand,c
  4010  00699A  50F3               	movf	prodl,w,c
  4011  00699C  2606               	addwf	___wmul@product+1,f,c
  4012  00699E  C005  F001         	movff	___wmul@product,?___wmul
  4013  0069A2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4014  0069A6  0012               	return	
  4015  0069A8                     __end_of___wmul:
  4016                           	opt stack 0
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodh	equ	0xFF4
  4022                           prodl	equ	0xFF3
  4023                           postinc0	equ	0xFEE
  4024                           wreg	equ	0xFE8
  4025                           postinc1	equ	0xFE6
  4026                           postdec1	equ	0xFE5
  4027                           fsr1h	equ	0xFE2
  4028                           fsr1l	equ	0xFE1
  4029                           indf2	equ	0xFDF
  4030                           postinc2	equ	0xFDE
  4031                           postdec2	equ	0xFDD
  4032                           fsr2h	equ	0xFDA
  4033                           fsr2l	equ	0xFD9
  4034                           status	equ	0xFD8
  4035                           
  4036 ;; *************** function _ReadADC *****************
  4037 ;; Defined at:
  4038 ;;		line 24 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcread.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  2    0[COMRAM] int 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4052 ;;      Params:         2       0       0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0
  4055 ;;      Totals:         2       0       0       0       0       0       0
  4056 ;;Total ram usage:        2 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_main
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text11
  4066  006938                     __ptext11:
  4067                           	opt stack 0
  4068  006938                     _ReadADC:
  4069                           	opt stack 30
  4070                           
  4071                           ;incstack = 0
  4072  006938  50C4               	movf	4036,w,c	;volatile
  4073  00693A  6E02               	movwf	?_ReadADC+1,c
  4074  00693C  50C3               	movf	4035,w,c	;volatile
  4075  00693E  6E01               	movwf	?_ReadADC,c
  4076  006940  0012               	return	
  4077  006942                     __end_of_ReadADC:
  4078                           	opt stack 0
  4079                           tblptru	equ	0xFF8
  4080                           tblptrh	equ	0xFF7
  4081                           tblptrl	equ	0xFF6
  4082                           tablat	equ	0xFF5
  4083                           prodh	equ	0xFF4
  4084                           prodl	equ	0xFF3
  4085                           postinc0	equ	0xFEE
  4086                           wreg	equ	0xFE8
  4087                           postinc1	equ	0xFE6
  4088                           postdec1	equ	0xFE5
  4089                           fsr1h	equ	0xFE2
  4090                           fsr1l	equ	0xFE1
  4091                           indf2	equ	0xFDF
  4092                           postinc2	equ	0xFDE
  4093                           postdec2	equ	0xFDD
  4094                           fsr2h	equ	0xFDA
  4095                           fsr2l	equ	0xFD9
  4096                           status	equ	0xFD8
  4097                           
  4098 ;; *************** function _OpenADC *****************
  4099 ;; Defined at:
  4100 ;;		line 305 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcopen.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  config          1    wreg     unsigned char 
  4103 ;;  config2         1    0[COMRAM] unsigned char 
  4104 ;;  config3         1    1[COMRAM] unsigned char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  config          1    4[COMRAM] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;		None               void
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4116 ;;      Params:         2       0       0       0       0       0       0
  4117 ;;      Locals:         1       0       0       0       0       0       0
  4118 ;;      Temps:          2       0       0       0       0       0       0
  4119 ;;      Totals:         5       0       0       0       0       0       0
  4120 ;;Total ram usage:        5 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_main
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text12
  4130  006A3A                     __ptext12:
  4131                           	opt stack 0
  4132  006A3A                     _OpenADC:
  4133                           	opt stack 30
  4134                           
  4135                           ;incstack = 0
  4136                           ;OpenADC@config stored from wreg
  4137  006A3A  6E05               	movwf	OpenADC@config,c
  4138  006A3C  0E00               	movlw	0
  4139  006A3E  6EC2               	movwf	4034,c	;volatile
  4140  006A40  0E00               	movlw	0
  4141  006A42  6EC1               	movwf	4033,c	;volatile
  4142  006A44  0E00               	movlw	0
  4143  006A46  6EC0               	movwf	4032,c	;volatile
  4144  006A48  5001               	movf	OpenADC@config2,w,c
  4145  006A4A  0B7C               	andlw	124
  4146  006A4C  6EC2               	movwf	4034,c	;volatile
  4147  006A4E  C002  FFC1         	movff	OpenADC@config3,4033	;volatile
  4148  006A52  C005  F003         	movff	OpenADC@config,??_OpenADC
  4149  006A56  90D8               	bcf	status,0,c
  4150  006A58  3603               	rlcf	??_OpenADC,f,c
  4151  006A5A  90D8               	bcf	status,0,c
  4152  006A5C  3603               	rlcf	??_OpenADC,f,c
  4153  006A5E  0E38               	movlw	56
  4154  006A60  1603               	andwf	??_OpenADC,f,c
  4155  006A62  C005  F004         	movff	OpenADC@config,??_OpenADC+1
  4156  006A66  3A04               	swapf	??_OpenADC+1,f,c
  4157  006A68  0E0F               	movlw	15
  4158  006A6A  1604               	andwf	??_OpenADC+1,f,c
  4159  006A6C  0E07               	movlw	7
  4160  006A6E  1604               	andwf	??_OpenADC+1,f,c
  4161  006A70  5005               	movf	OpenADC@config,w,c
  4162  006A72  0B80               	andlw	128
  4163  006A74  1004               	iorwf	??_OpenADC+1,w,c
  4164  006A76  1003               	iorwf	??_OpenADC,w,c
  4165  006A78  6EC0               	movwf	4032,c	;volatile
  4166  006A7A  AE01               	btfss	OpenADC@config2,7,c
  4167  006A7C  D003               	goto	l179
  4168  006A7E  9C9E               	bcf	3998,6,c	;volatile
  4169  006A80  8C9D               	bsf	3997,6,c	;volatile
  4170  006A82  8CF2               	bsf	intcon,6,c	;volatile
  4171  006A84                     l179:
  4172  006A84  80C2               	bsf	4034,0,c	;volatile
  4173  006A86  0012               	return	
  4174  006A88                     __end_of_OpenADC:
  4175                           	opt stack 0
  4176                           tblptru	equ	0xFF8
  4177                           tblptrh	equ	0xFF7
  4178                           tblptrl	equ	0xFF6
  4179                           tablat	equ	0xFF5
  4180                           prodh	equ	0xFF4
  4181                           prodl	equ	0xFF3
  4182                           intcon	equ	0xFF2
  4183                           postinc0	equ	0xFEE
  4184                           wreg	equ	0xFE8
  4185                           postinc1	equ	0xFE6
  4186                           postdec1	equ	0xFE5
  4187                           fsr1h	equ	0xFE2
  4188                           fsr1l	equ	0xFE1
  4189                           indf2	equ	0xFDF
  4190                           postinc2	equ	0xFDE
  4191                           postdec2	equ	0xFDD
  4192                           fsr2h	equ	0xFDA
  4193                           fsr2l	equ	0xFD9
  4194                           status	equ	0xFD8
  4195                           
  4196 ;; *************** function _Open1USART *****************
  4197 ;; Defined at:
  4198 ;;		line 124 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/USART/u1open.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  config          1    wreg     unsigned char 
  4201 ;;  spbrg           2    0[COMRAM] unsigned int 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  config          1    5[COMRAM] unsigned char 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;		None               void
  4206 ;; Registers used:
  4207 ;;		wreg, status,2
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4213 ;;      Params:         2       0       0       0       0       0       0
  4214 ;;      Locals:         1       0       0       0       0       0       0
  4215 ;;      Temps:          3       0       0       0       0       0       0
  4216 ;;      Totals:         6       0       0       0       0       0       0
  4217 ;;Total ram usage:        6 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text13
  4227  006B30                     __ptext13:
  4228                           	opt stack 0
  4229  006B30                     _Open1USART:
  4230                           	opt stack 30
  4231                           
  4232                           ;incstack = 0
  4233                           ;Open1USART@config stored from wreg
  4234  006B30  6E06               	movwf	Open1USART@config,c
  4235  006B32  0E00               	movlw	0
  4236  006B34  6EAC               	movwf	4012,c	;volatile
  4237  006B36  0E00               	movlw	0
  4238  006B38  6EAB               	movwf	4011,c	;volatile
  4239  006B3A  B006               	btfsc	Open1USART@config,0,c
  4240  006B3C  88AC               	bsf	4012,4,c	;volatile
  4241  006B3E  A206               	btfss	Open1USART@config,1,c
  4242  006B40  D002               	goto	l1391
  4243  006B42  8CAC               	bsf	4012,6,c	;volatile
  4244  006B44  8CAB               	bsf	4011,6,c	;volatile
  4245  006B46                     l1391:
  4246  006B46  B406               	btfsc	Open1USART@config,2,c
  4247  006B48  8EAC               	bsf	4012,7,c	;volatile
  4248  006B4A  A606               	btfss	Open1USART@config,3,c
  4249  006B4C  D002               	goto	l207
  4250  006B4E  88AB               	bsf	4011,4,c	;volatile
  4251  006B50  D001               	goto	l1399
  4252  006B52                     l207:
  4253  006B52  8AAB               	bsf	4011,5,c	;volatile
  4254  006B54                     l1399:
  4255  006B54  B806               	btfsc	Open1USART@config,4,c
  4256  006B56  84AC               	bsf	4012,2,c	;volatile
  4257  006B58  BA06               	btfsc	Open1USART@config,5,c
  4258  006B5A  86AB               	bsf	4011,3,c	;volatile
  4259  006B5C  AC06               	btfss	Open1USART@config,6,c
  4260  006B5E  D002               	goto	l211
  4261  006B60  8A9D               	bsf	3997,5,c	;volatile
  4262  006B62  D001               	goto	l1411
  4263  006B64                     l211:
  4264  006B64  9A9D               	bcf	3997,5,c	;volatile
  4265  006B66                     l1411:
  4266  006B66  AE06               	btfss	Open1USART@config,7,c
  4267  006B68  D002               	goto	l213
  4268  006B6A  889D               	bsf	3997,4,c	;volatile
  4269  006B6C  D001               	goto	l214
  4270  006B6E                     l213:
  4271  006B6E  989D               	bcf	3997,4,c	;volatile
  4272  006B70                     l214:
  4273  006B70  C001  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  4274  006B74  C002  F003         	movff	Open1USART@spbrg+1,??_Open1USART
  4275  006B78  C003  F004         	movff	??_Open1USART,??_Open1USART+1
  4276  006B7C  6A05               	clrf	(??_Open1USART+2)& (0+255),c
  4277  006B7E  5004               	movf	??_Open1USART+1,w,c
  4278  006B80  6EB0               	movwf	4016,c	;volatile
  4279  006B82  8AAC               	bsf	4012,5,c	;volatile
  4280  006B84  8EAB               	bsf	4011,7,c	;volatile
  4281  006B86  0012               	return	
  4282  006B88                     __end_of_Open1USART:
  4283                           	opt stack 0
  4284                           tblptru	equ	0xFF8
  4285                           tblptrh	equ	0xFF7
  4286                           tblptrl	equ	0xFF6
  4287                           tablat	equ	0xFF5
  4288                           prodh	equ	0xFF4
  4289                           prodl	equ	0xFF3
  4290                           intcon	equ	0xFF2
  4291                           postinc0	equ	0xFEE
  4292                           wreg	equ	0xFE8
  4293                           postinc1	equ	0xFE6
  4294                           postdec1	equ	0xFE5
  4295                           fsr1h	equ	0xFE2
  4296                           fsr1l	equ	0xFE1
  4297                           indf2	equ	0xFDF
  4298                           postinc2	equ	0xFDE
  4299                           postdec2	equ	0xFDD
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function _Delay10TCYx *****************
  4305 ;; Defined at:
  4306 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/pic18/d10tcyx.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  unit            1    wreg     unsigned char 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  unit            1    0[COMRAM] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;		None               void
  4313 ;; Registers used:
  4314 ;;		wreg
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4320 ;;      Params:         0       0       0       0       0       0       0
  4321 ;;      Locals:         1       0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0
  4323 ;;      Totals:         1       0       0       0       0       0       0
  4324 ;;Total ram usage:        1 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_main
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text14
  4334  00694E                     __ptext14:
  4335                           	opt stack 0
  4336  00694E                     _Delay10TCYx:
  4337                           	opt stack 30
  4338                           
  4339                           ;incstack = 0
  4340                           ;Delay10TCYx@unit stored from wreg
  4341  00694E  6E01               	movwf	Delay10TCYx@unit,c
  4342  006950                     l464:
  4343  006950  0E03               	movlw	3
  4344  006952                     u1207:
  4345  006952  2EE8               	decfsz	wreg,f,c
  4346  006954  D7FE               	goto	u1207
  4347  006956  F000               	nop	
  4348  006958  2E01               	decfsz	Delay10TCYx@unit,f,c
  4349  00695A  D7FA               	goto	l464
  4350  00695C  0012               	return	
  4351  00695E                     __end_of_Delay10TCYx:
  4352                           	opt stack 0
  4353                           tblptru	equ	0xFF8
  4354                           tblptrh	equ	0xFF7
  4355                           tblptrl	equ	0xFF6
  4356                           tablat	equ	0xFF5
  4357                           prodh	equ	0xFF4
  4358                           prodl	equ	0xFF3
  4359                           intcon	equ	0xFF2
  4360                           postinc0	equ	0xFEE
  4361                           wreg	equ	0xFE8
  4362                           postinc1	equ	0xFE6
  4363                           postdec1	equ	0xFE5
  4364                           fsr1h	equ	0xFE2
  4365                           fsr1l	equ	0xFE1
  4366                           indf2	equ	0xFDF
  4367                           postinc2	equ	0xFDE
  4368                           postdec2	equ	0xFDD
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           status	equ	0xFD8
  4372                           
  4373 ;; *************** function _ConvertADC *****************
  4374 ;; Defined at:
  4375 ;;		line 22 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcconv.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;		None               void
  4382 ;; Registers used:
  4383 ;;		None
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4389 ;;      Params:         0       0       0       0       0       0       0
  4390 ;;      Locals:         0       0       0       0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0
  4392 ;;      Totals:         0       0       0       0       0       0       0
  4393 ;;Total ram usage:        0 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text15
  4403  006934                     __ptext15:
  4404                           	opt stack 0
  4405  006934                     _ConvertADC:
  4406                           	opt stack 30
  4407                           
  4408                           ;incstack = 0
  4409  006934  82C2               	bsf	4034,1,c	;volatile
  4410  006936  0012               	return	
  4411  006938                     __end_of_ConvertADC:
  4412                           	opt stack 0
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           prodh	equ	0xFF4
  4418                           prodl	equ	0xFF3
  4419                           intcon	equ	0xFF2
  4420                           postinc0	equ	0xFEE
  4421                           wreg	equ	0xFE8
  4422                           postinc1	equ	0xFE6
  4423                           postdec1	equ	0xFE5
  4424                           fsr1h	equ	0xFE2
  4425                           fsr1l	equ	0xFE1
  4426                           indf2	equ	0xFDF
  4427                           postinc2	equ	0xFDE
  4428                           postdec2	equ	0xFDD
  4429                           fsr2h	equ	0xFDA
  4430                           fsr2l	equ	0xFD9
  4431                           status	equ	0xFD8
  4432                           
  4433 ;; *************** function _BusyADC *****************
  4434 ;; Defined at:
  4435 ;;		line 26 in file "/Applications/microchip/xc8/v1.33/sources/pic18/plib/ADC/adcbusy.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      unsigned char 
  4442 ;; Registers used:
  4443 ;;		wreg
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4449 ;;      Params:         0       0       0       0       0       0       0
  4450 ;;      Locals:         0       0       0       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0       0       0
  4452 ;;      Totals:         0       0       0       0       0       0       0
  4453 ;;Total ram usage:        0 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_main
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text16
  4463  006942                     __ptext16:
  4464                           	opt stack 0
  4465  006942                     _BusyADC:
  4466                           	opt stack 30
  4467                           
  4468                           ;incstack = 0
  4469  006942  A2C2               	btfss	4034,1,c	;volatile
  4470  006944  D002               	goto	u900
  4471  006946  0E01               	movlw	1
  4472  006948  0012               	return	
  4473  00694A                     u900:
  4474  00694A  0E00               	movlw	0
  4475  00694C  0012               	return	
  4476  00694E                     __end_of_BusyADC:
  4477                           	opt stack 0
  4478                           tblptru	equ	0xFF8
  4479                           tblptrh	equ	0xFF7
  4480                           tblptrl	equ	0xFF6
  4481                           tablat	equ	0xFF5
  4482                           prodh	equ	0xFF4
  4483                           prodl	equ	0xFF3
  4484                           intcon	equ	0xFF2
  4485                           postinc0	equ	0xFEE
  4486                           wreg	equ	0xFE8
  4487                           postinc1	equ	0xFE6
  4488                           postdec1	equ	0xFE5
  4489                           fsr1h	equ	0xFE2
  4490                           fsr1l	equ	0xFE1
  4491                           indf2	equ	0xFDF
  4492                           postinc2	equ	0xFDE
  4493                           postdec2	equ	0xFDD
  4494                           fsr2h	equ	0xFDA
  4495                           fsr2l	equ	0xFD9
  4496                           status	equ	0xFD8
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           prodh	equ	0xFF4
  4502                           prodl	equ	0xFF3
  4503                           intcon	equ	0xFF2
  4504                           postinc0	equ	0xFEE
  4505                           wreg	equ	0xFE8
  4506                           postinc1	equ	0xFE6
  4507                           postdec1	equ	0xFE5
  4508                           fsr1h	equ	0xFE2
  4509                           fsr1l	equ	0xFE1
  4510                           indf2	equ	0xFDF
  4511                           postinc2	equ	0xFDE
  4512                           postdec2	equ	0xFDD
  4513                           fsr2h	equ	0xFDA
  4514                           fsr2l	equ	0xFD9
  4515                           status	equ	0xFD8
  4516                           
  4517                           	psect	rparam
  4518  0000                     tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           prodh	equ	0xFF4
  4523                           prodl	equ	0xFF3
  4524                           intcon	equ	0xFF2
  4525                           postinc0	equ	0xFEE
  4526                           wreg	equ	0xFE8
  4527                           postinc1	equ	0xFE6
  4528                           postdec1	equ	0xFE5
  4529                           fsr1h	equ	0xFE2
  4530                           fsr1l	equ	0xFE1
  4531                           indf2	equ	0xFDF
  4532                           postinc2	equ	0xFDE
  4533                           postdec2	equ	0xFDD
  4534                           fsr2h	equ	0xFDA
  4535                           fsr2l	equ	0xFD9
  4536                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    1546
    Data        0
    BSS         265
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      93
    BANK0           160     18     151
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    putrs1USART@data	PTR const unsigned char  size(2) Largest target is 5
		 -> data(BANK0[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 5
		 -> data(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S334$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    fix_fft@fi	PTR short  size(2) Largest target is 128
		 -> imaginaryNumbers(BANK1[128]), 

    fix_fft@fr	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 

    sendIntArray@array	PTR short  size(2) Largest target is 128
		 -> realNumbers(BANK0[128]), 

    sendString@string	PTR unsigned char  size(2) Largest target is 5
		 -> data(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->_fix_fft
    _sendIntArray->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _sendString->_putrs1USART
    _putrs1USART->_Write1USART
    _fix_fft->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0    5865
                                             76 COMRAM    13    13      0
                                              0 BANK0     18    18      0
                            _BusyADC
                         _ConvertADC
                        _Delay10TCYx
                         _Open1USART
                            _OpenADC
                            _ReadADC
                             ___wmul
                            _fix_fft
                       _sendIntArray
 ---------------------------------------------------------------------------------
 (1) _sendIntArray                                         4     0      4    1460
                                             30 COMRAM     4     0      4
                         _sendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    12      6    1116
                                             12 COMRAM    18    12      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     265
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     268
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _sendString                                           2     0      2     194
                                              3 COMRAM     2     0      2
                        _putrs1USART
 ---------------------------------------------------------------------------------
 (3) _putrs1USART                                          2     0      2     119
                                              1 COMRAM     2     0      2
                        _Write1USART
 ---------------------------------------------------------------------------------
 (4) _Write1USART                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fix_fft                                             68    62      6    2782
                                             12 COMRAM    64    58      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     444
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     371
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     238
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Delay10TCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Delay10TCYx
   _Open1USART
   _OpenADC
   _ReadADC
   ___wmul
   _fix_fft
     ___lmul
   _sendIntArray
     _sendString
       _putrs1USART
         _Write1USART
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      80       6       50.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     12      97       4       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5D       1       97.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     174       9        0.0%
DATA                 0      0     174      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Nov 25 18:46:08 2014

                      _i 005A                       l88 6970      ___wmul@multiplicand 0003  
                    l211 6B64                      l115 79D2                      l213 6B6E  
                    l109 72C0                      l214 6B70                      l207 6B52  
                    l223 69A8                      l179 6A84                      l464 6950  
                    l760 6AD0                      l770 6A30                      u900 694A  
                    u914 7288                      u915 7282                      u954 74CA  
                    u955 74C4                      u965 75E2                      u966 75E8  
                    u975 7692                      u967 75F6                      u976 7698  
                    u985 7752                      u977 76A6                      u986 7758  
                    u995 7802                      u987 7766                      u996 7808  
                    u997 7816              _putrs1USART 69A8                      wreg 000FE8  
             _TXSTA1bits 000FAC             __CFG_LVP$OFF 000000                     l1301 6BF0  
                   l1313 6C34                     l1411 6B66                     l1251 696A  
                   l1323 6C6C                     l1307 6C0A                     l1263 6A9E  
                   l1351 6D18                     l1343 6CC0                     l1361 6AEA  
                   l1265 6AA6                     l1345 6CC6                     l1337 6CA4  
                   l1353 6D20                     l1515 7964                     l1275 6AC6  
                   l1267 6AAA                     l1291 6A26                     l1283 6A06  
                   l1355 6D36                     l1611 7002                     l1365 6AFE  
                   l1453 7444                     l1437 72D0                     l1285 6A0E  
                   l1533 6BD8                     l1613 7060                     l1391 6B46  
                   l1471 756C                     l1463 74B4                     l1519 7984  
                   l1455 7448                     l1287 6A12                     l1527 6B92  
                   l1623 71BE                     l1631 71FE                     l1609 6FC2  
                   l1625 71CC                     l1459 7498                     l1619 714C  
                   l1399 6B54                     l1591 6E4E                     l1567 6DAA  
                   l1577 6DD8                     STR_1 7FFB                     u1125 719A  
                   u1126 71A0                     u1207 6952                     u1127 71AE  
                   u1095 6FDE                     _LATC 000F8B                     u1096 6FE4  
                   u1097 6FF2                     u1197 6E40                     _PIE1 000F9D  
                   _data 00E0                     _main 6D44                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000          __end_of_BusyADC 694E          __end_of_ReadADC 6942  
            _Delay10TCYx 694E          __end_of_OpenADC 6A88                    ?_main 0001  
        __end_of___lwdiv 6ADA          __end_of___lwmod 6A3A                    _TRISC 000F94  
    ___lmul@multiplicand 0005          __end_of_fix_fft 79F0          __end_of_dpowers 7FFB  
                  _input 005D                    main@i 00F3                    main@k 00F5  
             _ConvertADC 6934                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 6D44            main@adc_value 00E9           __CFG_PBADEN$ON 000000  
        __initialization 69CE            main@baud_rate 00E5             __end_of_main 7264  
             _Open1USART 6B30                   ??_main 004D            __activetblptr 000002  
           fix_fft@istep 0023         __end_of_Sinewave 7FF1                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _ANSELC 000F3A           __CFG_WDTEN$OFF 000000  
                 _RCSTA1 000FAB                   _SPBRG1 000FAF                ??_BusyADC 0001  
                 _TXREG1 000FAD                ??_ReadADC 0003                   _TXSTA1 000FAC  
              ??_OpenADC 0003                   ___lmul 6ADA                   ___wmul 6982  
              ??___lwdiv 0005                ??___lwmod 000C                   clear_0 69D4  
                 clear_1 69E0                ??_fix_fft 0013             __mediumconst 79F0  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_sprintf 0013              ?_ConvertADC 0001               __accesstop 0060  
__end_of__initialization 69EE           __pcstackCOMRAM 0001              ?_Open1USART 0001  
           ?_putrs1USART 0002            ?_sendIntArray 001F               __pbssBANK0 0060  
             __pbssBANK1 0100          __CFG_PLLCFG$OFF 000000            ??_Write1USART 0001  
                ?___lmul 0001             ?_Delay10TCYx 0001                  ?___wmul 0001  
         ___lmul@product 0009      __size_of_ConvertADC 0004         Open1USART@config 0006  
         ??_sendIntArray 0023        __CFG_PRICLKEN$OFF 000000                  _SPBRGH1 000FB0  
    __size_of_Open1USART 0058                  _BusyADC 6942                  _ReadADC 6938  
                _OpenADC 6A3A                  __Hparam 0000                  __Lparam 0000  
    __end_of_Write1USART 6970          __size_of___lmul 0056          __size_of___wmul 0026  
                ___lwdiv 6A88                  ___lwmod 69F8                  __pcinit 69CE  
        Delay10TCYx@unit 0001                  __ramtop 0600                  __ptext0 6D44  
                __ptext1 6B88                  __ptext2 6BE6                  __ptext3 69F8  
                __ptext4 6A88                  __ptext5 6970                  __ptext6 69A8  
                __ptext7 695E                  __ptext8 7264                  __ptext9 6ADA  
                _fix_fft 7264                  _dpowers 7FF1           OpenADC@config2 0001  
         OpenADC@config3 0002                  _sprintf 6BE6     end_of_initialization 69EE  
             _sendString 6970            __Lmediumconst 79F0                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE        sendIntArray@array 001F         __CFG_FOSC$INTIO7 000000  
              _TRISCbits 000F94     __size_of_putrs1USART 0026             ??_ConvertADC 0001  
            _Write1USART 695E     __end_of_sendIntArray 6BE6           __end_of___lmul 6B30  
         __end_of___wmul 69A8     __size_of_Delay10TCYx 0010             ??_Open1USART 0003  
     __end_of_ConvertADC 6938      start_initialization 69CE              ?_sendString 0004  
     __end_of_Open1USART 6B88         _imaginaryNumbers 0100                 ??___lmul 0009  
               ??___wmul 0005              __pbssCOMRAM 005A            __pcstackBANK0 00E5  
    __end_of__stringdata 7FFE              sprintf@_val 0019              sprintf@flag 0017  
            sprintf@prec 0018                 ?_BusyADC 0001                 ?_ReadADC 0001  
               ?_OpenADC 0001         ___lwdiv@dividend 0001            __pmediumconst 79F0  
               ?___lwdiv 0001                 ?___lwmod 0008          Open1USART@spbrg 0001  
    __size_of_sendString 0012                 ?_fix_fft 000D         ___lwdiv@quotient 0005  
               ?_sprintf 000D          Write1USART@data 0001    __size_of_sendIntArray 005E  
         ___wmul@product 0005            OpenADC@config 0005                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         sendIntArray@size 0021               _ADCON0bits 000FC2  
            __stringdata 7FFB        ___wmul@multiplier 0001                main@place 00EF  
           _sendIntArray 6B88                fix_fft@fi 000F                fix_fft@fr 000D  
              fix_fft@nn 001F                fix_fft@qi 0029                fix_fft@mr 003D  
              fix_fft@ti 0035                fix_fft@qr 0027                fix_fft@wi 002D  
              fix_fft@tr 0033                fix_fft@wr 002B        ___lmul@multiplier 0001  
           ?_Write1USART 0001         __size_of_BusyADC 000C         __size_of_ReadADC 000A  
               __Hrparam 0000         __size_of_OpenADC 004E                 __Lrparam 0000  
               _Sinewave 79F1         __size_of___lwdiv 0052         __size_of___lwmod 0042  
          ??_putrs1USART 0004         __size_of_fix_fft 078C          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 6982                 __ptext11 6938  
               __ptext12 6A3A                 __ptext13 6B30                 __ptext14 694E  
               __ptext15 6934                 __ptext16 6942              _realNumbers 0060  
       __size_of_sprintf 015E             ??_sendString 0006            __size_of_main 0520  
       sendString@string 0004            ??_Delay10TCYx 0001                 main@root 00EB  
               fix_fft@b 0037                 fix_fft@c 0049                 fix_fft@i 0039  
               fix_fft@j 0045                 fix_fft@k 001B                 fix_fft@l 0041  
               fix_fft@m 0011                 fix_fft@n 002F            _USART1_Status 005C  
        putrs1USART@data 0002       __end_of_sendString 6982              _OSCTUNEbits 000F9B  
             _INTCONbits 000FF2      __end_of_putrs1USART 69CE                sprintf@ap 0015  
              sprintf@sp 000D         ___lwmod@dividend 0008               _RCSTA1bits 000FAB  
             _OSCCONbits 000FD3      __end_of_Delay10TCYx 695E                 sprintf@c 001E  
               sprintf@f 000F          ___lwmod@divisor 000A          ___lwmod@counter 000C  
   __size_of_Write1USART 0012  
